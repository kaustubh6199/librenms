--
-- Copyright(C) 2005-2013 ALAXALA Networks Corporation. All Rights Reserved.
--
-- AX7800S-MIB.my: Switching Router System information MIB file
--
AX7800S DEFINITIONS ::= BEGIN
IMPORTS
    enterprises, OBJECT-TYPE, NetworkAddress, IpAddress,
    Counter, Gauge, TimeTicks
        FROM RFC1155-SMI
    RouterID, AreaID, Status, BigMetric, DesignatedRouterPriority,
    HelloRange, Metric, PositiveInteger, UpToMaxAge
        FROM OSPF-MIB
    OBJECT-TYPE
        FROM RFC-1212
    TRAP-TYPE
        FROM RFC-1215
    ifIndex, DisplayString
        FROM RFC1213-MIB
    RowStatus, MacAddress, TruthValue, TimeStamp
        FROM SNMPv2-TC
    InterfaceIndex
        FROM IF-MIB
    Ipv6IfIndex, Ipv6Address, Ipv6AddressPrefix
        FROM IPV6-TC
    BridgeId, Timeout
        FROM BRIDGE-MIB
    PortList
        FROM Q-BRIDGE-MIB
    InetAddressType,InetAddress
        FROM INET-ADDRESS-MIB
    pimNeighborIfIndex
        FROM PIM-MIB
;

VlanIndex ::= INTEGER (1..2147483647)
VlanIdOrZero ::= INTEGER (0|1..4094)

alaxala            OBJECT IDENTIFIER ::= { enterprises 21839 }
alaxalaProductId   OBJECT IDENTIFIER ::= { alaxala 1 }
axSwitch           OBJECT IDENTIFIER ::= { alaxalaProductId 2 }
ax7800s            OBJECT IDENTIFIER ::= { axSwitch 2 }
ax5400s            OBJECT IDENTIFIER ::= { axSwitch 3 }

alaxalaMib         OBJECT IDENTIFIER ::= { alaxala 2 }
axsEx              OBJECT IDENTIFIER ::= { alaxalaMib 2 }

axsMib             OBJECT IDENTIFIER ::= { axsEx 1 }
ax7800sMib         OBJECT IDENTIFIER ::= { axsEx 2 }
ax5400sMib         OBJECT IDENTIFIER ::= { axsEx 3 }
-- device independent
axsStats              OBJECT IDENTIFIER ::= { axsMib 1 }
axsPhysStats          OBJECT IDENTIFIER ::= { axsStats 1 }
axsSonetStats         OBJECT IDENTIFIER ::= { axsStats 3 }
axsIfStats            OBJECT IDENTIFIER ::= { axsStats 4 }
axsQoS                OBJECT IDENTIFIER ::= { axsStats 6 }
axsEtherTxQoS         OBJECT IDENTIFIER ::= { axsQoS 1 }
axsEthShaper          OBJECT IDENTIFIER ::= { axsQoS 4 }
axsEthShaperAgQue     OBJECT IDENTIFIER ::= { axsQoS 5 }
axsDHCP               OBJECT IDENTIFIER ::= { axsStats 10 }
axsVlanStats          OBJECT IDENTIFIER ::= { axsStats 11 }
axsIpStats            OBJECT IDENTIFIER ::= { axsStats 12 }

axsGsrp               OBJECT IDENTIFIER ::= { axsMib 4 }
axsFdb                OBJECT IDENTIFIER ::= { axsMib 5 }
axsVlan               OBJECT IDENTIFIER ::= { axsMib 6 }
axsVlanBridge           OBJECT IDENTIFIER ::= { axsVlan 1 }
axsVlanBridgeBase       OBJECT IDENTIFIER ::= { axsVlanBridge 1 }
axsVlanBridgeStp        OBJECT IDENTIFIER ::= { axsVlanBridge 2 }
axsVlanBridgeTp         OBJECT IDENTIFIER ::= { axsVlanBridge 4 }
axsVlanBridgeStatic     OBJECT IDENTIFIER ::= { axsVlanBridge 5 }
axsVlanTagTranslation   OBJECT IDENTIFIER ::= { axsVlan 10 }

axsOadp                 OBJECT IDENTIFIER ::= { axsMib 7 }
axsOadpMIBObjects       OBJECT IDENTIFIER ::= { axsOadp 1 }
axsOadpGlobalInfo       OBJECT IDENTIFIER ::= { axsOadpMIBObjects 1 }
axsOadpPortInfo         OBJECT IDENTIFIER ::= { axsOadpMIBObjects 2 }
axsOadpNeighborInfo     OBJECT IDENTIFIER ::= { axsOadpMIBObjects 3 }
axsOadpMIBNotifications OBJECT IDENTIFIER ::= { axsOadp 2 }

axsFlow					OBJECT IDENTIFIER  ::= { axsMib 8 }
axsFlowResources	    	OBJECT IDENTIFIER  ::= { axsFlow 2 }
axsFlowFilter	    	OBJECT IDENTIFIER  ::= { axsFlow 3 }
axsFlowFilterStats		OBJECT IDENTIFIER  ::= { axsFlow 4 }
axsFlowQos	        	OBJECT IDENTIFIER  ::= { axsFlow 5 }
axsFlowQosStats	    	OBJECT IDENTIFIER  ::= { axsFlow 6 }

axsOspf               OBJECT IDENTIFIER ::= { axsMib 14 }
axsOspfTrap           OBJECT IDENTIFIER ::= { axsOspf 16 }
axsOspfTraps          OBJECT IDENTIFIER ::= { axsOspfTrap 2 }
axsOspfv3             OBJECT IDENTIFIER ::= { axsMib 15 }

axsPimMIB             OBJECT IDENTIFIER ::= { axsMib 24 }
axsPimMIBObjects      OBJECT IDENTIFIER ::= { axsPimMIB 1 }

axsIsisMIB             OBJECT IDENTIFIER ::= { axsMib 37 }
axsIsisObjects         OBJECT IDENTIFIER ::= { axsIsisMIB 1 }
axsIsisSystem          OBJECT IDENTIFIER ::= { axsIsisObjects 1 }
axsIsisSysLevel        OBJECT IDENTIFIER ::= { axsIsisObjects 2 }
axsIsisCirc            OBJECT IDENTIFIER ::= { axsIsisObjects 3 }
axsIsisNotification    OBJECT IDENTIFIER ::= { axsIsisObjects 10 }
axsIsisNotifications   OBJECT IDENTIFIER ::= { axsIsisMIB 2 }

axsStatic              OBJECT IDENTIFIER ::= { axsMib 38 }
axsStaticTrap          OBJECT IDENTIFIER ::= { axsStatic 2 }

axsBootManagement    OBJECT IDENTIFIER ::= { axsMib 51 }
axsLogin             OBJECT IDENTIFIER ::= { axsMib 52 }

axslldp                      OBJECT IDENTIFIER ::= { axsMib 100 }
axslldpConfiguration         OBJECT IDENTIFIER ::= { axslldp 1 }
axslldpStats                 OBJECT IDENTIFIER ::= { axslldp 2 }
axslldpLocalSystemData       OBJECT IDENTIFIER ::= { axslldp 3 }
axslldpRemoteSystemData      OBJECT IDENTIFIER ::= { axslldp 4 }
axslldpRemoteOriginInfoData  OBJECT IDENTIFIER ::= { axslldp 20 }

ax7800sSwitch           OBJECT IDENTIFIER ::= { ax7800sMib 1 }
ax7800sSoftware         OBJECT IDENTIFIER ::= { ax7800sSwitch 2 }
ax7800sSystemMsg        OBJECT IDENTIFIER ::= { ax7800sSwitch 3 }
ax7800sSnmpAgent        OBJECT IDENTIFIER ::= { ax7800sSwitch 4 }
ax7800sLicense          OBJECT IDENTIFIER ::= { ax7800sSwitch 6 }
ax7800sDevice           OBJECT IDENTIFIER ::= { ax7800sMib 2 }
ax7800sChassis          OBJECT IDENTIFIER ::= { ax7800sDevice 1 }
ax7800sBcuBoard          OBJECT IDENTIFIER ::= { ax7800sDevice 2 }
ax7800sPsuBoard          OBJECT IDENTIFIER ::= { ax7800sDevice 3 }
ax7800sNifBoard         OBJECT IDENTIFIER ::= { ax7800sDevice 4 }
ax7800sPhysLine         OBJECT IDENTIFIER ::= { ax7800sDevice 5 }
ax7800sInterface        OBJECT IDENTIFIER ::= { ax7800sDevice 6 }
ax7800sManagementMIB    OBJECT IDENTIFIER ::= { ax7800sMib 3 }
ax7800sOperationCommand OBJECT IDENTIFIER ::= { ax7800sManagementMIB 1 }
ax7800sFdbClearMIB      OBJECT IDENTIFIER ::= { ax7800sOperationCommand 1 }

ax5400sSwitch           OBJECT IDENTIFIER ::= { ax5400sMib 1 }
ax5400sSoftware         OBJECT IDENTIFIER ::= { ax5400sSwitch 2 }
ax5400sSystemMsg        OBJECT IDENTIFIER ::= { ax5400sSwitch 3 }
ax5400sSnmpAgent        OBJECT IDENTIFIER ::= { ax5400sSwitch 4 }
ax5400sLicense          OBJECT IDENTIFIER ::= { ax5400sSwitch 6 }
ax5400sDevice           OBJECT IDENTIFIER ::= { ax5400sMib 2 }
ax5400sChassis          OBJECT IDENTIFIER ::= { ax5400sDevice 1 }
ax5400sBcuBoard          OBJECT IDENTIFIER ::= { ax5400sDevice 2 }
ax5400sBsuBoard          OBJECT IDENTIFIER ::= { ax5400sDevice 3 }
ax5400sNifBoard         OBJECT IDENTIFIER ::= { ax5400sDevice 4 }
ax5400sPhysLine         OBJECT IDENTIFIER ::= { ax5400sDevice 5 }
ax5400sInterface        OBJECT IDENTIFIER ::= { ax5400sDevice 6 }
ax5400sManagementMIB    OBJECT IDENTIFIER ::= { ax5400sMib 3 }
ax5400sOperationCommand OBJECT IDENTIFIER ::= { ax5400sManagementMIB 1 }
ax5400sFdbClearMIB      OBJECT IDENTIFIER ::= { ax5400sOperationCommand 1 }

axsPhysStatsTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsPhysStatsTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing  statistics for physical and time slots layer
		interface."
	::= { axsPhysStats 1 }

axsPhysStatsEntry OBJECT-TYPE
	SYNTAX  AxsPhysStatsTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing the physical and time slots layer statistics
		for a particular interface."
	INDEX   { axsPhysStatsIfIndex }
	::= { axsPhysStatsTable 1 }

	AxsPhysStatsTableEntry ::=
		SEQUENCE {
		  axsPhysStatsIfIndex
			INTEGER,
		  axsPhysStatsIfDescr
			DisplayString,
		  axsPhysStatsIfType
			INTEGER,
		  axsPhysStatsInFCSs
			Counter,
		  axsPhysStatsInAborts
			Counter,
		  axsPhysStatsOverrun
			Counter,
		  axsPhysStatsUnderrun
			Counter,
		  axsPhysStatsInOddbits
			Counter,
		  axsPhysStatsInShortfrms
			Counter,
		  axsPhysStatsSendTimeout
			Counter,
		  axsPhysStatsOutAborts
			Counter,
		  axsPhysStatsInLongfrms
			Counter
		}

axsPhysStatsIfIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The value of this object identifies the physical layer interface
		or the time slot layer interface for WAN."
	::= { axsPhysStatsEntry 1 }

axsPhysStatsIfDescr OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A textual string containing information about the interface.
		Same as ifDescr (MIB II)."
	::= { axsPhysStatsEntry 2 }


axsPhysStatsIfType OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		oc-3(101),
		oc-12(102),
		oc-48(103),
		oc-192(104)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The hardware type of physical interfaces."
	::= { axsPhysStatsEntry 3 }

axsPhysStatsInFCSs OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of FCS error frames that received."
	::= { axsPhysStatsEntry 4 }

axsPhysStatsInAborts OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of abort frames that received."
	::= { axsPhysStatsEntry 5 }

axsPhysStatsOverrun OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times that overrun error occurred on receiving time."
	::= { axsPhysStatsEntry 6 }

axsPhysStatsUnderrun OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of that a transmission underrun errors occurred."
	::= { axsPhysStatsEntry 7 }

axsPhysStatsInOddbits OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of odd bit frames that received."
	::= { axsPhysStatsEntry 8 }

axsPhysStatsInShortfrms OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of short frames that received."
	::= { axsPhysStatsEntry 9 }

axsPhysStatsSendTimeout OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of times that a transmission timeout ocurred."
	::= { axsPhysStatsEntry 10 }

axsPhysStatsOutAborts OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of transmission of abort frames."
	::= { axsPhysStatsEntry 11 }

axsPhysStatsInLongfrms OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of long frames that received."
	::= { axsPhysStatsEntry 12 }

axsSonetSectionStatsTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsSonetSectionStatsTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing SONET section statistics for sonet interfaces."
	::= { axsSonetStats 1 }

axsSonetSectionStatsEntry OBJECT-TYPE
	SYNTAX  AxsSonetSectionStatsTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing SONET section statistics for sonet interfaces."
	INDEX   { axsSonetSectionStatsIfIndex }
	::= { axsSonetSectionStatsTable 1 }

	AxsSonetSectionStatsTableEntry ::=
		SEQUENCE {
		  axsSonetSectionStatsIfIndex
			INTEGER,
		  axsSonetSectionStatsLOS
			Counter,
		  axsSonetSectionStatsLOF
			Counter,
		  axsSonetSectionStatsOOF
			Counter,
		  axsSonetSectionStatsBIP8
			Counter,
		  axsSonetSectionStatsB2EBER
			Counter,
		  axsSonetSectionStatsB2SD
			Counter
		}

axsSonetSectionStatsIfIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The value of this object identifies for a SONET interface.
		This object has the same value as the ifIndex object."
	::= { axsSonetSectionStatsEntry 1 }

axsSonetSectionStatsLOS OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of times LOS(Loss Of Signal)."
	::= { axsSonetSectionStatsEntry 2 }

axsSonetSectionStatsLOF OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of times LOF(Loss Of Frame).An LOF defect is declared
		when OOF(Out of Frame) defect persists for a period of 3 milliseconds."
	::= { axsSonetSectionStatsEntry 3 }

axsSonetSectionStatsOOF OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This object count when out of synchronous."
	::= { axsSonetSectionStatsEntry 4 }

axsSonetSectionStatsBIP8 OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of times S-BIP8(Bit Interleaved Parity 8) Error."
	::= { axsSonetSectionStatsEntry 5 }

axsSonetSectionStatsB2EBER OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of times B2EBER Error."
	::= { axsSonetSectionStatsEntry 6 }

axsSonetSectionStatsB2SD OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of times B2SD Error."
	::= { axsSonetSectionStatsEntry 7 }

axsSonetLineStatsTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsSonetLineStatsTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing line statistics for sonet interfaces."
	::= { axsSonetStats 2 }

axsSonetLineStatsEntry OBJECT-TYPE
	SYNTAX  AxsSonetLineStatsTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing line statistics for sonet interfaces."
	INDEX   { axsSonetLineStatsIfIndex }
	::= { axsSonetLineStatsTable 1 }

	AxsSonetLineStatsTableEntry ::=
		SEQUENCE {
		  axsSonetLineStatsIfIndex
			INTEGER,
		  axsSonetLineStatsAIS
			Counter,
		  axsSonetLineStatsRDI
			Counter,
		  axsSonetLineStatsBIP24
			Counter,
		  axsSonetLineStatsFEBE
			Counter,
		  axsSonetLineStatsBIP384
			Counter,
		  axsSonetLineStatsBIP1536
			Counter,
		  axsSonetLineStatsREI
			Counter
		}

axsSonetLineStatsIfIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The value of this object identifies for a sonet interface.
		This object has the same value as the ifIndex object."
	::= { axsSonetLineStatsEntry 1 }

axsSonetLineStatsAIS OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of Line L-AIS(Alarm Indication Signal) that received
		at sonet interface."
	::= { axsSonetLineStatsEntry 2 }

axsSonetLineStatsRDI OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of L-RDI(Remote Defect Indication) errors that received
		on the sonet interface."
	::= { axsSonetLineStatsEntry 3 }

axsSonetLineStatsBIP24 OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of L-BIP24(Bit Interleaved Parity 24) errors on the sonet
		interface."
	::= { axsSonetLineStatsEntry 4 }

axsSonetLineStatsFEBE OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of L-FEBE(Line Far End Block Error) that received on the sonet
		interface."
	::= { axsSonetLineStatsEntry 5 }

axsSonetLineStatsBIP384 OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of L-BIP384(Bit Interleaved Parity 384) errors on the sonet
		interface."
	::= { axsSonetLineStatsEntry 6 }

axsSonetLineStatsBIP1536 OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of L-BIP1536(Bit Interleaved Parity 1536) errors on the sonet
		interface."
	::= { axsSonetLineStatsEntry 7 }

axsSonetLineStatsREI OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of L-REI(Line-path Remote Error Indication)that 
                 received on the sonet interface."
	::= { axsSonetLineStatsEntry 8 }

axsSonetPathStatsTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsSonetPathStatsTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing Path statistics for SONET interface."
	::= { axsSonetStats 3 }

axsSonetPathStatsEntry OBJECT-TYPE
	SYNTAX  AxsSonetPathStatsTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing Path statistics for SONET interface."
	INDEX   { axsSonetPathStatsIfIndex }
	::= { axsSonetPathStatsTable 1 }

	AxsSonetPathStatsTableEntry ::=
		SEQUENCE {
		  axsSonetPathStatsIfIndex
			INTEGER,
		  axsSonetPathStatsLOP
			Counter,
		  axsSonetPathStatsAIS
			Counter,
		  axsSonetPathStatsRDI
			Counter,
		  axsSonetPathStatsBIP8
			Counter,
		  axsSonetPathStatsFEBE
			Counter,
		  axsSonetPathStatsREI
			Counter,
		  axsSonetRDIPathStatsAISLOP
			Counter,
		  axsSonetRDIPathStatsUNEQ
			Counter,
		  axsSonetRDIPathStatsPLM
			Counter,
		  axsSonetPathStatsUNEQ
			Counter,
		  axsSonetPathStatsPLM
			Counter
		}

axsSonetPathStatsIfIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The IfIndex value of interface that use SONET."
	::= { axsSonetPathStatsEntry 1 }

axsSonetPathStatsLOP OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of LOP(Loss Of Pointer) errors that received on the sonet
		interface."
	::= { axsSonetPathStatsEntry 2 }

axsSonetPathStatsAIS OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of P-AIS(Alarm Indication Signal) that received on the sonet
		interface."
	::= { axsSonetPathStatsEntry 3 }

axsSonetPathStatsRDI OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of P-RDI(Path Remote Defect Indication) that received
		on the sonet interface."
	::= { axsSonetPathStatsEntry 4 }

axsSonetPathStatsBIP8 OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of P-BIP8(Bit Interleaved Parity 8) errors that received
		on the sonet interface."
	::= { axsSonetPathStatsEntry 5 }

axsSonetPathStatsFEBE OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of P-FEBE(Far End Block Error) errors that received
		on the sonet interface."
	::= { axsSonetPathStatsEntry 6 }

axsSonetPathStatsREI OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of  P-REI(Path-Remote Error Indication) 
                 errors that received on the sonet interface."
	::= { axsSonetPathStatsEntry 7 }

axsSonetRDIPathStatsAISLOP OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of P-AIS/P-LOP(Remote Defect Indication Path-Alarm 
                 Indication Signal/Path-Loss Of Pointer) that received
		 on the sonet interface."
	::= { axsSonetPathStatsEntry 8 }

axsSonetRDIPathStatsUNEQ OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of P-UNEQ(Remote Defect Indication Path-UNEQuipment) 
                 errors that received on the sonet interface."
	::= { axsSonetPathStatsEntry 9 }

axsSonetRDIPathStatsPLM OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of P-PLM(Remote Defect Indication
                 Path-Payload Label Mismatch) that received
		 on the sonet interface."
	::= { axsSonetPathStatsEntry 10 }

axsSonetPathStatsUNEQ OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of P-UNEQ(Path-UNEQuipment) errors 
                 that received on the sonet interface."
	::= { axsSonetPathStatsEntry 11 }

axsSonetPathStatsPLM OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of P-PLM(Remote Defect Indication 
                 Path-Payload Label Mismatch) errors that 
                 received on the sonet interface."
	::= { axsSonetPathStatsEntry 12 }

axsIfStatsTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsIfStatsTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing extension statistics for more than 100,000,000
		bps interface."
	::= { axsIfStats 1 }

axsIfStatsEntry OBJECT-TYPE
	SYNTAX  AxsIfStatsTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing extension statistics for interface."
	INDEX   { axsIfStatsIndex }
	::= { axsIfStatsTable 1 }

	AxsIfStatsTableEntry ::=
		SEQUENCE {
		  axsIfStatsIndex
			INTEGER,
		  axsIfStatsName
			DisplayString,
		  axsIfStatsInMegaOctets
			Counter,
		  axsIfStatsInUcastMegaPkts
			Counter,
		  axsIfStatsInMulticastMegaPkts
			Counter,
		  axsIfStatsInBroadcastMegaPkts
			Counter,
		  axsIfStatsOutMegaOctets
			Counter,
		  axsIfStatsOutUcastMegaPkts
			Counter,
		  axsIfStatsOutMulticastMegaPkts
			Counter,
		  axsIfStatsOutBroadcastMegaPkts
			Counter,
		  axsIfStatsHighSpeed
			Counter
		}

axsIfStatsIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"This object value is same as Ifindex which interface index
		of a system."
	::= { axsIfStatsEntry 1 }

axsIfStatsName OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Interfaces name. Same as ifDescr."
	::= { axsIfStatsEntry 2 }

axsIfStatsInMegaOctets OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of octets that received on the interface. This value is
		displayed in mega-octets(M). Value of 0 through 999,999 are rounded
		down."
	::= { axsIfStatsEntry 3 }

axsIfStatsInUcastMegaPkts OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of subnetwork-unicast packets that received on the interface.
		This value is displayed in mega-packets(M).Value of 0 through 999,999
		are rounded down."
	::= { axsIfStatsEntry 4 }

axsIfStatsInMulticastMegaPkts OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of multicast mega-packets that received on the interface.
		this value is displayed in mega-packets(M).Value of 0 through 999,999
		are rounded down."
	::= { axsIfStatsEntry 5 }


axsIfStatsInBroadcastMegaPkts OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of non-unicast packets delivered to a higher-layer
		protocol. The value is displayed in mega-packets (M). Value of 0
		through 999,999 are rounded down. "
	::= { axsIfStatsEntry 6 }

axsIfStatsOutMegaOctets OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of octets transmitted out of the interface.
		The value is displayed in mega-octets(M). Value of 0 through 999,999
		are rounded down."
	::= { axsIfStatsEntry 7 }

axsIfStatsOutUcastMegaPkts OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of packets that higher-level protocols requested
		be transmitted to a subnetwork-unicast address.The value is displayed
		in mega packets(M). Value of 0 through 999,999 are rounded down."
	::= { axsIfStatsEntry 8 }

axsIfStatsOutMulticastMegaPkts OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of multicast packets that transmitted on the interface.
		This value is displayed in mega-packets(M). Value of 0 through
		999,999 are rounded down."
	::= { axsIfStatsEntry 9 }

axsIfStatsOutBroadcastMegaPkts OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of broadcast packets that transmitted on the interface.
		This value is displayed in mega-packets(M). Value of 0 through
		999,999 are rounded down. "
	::= { axsIfStatsEntry 10 }

axsIfStatsHighSpeed OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A circuit speed.This value is displayed in mega-bps[Mbps].
		Round off the 1,000,000bps. "
	::= { axsIfStatsEntry 11 }

--  QoS interface statistics Variables

axsEtherTxQoSStatsTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsEtherTxQoSStatsEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A collection of QoS statistics kept for a particular
		Ethernet interface."
	::= { axsEtherTxQoS 1 }

axsEtherTxQoSStatsEntry OBJECT-TYPE
	SYNTAX  AxsEtherTxQoSStatsEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing QoS statistics for a particular 
		Ethernet interface."
    INDEX { axsEtherTxQoSStatsIndex }
	::= { axsEtherTxQoSStatsTable 1 }

	AxsEtherTxQoSStatsEntry ::=
		SEQUENCE {
            axsEtherTxQoSStatsIndex	INTEGER,
            axsEtherTxQoSStatsMaxQnum	INTEGER,
            axsEtherTxQoSStatsLimitQlen	INTEGER,
            axsEtherTxQoSStatsTotalOutFrames	Counter,
            axsEtherTxQoSStatsTotalOutBytesHigh	Counter,
            axsEtherTxQoSStatsTotalOutBytesLow	Counter,
            axsEtherTxQoSStatsTotalDiscardFrames	Counter
		}

axsEtherTxQoSStatsIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this
		index is same value of ifIndex.Its value ranges
		between 1 and the value of ifNumber."
	::= { axsEtherTxQoSStatsEntry 1 }

axsEtherTxQoSStatsMaxQnum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Max length of queue for an ethernet interface."
	::= { axsEtherTxQoSStatsEntry 2 }

axsEtherTxQoSStatsLimitQlen OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The limit length of outband queue for an ethernet interface."
	::= { axsEtherTxQoSStatsEntry 3 }

axsEtherTxQoSStatsTotalOutFrames OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of  packets transmitted out of the
		interface."
	::= { axsEtherTxQoSStatsEntry 4 }

axsEtherTxQoSStatsTotalOutBytesHigh OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of octets transmitted out of the
		interface.(Higher 4 bytes)"
	::= { axsEtherTxQoSStatsEntry 5 }

axsEtherTxQoSStatsTotalOutBytesLow OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of octets transmitted out of the
		interface.(Lower 4 bytes)"
	::= { axsEtherTxQoSStatsEntry 6 }

axsEtherTxQoSStatsTotalDiscardFrames OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of outbound packets which were chosen
		to be discarded ."
	::= { axsEtherTxQoSStatsEntry 7 }

axsEtherTxQoSStatsQueueTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsEtherTxQoSStatsQueueEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A collection of priority queue statistics."
	::= { axsEtherTxQoS 2 }

axsEtherTxQoSStatsQueueEntry OBJECT-TYPE
	SYNTAX  AxsEtherTxQoSStatsQueueEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A entry of priority queue statistics."
    INDEX { axsEtherTxQoSStatsQueueIndex , axsEtherTxQoSStatsQueueQueIndex }
	::= { axsEtherTxQoSStatsQueueTable 1 }

	AxsEtherTxQoSStatsQueueEntry ::=
		SEQUENCE {
            axsEtherTxQoSStatsQueueIndex	        INTEGER,
            axsEtherTxQoSStatsQueueQueIndex	INTEGER,
            axsEtherTxQoSStatsQueueQlen	        INTEGER,
            axsEtherTxQoSStatsQueueMaxQlen	INTEGER,
            axsEtherTxQoSStatsQueueDiscardFramesClass1	Counter64,
            axsEtherTxQoSStatsQueueDiscardFramesClass2	Counter64,
            axsEtherTxQoSStatsQueueDiscardFramesClass3	Counter64,
            axsEtherTxQoSStatsQueueDiscardFramesClass4	Counter64
		}

axsEtherTxQoSStatsQueueIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this
		index is same value of ifIndex.Its value ranges
		between 1 and the value of ifNumber."
	::= { axsEtherTxQoSStatsQueueEntry 1 }

axsEtherTxQoSStatsQueueQueIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An index that uniquely identifies the particular
		queue.Its value ranges between 1 and the value of
		axsEtherTxQoSStatsMaxQnum."
	::= { axsEtherTxQoSStatsQueueEntry 2 }

axsEtherTxQoSStatsQueueQlen OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A length of outbound priority queue for a interface."
	::= { axsEtherTxQoSStatsQueueEntry 3 }

axsEtherTxQoSStatsQueueMaxQlen OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Max length of outband priority queue for a interface since
		system was up."
	::= { axsEtherTxQoSStatsQueueEntry 4 }

axsEtherTxQoSStatsQueueDiscardFramesClass1 OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of discard frames in the discard class 
		 1 of output priority queue."
	::= { axsEtherTxQoSStatsQueueEntry 5 }

axsEtherTxQoSStatsQueueDiscardFramesClass2 OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of discard frames in the discard class 
		 2 of output priority queue."
	::= { axsEtherTxQoSStatsQueueEntry 6 }

axsEtherTxQoSStatsQueueDiscardFramesClass3 OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of discard frames in the discard class 
		 3 of output priority queue."
	::= { axsEtherTxQoSStatsQueueEntry 7 }

axsEtherTxQoSStatsQueueDiscardFramesClass4 OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of discard frames in the discard class 
		 4 of output priority queue."
	::= { axsEtherTxQoSStatsQueueEntry 8 }

axsEthShaperStatsFlowOtherFrmTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsEthShaperStatsFlowOtherFrmEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A collection of Shaper other Frame statistics kept 
		for a particular Ethernet Shaper interface."
	::= { axsEthShaper 3 }

axsEthShaperStatsFlowOtherFrmEntry OBJECT-TYPE
	SYNTAX  AxsEthShaperStatsFlowOtherFrmEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing Shaper other Frame statistics 
		for a particular Ethernet Shaper interface."
    INDEX { axsEthShaperStatsFlowOtherFrmNifIndex,
            axsEthShaperStatsFlowOtherFrmLineIndex }
	::= { axsEthShaperStatsFlowOtherFrmTable 1 }

	AxsEthShaperStatsFlowOtherFrmEntry ::=
		SEQUENCE {
		  axsEthShaperStatsFlowOtherFrmNifIndex		INTEGER,
		  axsEthShaperStatsFlowOtherFrmLineIndex		INTEGER,
		  axsEthShaperStatsFlowOtherFrmOutFrames		Counter64,
		  axsEthShaperStatsFlowOtherFrmOutBytes		Counter64,
		  axsEthShaperStatsFlowOtherFrmDiscardFrames	Counter64,
		  axsEthShaperStatsFlowOtherFrmDiscardBytes	Counter64
		}

axsEthShaperStatsFlowOtherFrmNifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this index 
		is same value of NIF.Its value ranges between 
		1 and the value of ax7800sNifBoardNumber or ax5400sNifBoardNumber."
	::= { axsEthShaperStatsFlowOtherFrmEntry 1 }

axsEthShaperStatsFlowOtherFrmLineIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this index 
		is same value of Physical Line.Its value ranges 
		between 1 and the value of ax7800sNifPhysLineNumber or ax5400sNifPhysLineNumber."
	::= { axsEthShaperStatsFlowOtherFrmEntry 2 }

axsEthShaperStatsFlowOtherFrmOutFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of packets transmitted outside of 
		a target for control out of the NIF."
	::= { axsEthShaperStatsFlowOtherFrmEntry 3 }

axsEthShaperStatsFlowOtherFrmOutBytes OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of octets transmitted outside of 
		a target for control out of the NIF."
	::= { axsEthShaperStatsFlowOtherFrmEntry 4 }

axsEthShaperStatsFlowOtherFrmDiscardFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of outbound packets outside of 
		a target for control which were chosen to be discarded."
	::= { axsEthShaperStatsFlowOtherFrmEntry 5 }

axsEthShaperStatsFlowOtherFrmDiscardBytes OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of outbound octets outside of 
		a target for control which were chosen to be discarded."
	::= { axsEthShaperStatsFlowOtherFrmEntry 6 }

axsEthShaperAgQueStatsTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsEthShaperAgQueStatsEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A collection of Shaper statistics kept for a 
		particular Ethernet Shaper aggregated queue."
	::= { axsEthShaperAgQue 1 }

axsEthShaperAgQueStatsEntry OBJECT-TYPE
	SYNTAX  AxsEthShaperAgQueStatsEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing Shaper statistics for a 
		particular Ethernet Shaper aggregated queue."
    INDEX { axsEthShaperAgQueStatsNifIndex,
            axsEthShaperAgQueStatsLineIndex,
            axsEthShaperAgQueStatsAgNumber}
	::= { axsEthShaperAgQueStatsTable 1 }

	AxsEthShaperAgQueStatsEntry ::=
		SEQUENCE {
		  axsEthShaperAgQueStatsNifIndex			INTEGER,
		  axsEthShaperAgQueStatsLineIndex		INTEGER,
		  axsEthShaperAgQueStatsAgNumber  		INTEGER,
		  axsEthShaperAgQueStatsTotalOutFrames		Counter64,
		  axsEthShaperAgQueStatsTotalOutBytes		Counter64,
		  axsEthShaperAgQueStatsTotalDiscardFrames	Counter64,
		  axsEthShaperAgQueStatsTotalDiscardBytes	Counter64
		}

axsEthShaperAgQueStatsNifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this index 
		is same value of NIF.Its value ranges between 
		1 and the value of ax7800sNifBoardNumber or ax5400sNifBoardNumber."
	::= { axsEthShaperAgQueStatsEntry 1 }

axsEthShaperAgQueStatsLineIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this index 
		is same value of Physical Line.Its value ranges 
		between 1 and the value of ax7800sNifPhysLineNumber or ax5400sNifPhysLineNumber."
	::= { axsEthShaperAgQueStatsEntry 2 }

axsEthShaperAgQueStatsAgNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The number of aggregated queue. Its value ranges 
		between 1 and 1023."
	::= { axsEthShaperAgQueStatsEntry 3 }

axsEthShaperAgQueStatsTotalOutFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of packets transmitted out of 
		the aggregated queue."
	::= { axsEthShaperAgQueStatsEntry 4 }

axsEthShaperAgQueStatsTotalOutBytes OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of octets transmitted out of 
		the aggregated queue."
	::= { axsEthShaperAgQueStatsEntry 5 }

axsEthShaperAgQueStatsTotalDiscardFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of outbound packets which 
		were chosen to be discarded."
	::= { axsEthShaperAgQueStatsEntry 6 }

axsEthShaperAgQueStatsTotalDiscardBytes OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of outbound octets which 
		were chosen to be discarded."
	::= { axsEthShaperAgQueStatsEntry 7 }

axsEthShaperAgQueStatsQueueTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsEthShaperAgQueStatsQueueEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A collection of priority queue statistics."
	::= { axsEthShaperAgQue 2 }

axsEthShaperAgQueStatsQueueEntry OBJECT-TYPE
	SYNTAX  AxsEthShaperAgQueStatsQueueEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A entry of priority queue statistics."
    INDEX { axsEthShaperAgQueStatsQueueNifIndex,
	    axsEthShaperAgQueStatsQueueLineIndex,
	    axsEthShaperAgQueStatsQueueAgNumber,
	    axsEthShaperAgQueStatsQueueQueIndex}
	::= { axsEthShaperAgQueStatsQueueTable 1 }

	AxsEthShaperAgQueStatsQueueEntry ::=
		SEQUENCE {
		  axsEthShaperAgQueStatsQueueNifIndex		INTEGER,
		  axsEthShaperAgQueStatsQueueLineIndex		INTEGER,
		  axsEthShaperAgQueStatsQueueAgNumber		INTEGER,
		  axsEthShaperAgQueStatsQueueQueIndex		INTEGER,
		  axsEthShaperAgQueStatsQueueOutFrames	        Counter64,
		  axsEthShaperAgQueStatsQueueOutBytes		Counter64,
		  axsEthShaperAgQueStatsQueueDiscardFrames	Counter64,
		  axsEthShaperAgQueStatsQueueDiscardBytes	Counter64
		}

axsEthShaperAgQueStatsQueueNifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this index 
		is same value of NIF.Its value ranges between 
		1 and the value of ax7800sNifBoardNumber or ax5400sNifBoardNumber."
	::= { axsEthShaperAgQueStatsQueueEntry 1 }
	
axsEthShaperAgQueStatsQueueLineIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this index 
		is same value of Physical Line.Its value ranges 
		between 1 and the value of ax7800sNifPhysLineNumber or ax5400sNifPhysLineNumber."
	::= { axsEthShaperAgQueStatsQueueEntry 2 }

axsEthShaperAgQueStatsQueueAgNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The number of aggregated queue. Its value ranges 
		between 1 and 1023."
	::= { axsEthShaperAgQueStatsQueueEntry 3 }

axsEthShaperAgQueStatsQueueQueIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An index that uniquely identifies the particular queue.
		Its value ranges between 1 and 4."
	::= { axsEthShaperAgQueStatsQueueEntry 4 }

axsEthShaperAgQueStatsQueueOutFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets transmitted out of the priority 
		queue interface."
	::= { axsEthShaperAgQueStatsQueueEntry 5 }

axsEthShaperAgQueStatsQueueOutBytes OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of octets transmitted out of the priority 
		queue interface."
	::= { axsEthShaperAgQueStatsQueueEntry 6 }

axsEthShaperAgQueStatsQueueDiscardFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which were chosen to be discarded."
	::= { axsEthShaperAgQueStatsQueueEntry 7 }

axsEthShaperAgQueStatsQueueDiscardBytes OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of octets which were chosen to be discarded."
	::= { axsEthShaperAgQueStatsQueueEntry 8 }

axsEthShaperDefAgQueStatsTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsEthShaperDefAgQueStatsEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of Shaper statistics."
	::= { axsEthShaperAgQue 3 }

axsEthShaperDefAgQueStatsEntry OBJECT-TYPE
	SYNTAX  AxsEthShaperDefAgQueStatsEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of shaper statistics information of Ether shaper defau
		lt aggregate queue."
	INDEX {
		axsEthShaperDefAgQueStatsNifIndex,
		axsEthShaperDefAgQueStatsLineIndex
	}
	::= { axsEthShaperDefAgQueStatsTable 1 }
	AxsEthShaperDefAgQueStatsEntry ::= 
	    SEQUENCE {
		axsEthShaperDefAgQueStatsNifIndex
			INTEGER,
		axsEthShaperDefAgQueStatsLineIndex
        	INTEGER,
		axsEthShaperDefAgQueStatsTotalOutFrames
        	Counter64,
		axsEthShaperDefAgQueStatsTotalOutBytes
        	Counter64,
		axsEthShaperDefAgQueStatsTotalDiscardFrames
        	Counter64,
		axsEthShaperDefAgQueStatsTotalDiscardBytes
        	Counter64
        }

axsEthShaperDefAgQueStatsNifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates place information of the slot with this NIF."
	::= { axsEthShaperDefAgQueStatsEntry 1 }

axsEthShaperDefAgQueStatsLineIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of physical line number."
	::= { axsEthShaperDefAgQueStatsEntry 2 }

axsEthShaperDefAgQueStatsTotalOutFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of sent frame of default aggregate queue."
	::= { axsEthShaperDefAgQueStatsEntry 3 }

axsEthShaperDefAgQueStatsTotalOutBytes OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of sent bytes of default aggregate queue."
	::= { axsEthShaperDefAgQueStatsEntry 4 }

axsEthShaperDefAgQueStatsTotalDiscardFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of discarded frame of default aggregate queue."
	::= { axsEthShaperDefAgQueStatsEntry 5 }

axsEthShaperDefAgQueStatsTotalDiscardBytes OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of discarded bytes of default aggregate queue."
	::= { axsEthShaperDefAgQueStatsEntry 6 }

axsEthShaperDefAgQueStatsQueueTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsEthShaperDefAgQueStatsQueueEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of shaper statistics per output priority queue o
		f default aggregate queue."
	::= { axsEthShaperAgQue 4 }

axsEthShaperDefAgQueStatsQueueEntry OBJECT-TYPE
	SYNTAX  AxsEthShaperDefAgQueStatsQueueEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of shaper statistics information per output priority q
		ueue of default aggregate queue."
	INDEX {
		axsEthShaperDefAgQueStatsQueueNifIndex,
		axsEthShaperDefAgQueStatsQueueLineIndex,
		axsEthShaperDefAgQueStatsQueueQueIndex
	}
	::= { axsEthShaperDefAgQueStatsQueueTable 1 }
	AxsEthShaperDefAgQueStatsQueueEntry ::= 
	    SEQUENCE {
		axsEthShaperDefAgQueStatsQueueNifIndex
			INTEGER,
		axsEthShaperDefAgQueStatsQueueLineIndex
        	INTEGER,
		axsEthShaperDefAgQueStatsQueueQueIndex
        	INTEGER,
		axsEthShaperDefAgQueStatsQueueOutFrames
        	Counter64,
		axsEthShaperDefAgQueStatsQueueOutBytes
        	Counter64,
		axsEthShaperDefAgQueStatsQueueDiscardFrames
        	Counter64,
		axsEthShaperDefAgQueStatsQueueDiscardBytes
        	Counter64
        }

axsEthShaperDefAgQueStatsQueueNifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates place information of the slot with this NIF."
	::= { axsEthShaperDefAgQueStatsQueueEntry 1 }

axsEthShaperDefAgQueStatsQueueLineIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of physical line number."
	::= { axsEthShaperDefAgQueStatsQueueEntry 2 }

axsEthShaperDefAgQueStatsQueueQueIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index which identifies this table ent
		ry."
	::= { axsEthShaperDefAgQueStatsQueueEntry 3 }

axsEthShaperDefAgQueStatsQueueOutFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of sent frame of output priority queue of default
		 aggregate queue."
	::= { axsEthShaperDefAgQueStatsQueueEntry 4 }

axsEthShaperDefAgQueStatsQueueOutBytes OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of sent bytes of output priority queue of default
		 aggregate queue."
	::= { axsEthShaperDefAgQueStatsQueueEntry 5 }

axsEthShaperDefAgQueStatsQueueDiscardFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of discarded frame of output priority queue of de
		fault aggregate queue."
	::= { axsEthShaperDefAgQueStatsQueueEntry 6 }

axsEthShaperDefAgQueStatsQueueDiscardBytes OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of discarded bytes of output priority queue of de
		fault aggregate queue."
	::= { axsEthShaperDefAgQueStatsQueueEntry 7 }

--axsDHCP group Variables

axsDHCPAddrValue OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The number of IP addresses which are available
		within this Router."
	::= { axsDHCP 1 }

axsDHCPFreeAddrValue OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The number of IP addresses which are available
		within this Router. May be expressed as either
		an absolute value."
	::= { axsDHCP 2 }

--axsIpStats group Variables

axsIpNullInDiscards OBJECT-TYPE
	SYNTAX Counter64
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The number of ipv4 packets discarded through null-interface."
	::= { axsIpStats 1 }

axsIpv6NullInDiscards OBJECT-TYPE
	SYNTAX Counter64
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The number of ipv6 packets discarded through null-interface."
	::= { axsIpStats 2 }

axsIpPimRegisterDiscards OBJECT-TYPE
	SYNTAX Counter64
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The number of ipv4 packets discarded by register checksum error of PIM."
	::= { axsIpStats 3 }

--  axsVlanStats Group

axsVlanStatsTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF AxsVlanStatsEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "A collection of VLAN statistics."
        ::= { axsVlanStats 1 }

axsVlanStatsEntry OBJECT-TYPE
        SYNTAX  AxsVlanStatsEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
		"A entry of VLAN statistics."
    INDEX { axsVlanStatsVlanIndex, axsVlanStatsPortIndex }
        ::= { axsVlanStatsTable 1 }

        AxsVlanStatsEntry ::=
                SEQUENCE {
                    axsVlanStatsVlanIndex     Gauge32,
                    axsVlanStatsPortIndex     INTEGER,
                    axsVlanStatsInOctets      Counter64,
                    axsVlanStatsInFrames      Counter64,
                    axsVlanStatsInDiscards    Counter64,
                    axsVlanStatsOutOctets     Counter64,
                    axsVlanStatsOutFrames     Counter64,
                    axsVlanStatsOutDiscards   Counter64
		}

axsVlanStatsVlanIndex OBJECT-TYPE
	SYNTAX  Gauge32
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID" 
	::= { axsVlanStatsEntry 1 }

axsVlanStatsPortIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this index 
		is same value of port.Its value ranges 
		between 1 and 65535."
	::= { axsVlanStatsEntry 2 }

axsVlanStatsInOctets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of octets that received on the VLAN."
	::= { axsVlanStatsEntry 3 }

axsVlanStatsInFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of packets that received on the VLAN."
	::= { axsVlanStatsEntry 4 }

axsVlanStatsInDiscards OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of Inbound packets inside of 
		a target for control which were chosen to be discarded."
	::= { axsVlanStatsEntry 5 }

axsVlanStatsOutOctets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of octets transmitted outside of 
		a target for control out of the VLAN."
	::= { axsVlanStatsEntry 6 }

axsVlanStatsOutFrames OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of packets transmitted outside of 
		a target for control out of the VLAN."
	::= { axsVlanStatsEntry 7 }

axsVlanStatsOutDiscards OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of outbound packets outside of 
		a target for control which were chosen to be discarded."
	::= { axsVlanStatsEntry 8 }

--  axsGsrp Group

axsGsrpGroupTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF AxsGsrpGroupEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "The table containing GSRP group information."
        ::= { axsGsrp 1 }

axsGsrpGroupEntry OBJECT-TYPE
        SYNTAX  AxsGsrpGroupEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "The list of GSRP group information."
    INDEX { axsGsrpGroupId }
        ::= { axsGsrpGroupTable 1 }

        AxsGsrpGroupEntry ::=
                SEQUENCE {
                    axsGsrpGroupId             INTEGER,
                    axsGsrpGroupRowStatus      RowStatus,
                    axsGsrpMacAddress          MacAddress,
                    axsGsrpAdvertiseHoldTime    INTEGER,
                    axsGsrpAdvertiseInterval    INTEGER,
                    axsGsrpSelectionPattern    INTEGER,
                    axsGsrpLayer3Redundancy    INTEGER
		}

axsGsrpGroupId OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"GSRP group identifier."
	::= { axsGsrpGroupEntry 1 }

axsGsrpGroupRowStatus OBJECT-TYPE
	SYNTAX  RowStatus
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Valid/Invalid state of this entry. Valid(1) fixed"
	::= { axsGsrpGroupEntry 2 }

axsGsrpMacAddress OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Media Access Control Address of this equipment."
	::= { axsGsrpGroupEntry 3 }

axsGsrpAdvertiseHoldTime OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Holding time of the Advertise frame (milli second)."
	::= { axsGsrpGroupEntry 4 }

axsGsrpAdvertiseInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Interval between transmitting the Advertise frame (milli second)."
	::= { axsGsrpGroupEntry 5 }

axsGsrpSelectionPattern OBJECT-TYPE
	SYNTAX  INTEGER {
                ports-Priority-MAC(1),
                priority-Ports-MAC(2)
                }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Master/Backup selection pattern. Ports-Priority-MAC(1)  Priority-Ports-MAC(2)"
	::= { axsGsrpGroupEntry 6 }

axsGsrpLayer3Redundancy OBJECT-TYPE
	SYNTAX  INTEGER {
                off(1),
                on(2)
                }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The status of layer 3 redundancy-change."
	::= { axsGsrpGroupEntry 7 }

axsGsrpVlanGroupTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF AxsGsrpVlanGroupEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "The table containing GSRP VLAN group information."
        ::= { axsGsrp 2 }

axsGsrpVlanGroupEntry OBJECT-TYPE
        SYNTAX  AxsGsrpVlanGroupEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "The list of GSRP VLAN group information."
    INDEX { axsGsrpGroupId, axsGsrpVlanGroupId }
        ::= { axsGsrpVlanGroupTable 1 }

        AxsGsrpVlanGroupEntry ::=
                SEQUENCE {
                    axsGsrpVlanGroupId                  INTEGER,
                    axsGsrpVlanGroupRowStatus           RowStatus,
                    axsGsrpState                        INTEGER,
                    axsGsrpPriority                     INTEGER,
                    axsGsrpActivePorts                  INTEGER,
                    axsGsrpTransitionToMasterCounts     INTEGER,
                    axsGsrpTransitionFromMasterCounts   INTEGER,
                    axsGsrpLastTransitionTime           TimeStamp,
		    axsGsrpVirtualMacAddress	       MacAddress
		}

axsGsrpVlanGroupId OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"GSRP VLAN group number(1~128)"
	::= { axsGsrpVlanGroupEntry 1 }

axsGsrpVlanGroupRowStatus OBJECT-TYPE
	SYNTAX  RowStatus
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Valid/Invalid state of this entry. Valid(1) fixed"
	::= { axsGsrpVlanGroupEntry 2 }

axsGsrpState OBJECT-TYPE
	SYNTAX  INTEGER {
                backUp(1),
                backUp-Waiting(2),
                master(3),
                backUp-No-Neighbor(4),
		backUp-Lock(5)
                }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The state of GSRP group.."
	::= { axsGsrpVlanGroupEntry 3 }

axsGsrpPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Configured priority."
	::= { axsGsrpVlanGroupEntry 4 }

axsGsrpActivePorts OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of port which is link-up  in monitored port."
	::= { axsGsrpVlanGroupEntry 5 }

axsGsrpTransitionToMasterCounts OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times which shifted to the master state from the backup state."
	::= { axsGsrpVlanGroupEntry 6 }

axsGsrpTransitionFromMasterCounts OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times which shifted to the backup state from the master state."
	::= { axsGsrpVlanGroupEntry 7 }

axsGsrpLastTransitionTime OBJECT-TYPE
	SYNTAX  TimeStamp
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The last time at which changed in the master state from the backup state or in the backup state from the master state."
	::= { axsGsrpVlanGroupEntry 8 }

axsGsrpVirtualMacAddress OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The virtual Media Access Control address of the GSRP VLAN group. If the status of layer 3 redundancy-change is off, return 00 00 00 00 00 00"
	::= { axsGsrpVlanGroupEntry 9 }

axsGsrpNeighborGroupTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF AxsGsrpNeighborGroupEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "The table containing stores the GSRP group information on facing equipment."
        ::= { axsGsrp 3 }

axsGsrpNeighborGroupEntry OBJECT-TYPE
        SYNTAX  AxsGsrpNeighborGroupEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "The table containing stores the GSRP group information on facing equipment."
    INDEX { axsGsrpNeighborGroupId, axsGsrpNeighborMacAddress }
        ::= { axsGsrpNeighborGroupTable 1 }

        AxsGsrpNeighborGroupEntry ::=
                SEQUENCE {
                    axsGsrpNeighborGroupId             INTEGER,
                    axsGsrpNeighborMacAddress          MacAddress,
                    axsGsrpNeighborAdvertiseHoldTime    INTEGER,
                    axsGsrpNeighborAdvertiseInterval    INTEGER,
                    axsGsrpNeighborSelectionPattern    INTEGER
		}

axsGsrpNeighborGroupId OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The GSRP group identifier on the facing equipment."
	::= { axsGsrpNeighborGroupEntry 1 }

axsGsrpNeighborMacAddress OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The Media Access Control Address of the facing equipment."
	::= { axsGsrpNeighborGroupEntry 2 }

axsGsrpNeighborAdvertiseHoldTime OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Holding time of the Advertise frame on opposite equipment (milli second)."
	::= { axsGsrpNeighborGroupEntry 3 }

axsGsrpNeighborAdvertiseInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Interval between transmitting the Advertise frame on the facing equipment (milli second)."
	::= { axsGsrpNeighborGroupEntry 4 }

axsGsrpNeighborSelectionPattern OBJECT-TYPE
	SYNTAX  INTEGER {
                port-Priority-MAC(1),
                priority-Port-MAC(2)
                }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Master/Backup selection pattern on the facing equipment. Ports-Priority-MAC(1)  Priority-Ports-MAC(2)"
	::= { axsGsrpNeighborGroupEntry 5 }

axsGsrpNeighborVlanGroupTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF AxsGsrpNeighborVlanGroupEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "The table containing the GSRP VLAN group information on facing equipment."
        ::= { axsGsrp 4 }

axsGsrpNeighborVlanGroupEntry OBJECT-TYPE
        SYNTAX  AxsGsrpNeighborVlanGroupEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "The table containing the GSRP VLAN group information on facing equipment."
    INDEX { axsGsrpNeighborGroupId, axsGsrpNeighborVlanGroupId, axsGsrpNeighborMacAddress }
        ::= { axsGsrpNeighborVlanGroupTable 1 }

        AxsGsrpNeighborVlanGroupEntry ::=
                SEQUENCE {
                    axsGsrpNeighborVlanGroupId    INTEGER,
                    axsGsrpNeighborState          INTEGER,
                    axsGsrpNeighborPriority       INTEGER,
                    axsGsrpNeighborActivePorts    INTEGER
		}

axsGsrpNeighborVlanGroupId OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"GSRP VLAN group number on the facing equipment (1~128)."
	::= { axsGsrpNeighborVlanGroupEntry 1 }

axsGsrpNeighborState OBJECT-TYPE
	SYNTAX  INTEGER {
                backUp(1),
                backUp-Waiting(2),
                master(3),
                backUp-No-Neighbor(4),
                backUp-Lock(5)
                }
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The state of GSRP group on the facing equipment."
	::= { axsGsrpNeighborVlanGroupEntry 2 }

axsGsrpNeighborPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Configured priority on the facing equipment."
	::= { axsGsrpNeighborVlanGroupEntry 3 }

axsGsrpNeighborActivePorts OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of port which is link-up  in monitored port on the facing equipment."
	::= { axsGsrpNeighborVlanGroupEntry 4 }

--  axsFdb group

axsFdbCounterTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFdbCounterEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table of FDB information."
	::= { axsFdb 1 }

axsFdbCounterEntry OBJECT-TYPE
	SYNTAX  AxsFdbCounterEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry of FDB information."
    INDEX { axsFdbCounterNifIndex, axsFdbCounterLineIndex }
	::= { axsFdbCounterTable 1 }

	AxsFdbCounterEntry ::=
		SEQUENCE {
			axsFdbCounterNifIndex		INTEGER,
			axsFdbCounterLineIndex		INTEGER,
			axsFdbCounterCounts		Counter32,
			axsFdbCounterType		INTEGER,
			axsFdbCounterLimits		Counter32
		}

axsFdbCounterNifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this index
		is same value of NIF.Its value ranges between 1
		and the value of ax7800sNifBoardNumber or ax5400sNifBoardNumber."
	::= { axsFdbCounterEntry 1 }

axsFdbCounterLineIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Identified by a particular value of this index
		is same value of Physical Line.Its value ranges
		between 1 and the value of ax7800sNifLineNumber or ax5400sNifLineNumber."
	::= { axsFdbCounterEntry 2 }

axsFdbCounterCounts OBJECT-TYPE
	SYNTAX  Counter32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of FDB entries learned on the port."
	::= { axsFdbCounterEntry 3 }

axsFdbCounterType OBJECT-TYPE
	SYNTAX  INTEGER	{
				unlimited(0),
				limited-and-Forward(1),
				limited-and-Discard(2)
			}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The type of FDB entries learning."
	::= { axsFdbCounterEntry 4 }

axsFdbCounterLimits OBJECT-TYPE
	SYNTAX  Counter32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The maximum number of FDB entries that can be learned on the port.
		0 :Study prohibition.
		1-100,000: Number set by limit-learning subcommand of composition 
		definition command fdb.
		When axsFdbCounterType is Unlimited(0), it becomes 0 fixation."
	::= { axsFdbCounterEntry 5 }

--  axsVlan group

axsVBBaseTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsVBBaseEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An information table of dot1dBase by VLAN units."
	::= { axsVlanBridgeBase 1 }

axsVBBaseEntry OBJECT-TYPE
	SYNTAX  AxsVBBaseEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An informatin entry of every VLAN ID of axsVBBaseTable."
    INDEX { axsVBBaseIndex }
	::= { axsVBBaseTable 1 }

	AxsVBBaseEntry ::=
		SEQUENCE {
		    axsVBBaseIndex 			VlanIndex,
		    axsVBBaseBridgeAddress 		MacAddress,
		    axsVBBaseNumPorts 			INTEGER,
		    axsVBBaseType  			INTEGER,
		    axsVBBaseVlanIfIndex   		INTEGER,
		    axsVBBaseVlanType    		INTEGER,
		    axsVBBaseVlanID     			VlanIdOrZero,		
		    axsVBBaseAssociatedPrimaryVlan  	VlanIdOrZero,
		    axsVBBaseIfStatus      		INTEGER,
		    axsVBBaseLastChange       		TimeTicks,
		    axsVBBasePrivateVlanType       	INTEGER
                }

axsVBBaseIndex OBJECT-TYPE
	SYNTAX  VlanIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID."
	::= { axsVBBaseEntry 1 }

axsVBBaseBridgeAddress OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"MAC address of VLAN."
	::= { axsVBBaseEntry 2 }

axsVBBaseNumPorts OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of ports set at VLAN."
	::= { axsVBBaseEntry 3 }

axsVBBaseType OBJECT-TYPE
	SYNTAX  INTEGER {
		unknown(1),
		transparent-only(2),
		sourceroute-only(3),
		srt(4)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A bridging type VLAN may perform."
	::= { axsVBBaseEntry 4 }

axsVBBaseVlanIfIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Value of ifIndex of interface of VLAN."
	::= { axsVBBaseEntry 5 }

axsVBBaseVlanType OBJECT-TYPE
	SYNTAX  INTEGER {
		port-based(1),
		mac-based(2),
		protocol-based(3),
		ipsubnet-based(4)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VLAN type."
	::= { axsVBBaseEntry 6 }

axsVBBaseVlanID OBJECT-TYPE
	SYNTAX  VlanIdOrZero
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Value of VID of VLAN-TAG corresponding VLAN."
	::= { axsVBBaseEntry 7 }

axsVBBaseAssociatedPrimaryVlan OBJECT-TYPE
	SYNTAX  VlanIdOrZero
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Returns VLAN ID of Primary VLAN when private VLAN is used and 
		 the same VLAN is set at secondary VLAN."
	::= { axsVBBaseEntry 8 }

axsVBBaseIfStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		up(1),
		down(2)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of interface against upper level protocol of VLAN."
	::= { axsVBBaseEntry 9 }

axsVBBaseLastChange OBJECT-TYPE
	SYNTAX  TimeTicks
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Value of sysUpTime which is set when VLAN topology changes."
	::= { axsVBBaseEntry 10 }

axsVBBasePrivateVlanType OBJECT-TYPE
	SYNTAX  INTEGER {
		normal(1),
		primary(2),
		isolated(3),
		community(4)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A private VLAN type of VLAN."
	::= { axsVBBaseEntry 11 }

axsVBBasePortTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsVBBasePortEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An information table of dot1dBasePortTable by VLAN units."
	::= { axsVlanBridgeBase 2 }

axsVBBasePortEntry OBJECT-TYPE
	SYNTAX  AxsVBBasePortEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A configuration entry of axsVBBaseTable."
    INDEX { axsVBBasePortIndex, axsVBBasePort }
	::= { axsVBBasePortTable 1 }

	AxsVBBasePortEntry ::=
		SEQUENCE {
		    axsVBBasePortIndex       		VlanIndex,
		    axsVBBasePort	       		INTEGER,
		    axsVBBasePortIfIndex			INTEGER,
		    axsVBBasePortCircuit			OBJECT IDENTIFIER,
		    axsVBBasePortDelayExceededDiscards	Counter,
		    axsVBBasePortMtuExceededDiscards		Counter,
		    axsVBBasePortState			INTEGER,
		    axsVBBasePortTaggedState		INTEGER,
		    axsVBBasePortTranslatedTagID		VlanIdOrZero
                }

axsVBBasePortIndex OBJECT-TYPE
	SYNTAX  VlanIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID."
	::= { axsVBBasePortEntry 1 }

axsVBBasePort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Port number of ports set at VLAN."
	::= { axsVBBasePortEntry 2 }

axsVBBasePortIfIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Value of ifIndex corresponding ports set at VLAN."
	::= { axsVBBasePortEntry 3 }

axsVBBasePortCircuit OBJECT-TYPE
	SYNTAX  OBJECT IDENTIFIER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Identifier which identifieds ports when VLAN ports
		 have the same value as axsVBBasePortIfIndex."
	::= { axsVBBasePortEntry 4 }

axsVBBasePortDelayExceededDiscards OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Total number of discard frame caused by passing delay occured at VLAN ports."
	::= { axsVBBasePortEntry 5 }

axsVBBasePortMtuExceededDiscards OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Total number of discard frame caused by data over flow occured at VLAN ports."
	::= { axsVBBasePortEntry 6 }

axsVBBasePortState OBJECT-TYPE
	SYNTAX  INTEGER {
		disabled(1),
		blocking(2),
		listening(3),
		learning(4),
		forwarding(5),
		broken(6),
		fix-forwarding(7)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"STP port status of port set at VLAN."
	::= { axsVBBasePortEntry 7 }

axsVBBasePortTaggedState OBJECT-TYPE
	SYNTAX  INTEGER {
		untagged(1),
		tagged(2)
            }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of VLAN-TAG configuration of ports set at VLAN."
	::= { axsVBBasePortEntry 8 }

axsVBBasePortTranslatedTagID OBJECT-TYPE
	SYNTAX  VlanIdOrZero
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Translated ID of VLAN when TAG translation is set."
	::= { axsVBBasePortEntry 9 }

axsVBStpTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsVBStpEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An information table of dot1dStpTable by VLAN units."
	::= { axsVlanBridgeStp 1 }

axsVBStpEntry OBJECT-TYPE
	SYNTAX  AxsVBStpEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A configuration entry of axsVBStpTable."
    INDEX { axsVBStpIndex }
	::= { axsVBStpTable 1 }

	AxsVBStpEntry ::=
		SEQUENCE {
		    axsVBStpIndex 			VlanIndex,
		    axsVBStpProtocolSpecification 	INTEGER,
		    axsVBStpPriority 			INTEGER,
		    axsVBStpTimeSinceTopologyChange	TimeTicks,
		    axsVBStpTopChanges			Counter,
		    axsVBStpDesignatedRoot		BridgeId,
		    axsVBStpRootCost			INTEGER,
		    axsVBStpRootPort			INTEGER,
		    axsVBStpMaxAge			Timeout,
		    axsVBStpHelloTime			Timeout,
		    axsVBStpHoldTime			INTEGER,
		    axsVBStpForwardDelay			Timeout,
		    axsVBStpBridgeMaxAge 		Timeout,
		    axsVBStpBridgeHelloTime 		Timeout,
		    axsVBStpBridgeForwardDelay 		Timeout
                }

axsVBStpIndex OBJECT-TYPE
	SYNTAX  VlanIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID."
	::= { axsVBStpEntry 1 }

axsVBStpProtocolSpecification OBJECT-TYPE
	SYNTAX  INTEGER {
		unknown(1),
		decLb100(2),
		ieee8021d(3),
		ieee8021w(4)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A kind of spanning tree protocol by VLAN units."
	::= { axsVBStpEntry 2 }

axsVBStpPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Priority value of spanning tree by VLAN units."
	::= { axsVBStpEntry 3 }

axsVBStpTimeSinceTopologyChange OBJECT-TYPE
	SYNTAX  TimeTicks
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Elapsed time since topology change of spanning tree by VLAN units."
	::= { axsVBStpEntry 4 }

axsVBStpTopChanges OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times of topology changes of spanning tree by VLAN units."
	::= { axsVBStpEntry 5 }

axsVBStpDesignatedRoot OBJECT-TYPE
	SYNTAX  BridgeId
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Root bridge identifier of spanning tree by VLAN units."
	::= { axsVBStpEntry 6 }

axsVBStpRootCost OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Root path cost kept by spanning tree by VLAN units."
	::= { axsVBStpEntry 7 }

axsVBStpRootPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Root port value kept by spanning tree by VLAN units."
	::= { axsVBStpEntry 8 }

axsVBStpMaxAge OBJECT-TYPE
	SYNTAX  Timeout
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum aging time kept by spanning tree by VLAN units."
	::= { axsVBStpEntry 9 }

axsVBStpHelloTime OBJECT-TYPE
	SYNTAX  Timeout
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Hello time kept by spanning tree by VLAN units."
	::= { axsVBStpEntry 10 }

axsVBStpHoldTime OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Hold time kept by spanning tree by VLAN units."
	::= { axsVBStpEntry 11 }

axsVBStpForwardDelay OBJECT-TYPE
	SYNTAX  Timeout
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Transfer delay time kept by spanning tree by VLAN units."
	::= { axsVBStpEntry 12 }

axsVBStpBridgeMaxAge OBJECT-TYPE
	SYNTAX  Timeout
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum aging time used when spanning tree acts as a root bridge by VLAN units."
	::= { axsVBStpEntry 13 }

axsVBStpBridgeHelloTime OBJECT-TYPE
	SYNTAX  Timeout
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Hello time used when spanning tree act as a root bridge by VLAN units."
	::= { axsVBStpEntry 14 }

axsVBStpBridgeForwardDelay OBJECT-TYPE
	SYNTAX  Timeout
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Transfer delay time used when spanning tree act as a root bridge by VLAN units."
	::= { axsVBStpEntry 15 }

axsVBStpPortTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsVBStpPortEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An information table of dot1dStpPortTable by VLAN units."
	::= { axsVlanBridgeStp 2 }

axsVBStpPortEntry OBJECT-TYPE
	SYNTAX  AxsVBStpPortEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A configuration entry of axsVBStpPortTable."
        INDEX { axsVBStpPortIndex, axsVBStpPort }
	::= { axsVBStpPortTable 1 }

	AxsVBStpPortEntry ::=
		SEQUENCE {
		    axsVBStpPortIndex			VlanIndex,
		    axsVBStpPort				INTEGER,
		    axsVBStpPortPriority			INTEGER,
		    axsVBStpPortState			INTEGER,
		    axsVBStpPortEnable			INTEGER,
		    axsVBStpPortPathCost			INTEGER,
		    axsVBStpPortDesignatedRoot		BridgeId,
		    axsVBStpPortDesignatedCost		INTEGER,
		    axsVBStpPortDesignatedBridge		BridgeId,
		    axsVBStpPortDesignatedPort		OCTET STRING,
		    axsVBStpPortForwardTransitions	Counter
                }

axsVBStpPortIndex OBJECT-TYPE
	SYNTAX  VlanIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID."
	::= { axsVBStpPortEntry 1 }

axsVBStpPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Port number corresponding configuration entry."
	::= { axsVBStpPortEntry 2 }

axsVBStpPortPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Priority of port by VLAN units."
	::= { axsVBStpPortEntry 3 }

axsVBStpPortState OBJECT-TYPE
	SYNTAX  INTEGER {
		disabled(1),
		blocking(2),
		listening(3),
		learning(4),
		forwarding(5),
		broken(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Present status of port by VLAN units."
	::= { axsVBStpPortEntry 4 }

axsVBStpPortEnable OBJECT-TYPE
	SYNTAX  INTEGER {
		enabled(1),
		disabled(2)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Value whether spanning tree is enabled or not at the port by VLAN units."
	::= { axsVBStpPortEntry 5 }

axsVBStpPortPathCost OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Path cost value of the port by VLAN units."
	::= { axsVBStpPortEntry 6 }

axsVBStpPortDesignatedRoot OBJECT-TYPE
	SYNTAX  BridgeId
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Value of root bridge identifier by VLAN units stored in BPDU from specified bridge."
	::= { axsVBStpPortEntry 7 }

axsVBStpPortDesignatedCost OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Path cost value of specified port connected to the port by VLAN units."
	::= { axsVBStpPortEntry 8 }

axsVBStpPortDesignatedBridge OBJECT-TYPE
	SYNTAX  BridgeId
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bridge identifier of bridge which this port regards as specified bridge by VLAN units."
	::= { axsVBStpPortEntry 9 }

axsVBStpPortDesignatedPort OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Port identifier of specified bridge connected to this port by VLAN units."
	::= { axsVBStpPortEntry 10 }

axsVBStpPortForwardTransitions OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times of changes from learning status into forwarding status."
	::= { axsVBStpPortEntry 11 }

axsVBTpTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsVBTpEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A dot1dTp information table by VLAN units."
	::= { axsVlanBridgeTp 1 }

axsVBTpEntry OBJECT-TYPE
	SYNTAX  AxsVBTpEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A configuration entry of axsVBTpTable."
    INDEX { axsVBTpIndex }
	::= { axsVBTpTable 1 }

	AxsVBTpEntry ::=
		SEQUENCE {
		    axsVBTpIndex				VlanIndex,
		    axsVBTpLearnedEntryDiscards		Counter,
		    axsVBTpAgingTime			INTEGER
                }

axsVBTpIndex OBJECT-TYPE
	SYNTAX  VlanIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID."
	::= { axsVBTpEntry 1 }

axsVBTpLearnedEntryDiscards OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of discarded entries because of lack of
		 not-used domain in filtering data base."
	::= { axsVBTpEntry 2 }

axsVBTpAgingTime OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Time-out time to aging-out entry of filtering date base which is learned dynamically."
	::= { axsVBTpEntry 3 }

axsVBTpFdbTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsVBTpFdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An information of dot1dTpFdbTable by VLAN units."
	::= { axsVlanBridgeTp 2 }

axsVBTpFdbEntry OBJECT-TYPE
	SYNTAX  AxsVBTpFdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A configuration entry of axsVBTpFdbTable."
    INDEX { axsVBTpFdbIndex, axsVBTpFdbAddress }
	::= { axsVBTpFdbTable 1 }

	AxsVBTpFdbEntry ::=
		SEQUENCE {
		    axsVBTpFdbIndex			VlanIndex,
		    axsVBTpFdbAddress			MacAddress,
		    axsVBTpFdbPort			INTEGER,
		    axsVBTpFdbStatus			INTEGER
                }

axsVBTpFdbIndex OBJECT-TYPE
	SYNTAX  VlanIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID."
	::= { axsVBTpFdbEntry 1 }

axsVBTpFdbAddress OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Unicast MAC address of filtering data base entry."
	::= { axsVBTpFdbEntry 2 }

axsVBTpFdbPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates that it hasn't learnt port number when
		 port number 0 receives frame having MAC address
		 as source address which axsVBTpFdbAddress indicates."
	::= { axsVBTpFdbEntry 3 }

axsVBTpFdbStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		invalid(2),
		learned(3),
		self(4),
		mgmt(5)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of filtering data base."
	::= { axsVBTpFdbEntry 4 }

axsVBTpPortTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsVBTpPortEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An information table of dot1dTpPortTable by VLAN units."
	::= { axsVlanBridgeTp 3 }

axsVBTpPortEntry OBJECT-TYPE
	SYNTAX  AxsVBTpPortEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An information entry of axsVBTpPortTable of ports."
    INDEX { axsVBTpPortIndex, axsVBTpPort }
	::= { axsVBTpPortTable 1 }

	AxsVBTpPortEntry ::=
		SEQUENCE {
		    axsVBTpPortIndex			VlanIndex,
		    axsVBTpPort				INTEGER,
		    axsVBTpPortMaxInfo			INTEGER,
		    axsVBTpPortInFrames 			Counter,		
		    axsVBTpPortOutFrames 		Counter,
		    axsVBTpPortInDiscards  		Counter
                }

axsVBTpPortIndex OBJECT-TYPE
	SYNTAX  VlanIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID."
	::= { axsVBTpPortEntry 1 }

axsVBTpPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Port number that indicates which port management
		 information in the entry corresponds."
	::= { axsVBTpPortEntry 2 }

axsVBTpPortMaxInfo OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum INFO field size of the port by VLAN units."
	::= { axsVBTpPortEntry 3 }

axsVBTpPortInFrames OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of reception frame of the port by VLAN units."
	::= { axsVBTpPortEntry 4 }

axsVBTpPortOutFrames OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of sending frame of the port by VLAN units."
	::= { axsVBTpPortEntry 5 }

axsVBTpPortInDiscards OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of reception discard frame of the port by VLAN units."
	::= { axsVBTpPortEntry 6 }

axsVBStaticTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsVBStaticEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An information table of dot1dStaticTable by VLAN units."
	::= { axsVlanBridgeStatic 1 }

axsVBStaticEntry OBJECT-TYPE
	SYNTAX  AxsVBStaticEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A configuration entry of axsVBStaticTable."
    INDEX { axsVBStaticIndex, axsVBStaticAddress }
	::= { axsVBStaticTable 1 }

	AxsVBStaticEntry ::=
		SEQUENCE {
		    axsVBStaticIndex			VlanIndex,
		    axsVBStaticAddress			MacAddress,
		    axsVBStaticReceivePort		INTEGER,
		    axsVBStaticAllowedToGoTo		OCTET STRING,		
		    axsVBStaticStatus 	 		INTEGER
		}

axsVBStaticIndex OBJECT-TYPE
	SYNTAX  VlanIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID."
	::= { axsVBStaticEntry 1 }

axsVBStaticAddress OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"MAC address of eather unicast, group or broadcast."
	::= { axsVBStaticEntry 2 }

axsVBStaticReceivePort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Reception port number which is applied the entry."
	::= { axsVBStaticEntry 3 }

axsVBStaticAllowedToGoTo OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map of port indicating destination port when transfering
		 frame whose destination is MAC address kept by this entry"
	::= { axsVBStaticEntry 4 }

axsVBStaticStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		invalid(2),
		permanent(3),
		deleteOnReset(4),
		deleteOnTimeout(5)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of the entry."
	::= { axsVBStaticEntry 5 }

axsVlanBridgeMaxVlans OBJECT-TYPE
	SYNTAX  VlanIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum value of VLAN ID of this device."
	::= { axsVlanBridge 101 }

axsVlanBridgeMaxSpans OBJECT-TYPE
	SYNTAX  VlanIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum value of VLAN ID of VLAN which may operate
		 spanning tree in this device."
	::= { axsVlanBridge 102 }

axsVlanTagTranslationTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsVlanTagTranslationEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The information table about a Tag conversion function"
	::= { axsVlanTagTranslation 1 }

axsVlanTagTranslationEntry OBJECT-TYPE
	SYNTAX  AxsVlanTagTranslationEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry of the information table about a Tag conversion function"
    INDEX { axsVlanTagTranslationVlanId,axsVlanTagTranslationTranslatedId }
	::= { axsVlanTagTranslationTable 1 }

	AxsVlanTagTranslationEntry ::=
		SEQUENCE {
		    axsVlanTagTranslationVlanId		INTEGER,
		    axsVlanTagTranslationTranslatedId	INTEGER,
		    axsVlanTagTranslationPorts		PortList
                }

axsVlanTagTranslationVlanId OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID which has set up the Tag conversion function"
	::= { axsVlanTagTranslationEntry 1 }

axsVlanTagTranslationTranslatedId OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Translated ID set up by the Tag conversion function"
	::= { axsVlanTagTranslationEntry 2 }

axsVlanTagTranslationPorts OBJECT-TYPE
	SYNTAX  PortList
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The port list which has set up the same Translated ID by the same VLAN by the Tag conversion function"
	::= { axsVlanTagTranslationEntry 3 }

--  OADP Group

axsOadpGlobalActive  OBJECT-TYPE
	SYNTAX  TruthValue
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Operation status of OADP function. Status set
		 by enable or disable in Oadp configuration.
		 enable : 1
		 disable: 2"
	::= { axsOadpGlobalInfo 1 }

axsOadpGlobalCdpActive  OBJECT-TYPE
	SYNTAX  TruthValue
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Operation status of CDP reception function.
		 Status whether cdp-listener is set or not in oadp configuration.
		 cdp-listener           : 1
		 cdp-listener is not set: 2"
	::= { axsOadpGlobalInfo 2 }

axsOadpGlobalMessageInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Sending interval of OADP frame. The value of interval-time in oadp configuration."
	::= { axsOadpGlobalInfo 3 }

axsOadpGlobalHoldTime OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Neighbor divice's holding time of OADP frame which this device send.
		 The value of hold-time in oadp configuration."
	::= { axsOadpGlobalInfo 4 }

axsOadpGlobalCacheLastChange OBJECT-TYPE
	SYNTAX  TimeTicks
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Value of sysUpTime which is set when axsOadpNeighborTable is updated."
	::= { axsOadpGlobalInfo 5 }

axsOadpGlobalName OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Device identifier."
	::= { axsOadpGlobalInfo 6 }

axsOadpGlobalNameType OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		sysName(2),
		serialNumber(3),
		macaddress(4)
    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Kind of axsOadpGlobalName."
	::= { axsOadpGlobalInfo 7 }

axsOadpPortConfigTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOadpPortConfigEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table of OADP port information."
	::= { axsOadpPortInfo 1 }

axsOadpPortConfigEntry OBJECT-TYPE
	SYNTAX  AxsOadpPortConfigEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry of OADP port information."
    INDEX { axsOadpPortConfigIfIndex }
	::= { axsOadpPortConfigTable 1 }

	AxsOadpPortConfigEntry ::=
		SEQUENCE {
		    axsOadpPortConfigIfIndex	InterfaceIndex,
		    axsOadpPortConfigActive	TruthValue
		}

axsOadpPortConfigIfIndex OBJECT-TYPE
	SYNTAX  InterfaceIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Port identification index. The same value as ifIndex.
		 This is only for physical ports and LA ports which are given
		 ifIndex."
	::= { axsOadpPortConfigEntry 1 }

axsOadpPortConfigActive OBJECT-TYPE
	SYNTAX  TruthValue
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of specified port."
	::= { axsOadpPortConfigEntry 2 }

axsOadpNeighborTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOadpNeighborEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table of OADP neighbor nodes."
	::= { axsOadpNeighborInfo 1 }

axsOadpNeighborEntry OBJECT-TYPE
	SYNTAX  AxsOadpNeighborEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry of OADP neighbor nodes."
    INDEX { axsOadpIfIndex, axsOadpTagID, axsOadpNeighborIndex, axsOadpNeighborTagID }
	::= { axsOadpNeighborTable 1 }

	AxsOadpNeighborEntry ::=
		SEQUENCE {
		    axsOadpIfIndex			InterfaceIndex,
		    axsOadpTagID		 		INTEGER, 
		    axsOadpNeighborIndex  		INTEGER,
		    axsOadpNeighborTagID   		INTEGER,
		    axsOadpNeighborVendorType   		INTEGER,
		    axsOadpNeighborSNMPAgentAddressType 	INTEGER,
		    axsOadpNeighborSNMPAgentAddress  	DisplayString,
		    axsOadpNeighborDescr		   	DisplayString,
		    axsOadpNeighborDeviceID	   	DisplayString,
		    axsOadpNeighborSlotPort 	   	DisplayString,
		    axsOadpNeighborIfIndex  	   	InterfaceIndex,
		    axsOadpNeighborIfSpeed   	   	Gauge,
		    axsOadpNeighborDeviceType   	   	DisplayString,
		    axsOadpNeighborService   	   	OCTET STRING,
		    axsOadpNeighborVTPMgmtDomain    	DisplayString,
		    axsOadpNeighborNativeVLAN     	INTEGER,
		    axsOadpNeighborDuplex 	     	INTEGER,
		    axsOadpNeighborApplianceID  	     	Gauge,
		    axsOadpNeighborVlanID   	     	Gauge,
		    axsOadpNeighborPowerConsumption     	Gauge,
		    axsOadpNeighborMTU           	Gauge,
		    axsOadpNeighborSysName            	DisplayString,
		    axsOadpNeighborSysObjectID          	OBJECT IDENTIFIER,
		    axsOadpNeighborSecondarySNMPAgentAddressType  INTEGER,
		    axsOadpNeighborSecondarySNMPAgentAddress      DisplayString,
		    axsOadpNeighborPhysLocation          DisplayString,
		    axsOadpNeighborCacheLastChange       TimeTicks,
		    axsOadpNeighborIfHighSpeed           Gauge
		}

axsOadpIfIndex OBJECT-TYPE
	SYNTAX  InterfaceIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ifIndex of reception interface."
	::= { axsOadpNeighborEntry 1 }

axsOadpTagID OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Tag ID of IEEE802.1Q which is attached MAC frame."
	::= { axsOadpNeighborEntry 2 }

axsOadpNeighborIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Unique numeric which identifies neighbor nodes"
	::= { axsOadpNeighborEntry 3 }

axsOadpNeighborTagID OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Value set at TagID TLV in OADP PDU which is sent from neighbor node."
	::= { axsOadpNeighborEntry 4 }

axsOadpNeighborVendorType OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		oadp(2),
		cdp(3)
    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Protocol type used to find to neighbor nodes."
	::= { axsOadpNeighborEntry 5 }

axsOadpNeighborSNMPAgentAddressType OBJECT-TYPE
	SYNTAX  INTEGER {
		ipv4(1),
		ipv6(20),
		other-notSupported(65535)
    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A kind of agent address to get information by SNMP."
	::= { axsOadpNeighborEntry 6 }

axsOadpNeighborSNMPAgentAddress OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"DisplayString formed information of agent address to get information by SNMP."
	::= { axsOadpNeighborEntry 7 }

axsOadpNeighborDescr OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"String of sysDescr of neighbor node."
	::= { axsOadpNeighborEntry 8 }

axsOadpNeighborDeviceID OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Neighbor node's device identifier."
	::= { axsOadpNeighborEntry 9 }

axsOadpNeighborSlotPort OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Unique string which identifies neighbor's sending interface."
	::= { axsOadpNeighborEntry 10 }

axsOadpNeighborIfIndex OBJECT-TYPE
	SYNTAX  InterfaceIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ifIndex of sending interface of neighbor node."
	::= { axsOadpNeighborEntry 11 }

axsOadpNeighborIfSpeed OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ifSpeed of sending interface of neighbor node."
	::= { axsOadpNeighborEntry 12 }

axsOadpNeighborDeviceType OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Device name of neighbor node."
	::= { axsOadpNeighborEntry 13 }

axsOadpNeighborService OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Functions neighbor node can offer."
	::= { axsOadpNeighborEntry 14 }

axsOadpNeighborVTPMgmtDomain OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VTP Management Domain of sending interface of neighbor node."
	::= { axsOadpNeighborEntry 15 }

axsOadpNeighborNativeVLAN OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Native VLAN number of sending interface of neighbor node."
	::= { axsOadpNeighborEntry 16 }

axsOadpNeighborDuplex OBJECT-TYPE
	SYNTAX  INTEGER {
		unknown(1),
		half(2),
		full(3)
    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Duplex information of sending interface of neighbor node."
	::= { axsOadpNeighborEntry 17 }

axsOadpNeighborApplianceID OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Appliance ID of neighbor node."
	::= { axsOadpNeighborEntry 18 }

axsOadpNeighborVlanID OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"VLAN ID for VoIP of neighbor node."
	::= { axsOadpNeighborEntry 19 }

axsOadpNeighborPowerConsumption OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Electric power comsumption of neighbor node."
	::= { axsOadpNeighborEntry 20 }

axsOadpNeighborMTU OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"MTU of sending interface of neighbor node."
	::= { axsOadpNeighborEntry 21 }

axsOadpNeighborSysName OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"sysName of neighbor node."
	::= { axsOadpNeighborEntry 22 }

axsOadpNeighborSysObjectID OBJECT-TYPE
	SYNTAX  OBJECT IDENTIFIER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"sysObjectID of neighbor node."
	::= { axsOadpNeighborEntry 23 }

axsOadpNeighborSecondarySNMPAgentAddressType OBJECT-TYPE
	SYNTAX  INTEGER {
		ipv4(1),
		ipv6(20),
		other-notSupported(65535)
    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A kind of agent secondary address to get information by SNMP."
	::= { axsOadpNeighborEntry 24 }

axsOadpNeighborSecondarySNMPAgentAddress OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"DisplayString formed information of agent secondary address to get information by SNMP."
	::= { axsOadpNeighborEntry 25 }

axsOadpNeighborPhysLocation OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"sysLocation of neighbor node."
	::= { axsOadpNeighborEntry 26 }

axsOadpNeighborCacheLastChange OBJECT-TYPE
	SYNTAX  TimeTicks
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Value of sysUpTime which is set when axsOadpNeighborEntry about neighbor node is updated."
	::= { axsOadpNeighborEntry 27 }

axsOadpNeighborIfHighSpeed OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ifHighSpeed of sending interface of neighbor node."
	::= { axsOadpNeighborEntry 28 }

-- axsFlow group
axsFlowResourcesSystemUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow filter function, flow Qo
		S function, NetFlow statistics information function per devic
		e."
	::= { axsFlowResources 1 }

axsFlowResourcesSystemFree OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of empty entries usable for flow filter function,
		 flow QoS function, NetFlow statistics information function p
		er device."
	::= { axsFlowResources 2 }

axsFlowResourcesSystemMax OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The maximum number of entries usable for flow filter functio
		n, flow Qos function, NetFlow statistics information function
		."
	::= { axsFlowResources 3 }

axsFlowResourcesSystemNetflowUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for NetFlow statistics informatio
		n."
	::= { axsFlowResources 4 }

axsFlowResourcesSystemPolicyUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for policy routing function per d
		evice."
	::= { axsFlowResources 5 }

axsFlowResourcesSystemPolicyMax OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The maximum number of entries usable for policy routing func
		tion per device."
	::= { axsFlowResources 6 }

axsFlowResourcesTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowResourcesEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of FlowResources table."
	::= { axsFlowResources 7 }

axsFlowResourcesEntry OBJECT-TYPE
	SYNTAX  AxsFlowResourcesEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of FlowResources."
	INDEX {
		axsFlowResourcesIndex
	}
	::= { axsFlowResourcesTable 1 }
	AxsFlowResourcesEntry ::= 
	    SEQUENCE {
		axsFlowResourcesIndex
			INTEGER,
		axsFlowResourcesFilterUsed
        	INTEGER,
		axsFlowResourcesFilterFree
        	INTEGER,
		axsFlowResourcesQosUsed
        	INTEGER,
		axsFlowResourcesNetflowUsed
        	INTEGER,
		axsFlowResourcesQosFree
        	INTEGER,
		axsFlowResourcesUpcUsed
        	INTEGER,
		axsFlowResourcesUpcFree
        	INTEGER,
		axsFlowResourcesPolicyUsed
        	INTEGER
        }

axsFlowResourcesIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates place information of the slot with PRU which ident
		ifies this table entries. "
	::= { axsFlowResourcesEntry 1 }

axsFlowResourcesFilterUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow filter function per PRU.
		"
	::= { axsFlowResourcesEntry 2 }

axsFlowResourcesFilterFree OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries usable for flow filter function per PR
		U."
	::= { axsFlowResourcesEntry 3 }

axsFlowResourcesQosUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow QoS functions per PRU."
	::= { axsFlowResourcesEntry 4 }

axsFlowResourcesNetflowUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for NetFlow statistics informatio
		n per PRU."
	::= { axsFlowResourcesEntry 5 }

axsFlowResourcesQosFree OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of empty entries usable for flow QoS function, Ne
		tFlow statistics information function per PRU."
	::= { axsFlowResourcesEntry 6 }

axsFlowResourcesUpcUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for UPC per PRU."
	::= { axsFlowResourcesEntry 7 }

axsFlowResourcesUpcFree OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of empty entries usable for UPC per PRU."
	::= { axsFlowResourcesEntry 8 }

axsFlowResourcesPolicyUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for policy routing function per P
		RU."
	::= { axsFlowResourcesEntry 9 }

axsFlowResourcesFilterInterfaceInTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowResourcesFilterInterfaceInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of Resources table of flow filter function per i
		nterface or physical port.(Inbound)"
	::= { axsFlowResources 8 }

axsFlowResourcesFilterInterfaceInEntry OBJECT-TYPE
	SYNTAX  AxsFlowResourcesFilterInterfaceInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of FlowResourcesFilterInterface."
	INDEX {
		axsFlowResourcesFilterInterfaceInifIndex,
		axsFlowResourcesFilterInterfaceInifIndexType
	}
	::= { axsFlowResourcesFilterInterfaceInTable 1 }
	AxsFlowResourcesFilterInterfaceInEntry ::= 
	    SEQUENCE {
		axsFlowResourcesFilterInterfaceInifIndex
			INTEGER,
		axsFlowResourcesFilterInterfaceInifIndexType
        	INTEGER,
		axsFlowResourcesFilterInterfaceInUsed
        	INTEGER
        }

axsFlowResourcesFilterInterfaceInifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowResourcesFilterInterfaceInEntry 1 }

axsFlowResourcesFilterInterfaceInifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowResourcesFilterInterfaceInEntry 2 }

axsFlowResourcesFilterInterfaceInUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow filter function per inte
		rface or physical port."
	::= { axsFlowResourcesFilterInterfaceInEntry 3 }

axsFlowResourcesFilterInterfaceOutTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowResourcesFilterInterfaceOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of Resources table of flow filter function per i
		nterface or physical port.(Outbound)"
	::= { axsFlowResources 9 }

axsFlowResourcesFilterInterfaceOutEntry OBJECT-TYPE
	SYNTAX  AxsFlowResourcesFilterInterfaceOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of FlowResourcesFilterInterface."
	INDEX {
		axsFlowResourcesFilterInterfaceOutifIndex,
		axsFlowResourcesFilterInterfaceOutifIndexType
	}
	::= { axsFlowResourcesFilterInterfaceOutTable 1 }
	AxsFlowResourcesFilterInterfaceOutEntry ::= 
	    SEQUENCE {
		axsFlowResourcesFilterInterfaceOutifIndex
			INTEGER,
		axsFlowResourcesFilterInterfaceOutifIndexType
        	INTEGER,
		axsFlowResourcesFilterInterfaceOutUsed
        	INTEGER
        }

axsFlowResourcesFilterInterfaceOutifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowResourcesFilterInterfaceOutEntry 1 }

axsFlowResourcesFilterInterfaceOutifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowResourcesFilterInterfaceOutEntry 2 }

axsFlowResourcesFilterInterfaceOutUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow filter function per inte
		rface or physical port."
	::= { axsFlowResourcesFilterInterfaceOutEntry 3 }

axsFlowResourcesQosInterfaceInTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowResourcesQosInterfaceInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of Resources table of flow QoS function per inte
		rface or physical port.(Inbound)"
	::= { axsFlowResources 10 }

axsFlowResourcesQosInterfaceInEntry OBJECT-TYPE
	SYNTAX  AxsFlowResourcesQosInterfaceInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of FlowResourcesQosInterface."
	INDEX {
		axsFlowResourcesQosInterfaceInifIndex,
		axsFlowResourcesQosInterfaceInifIndexType
	}
	::= { axsFlowResourcesQosInterfaceInTable 1 }
	AxsFlowResourcesQosInterfaceInEntry ::= 
	    SEQUENCE {
		axsFlowResourcesQosInterfaceInifIndex
			INTEGER,
		axsFlowResourcesQosInterfaceInifIndexType
        	INTEGER,
		axsFlowResourcesQosInterfaceInUsed
        	INTEGER
        }

axsFlowResourcesQosInterfaceInifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowResourcesQosInterfaceInEntry 1 }

axsFlowResourcesQosInterfaceInifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowResourcesQosInterfaceInEntry 2 }

axsFlowResourcesQosInterfaceInUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow Qos function per inte
		rface or physical port."
	::= { axsFlowResourcesQosInterfaceInEntry 3 }

axsFlowResourcesQosInterfaceOutTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowResourcesQosInterfaceOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of Resources table of flow QoS function per inte
		rface or physical port.(Outbound)"
	::= { axsFlowResources 11 }

axsFlowResourcesQosInterfaceOutEntry OBJECT-TYPE
	SYNTAX  AxsFlowResourcesQosInterfaceOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of FlowResourcesQosInterface."
	INDEX {
		axsFlowResourcesQosInterfaceOutifIndex,
		axsFlowResourcesQosInterfaceOutifIndexType
	}
	::= { axsFlowResourcesQosInterfaceOutTable 1 }
	AxsFlowResourcesQosInterfaceOutEntry ::= 
	    SEQUENCE {
		axsFlowResourcesQosInterfaceOutifIndex
			INTEGER,
		axsFlowResourcesQosInterfaceOutifIndexType
        	INTEGER,
		axsFlowResourcesQosInterfaceOutUsed
        	INTEGER
        }

axsFlowResourcesQosInterfaceOutifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowResourcesQosInterfaceOutEntry 1 }

axsFlowResourcesQosInterfaceOutifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowResourcesQosInterfaceOutEntry 2 }

axsFlowResourcesQosInterfaceOutUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow filter function per inte
		rface or physical port."
	::= { axsFlowResourcesQosInterfaceOutEntry 3 }

axsFlowResourcesFilterListInTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowResourcesFilterListInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of Resources table of flow filter function per l
		ist.(Inbound)"
	::= { axsFlowResources 12 }

axsFlowResourcesFilterListInEntry OBJECT-TYPE
	SYNTAX  AxsFlowResourcesFilterListInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of FlowResourcesFilterList."
	INDEX {
		axsFlowResourcesFilterListInifIndex,
		axsFlowResourcesFilterListInifIndexType,
		axsFlowResourcesFilterListInNumber
	}
	::= { axsFlowResourcesFilterListInTable 1 }
	AxsFlowResourcesFilterListInEntry ::= 
	    SEQUENCE {
		axsFlowResourcesFilterListInifIndex
			INTEGER,
		axsFlowResourcesFilterListInifIndexType
        	INTEGER,
		axsFlowResourcesFilterListInNumber
        	INTEGER,
		axsFlowResourcesFilterListInUsed
        	INTEGER
        }

axsFlowResourcesFilterListInifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowResourcesFilterListInEntry 1 }

axsFlowResourcesFilterListInifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowResourcesFilterListInEntry 2 }

axsFlowResourcesFilterListInNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowResourcesFilterListInEntry 3 }

axsFlowResourcesFilterListInUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow filter function per list
		."
	::= { axsFlowResourcesFilterListInEntry 4 }

axsFlowResourcesFilterListOutTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowResourcesFilterListOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of Resources table of flow filter function per l
		ist.(Outbound)"
	::= { axsFlowResources 13 }

axsFlowResourcesFilterListOutEntry OBJECT-TYPE
	SYNTAX  AxsFlowResourcesFilterListOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of FlowResourcesFilterList."
	INDEX {
		axsFlowResourcesFilterListOutifIndex,
		axsFlowResourcesFilterListOutifIndexType,
		axsFlowResourcesFilterListOutNumber
	}
	::= { axsFlowResourcesFilterListOutTable 1 }
	AxsFlowResourcesFilterListOutEntry ::= 
	    SEQUENCE {
		axsFlowResourcesFilterListOutifIndex
			INTEGER,
		axsFlowResourcesFilterListOutifIndexType
        	INTEGER,
		axsFlowResourcesFilterListOutNumber
        	INTEGER,
		axsFlowResourcesFilterListOutUsed
        	INTEGER
        }

axsFlowResourcesFilterListOutifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowResourcesFilterListOutEntry 1 }

axsFlowResourcesFilterListOutifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowResourcesFilterListOutEntry 2 }

axsFlowResourcesFilterListOutNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowResourcesFilterListOutEntry 3 }

axsFlowResourcesFilterListOutUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow filter function per list
		."
	::= { axsFlowResourcesFilterListOutEntry 4 }

axsFlowResourcesQosListInTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowResourcesQosListInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of Resources table of flow QoS function per list
		.(Inbound)"
	::= { axsFlowResources 14 }

axsFlowResourcesQosListInEntry OBJECT-TYPE
	SYNTAX  AxsFlowResourcesQosListInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of FlowResourcesQoSList."
	INDEX {
		axsFlowResourcesQosListInifIndex,
		axsFlowResourcesQosListInifIndexType,
		axsFlowResourcesQosListInNumber
	}
	::= { axsFlowResourcesQosListInTable 1 }
	AxsFlowResourcesQosListInEntry ::= 
	    SEQUENCE {
		axsFlowResourcesQosListInifIndex
			INTEGER,
		axsFlowResourcesQosListInifIndexType
        	INTEGER,
		axsFlowResourcesQosListInNumber
        	INTEGER,
		axsFlowResourcesQosListInUsed
        	INTEGER
        }

axsFlowResourcesQosListInifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowResourcesQosListInEntry 1 }

axsFlowResourcesQosListInifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowResourcesQosListInEntry 2 }

axsFlowResourcesQosListInNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowResourcesQosListInEntry 3 }

axsFlowResourcesQosListInUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow QoS function per list
		."
	::= { axsFlowResourcesQosListInEntry 4 }

axsFlowResourcesQosListOutTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowResourcesQosListOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of Resources table of flow QoS function per list
		.(Outbound)"
	::= { axsFlowResources 15 }

axsFlowResourcesQosListOutEntry OBJECT-TYPE
	SYNTAX  AxsFlowResourcesQosListOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of FlowResourcesQoSList."
	INDEX {
		axsFlowResourcesQosListOutifIndex,
		axsFlowResourcesQosListOutifIndexType,
		axsFlowResourcesQosListOutNumber
	}
	::= { axsFlowResourcesQosListOutTable 1 }
	AxsFlowResourcesQosListOutEntry ::= 
	    SEQUENCE {
		axsFlowResourcesQosListOutifIndex
			INTEGER,
		axsFlowResourcesQosListOutifIndexType
        	INTEGER,
		axsFlowResourcesQosListOutNumber
        	INTEGER,
		axsFlowResourcesQosListOutUsed
        	INTEGER
        }

axsFlowResourcesQosListOutifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowResourcesQosListOutEntry 1 }

axsFlowResourcesQosListOutifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowResourcesQosListOutEntry 2 }

axsFlowResourcesQosListOutNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowResourcesQosListOutEntry 3 }

axsFlowResourcesQosListOutUsed OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of entries used for flow QoS function per list
		."
	::= { axsFlowResourcesQosListOutEntry 4 }

axsFlowFilterInTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowFilterInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of flow filter detection condition table.(Inboun
		d)"
	::= { axsFlowFilter 1 }

axsFlowFilterInEntry OBJECT-TYPE
	SYNTAX  AxsFlowFilterInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of flow filter detection condition."
	INDEX {
		axsFlowFilterInifIndex,
		axsFlowFilterInifIndexType,
		axsFlowFilterInListNumber
	}
	::= { axsFlowFilterInTable 1 }
	AxsFlowFilterInEntry ::= 
	    SEQUENCE {
		axsFlowFilterInifIndex
			INTEGER,
		axsFlowFilterInifIndexType
        	INTEGER,
		axsFlowFilterInListNumber
        	INTEGER,
		axsFlowFilterInSrcMacOp
        	INTEGER,
		axsFlowFilterInSrcMac
        	MacAddress,
		axsFlowFilterInSrcMacMask
        	MacAddress,
		axsFlowFilterInDestMacOp
        	INTEGER,
		axsFlowFilterInDestMac
        	MacAddress,
		axsFlowFilterInDestMacMask
        	MacAddress,
		axsFlowFilterInEthernetType
        	OCTET STRING,
		axsFlowFilterInUserPriority
        	INTEGER,
		axsFlowFilterInLowerVlanList
        	OCTET STRING,
		axsFlowFilterInHigherVlanList
        	OCTET STRING,
		axsFlowFilterInProtocolNumber
        	INTEGER,
		axsFlowFilterInIpAddrType
        	InetAddressType,
		axsFlowFilterInSrcIpOp
        	INTEGER,
		axsFlowFilterInSrcIp
        	InetAddress,
		axsFlowFilterInSrcIpLength
        	INTEGER,
		axsFlowFilterInSrcIpRange
        	InetAddress,
		axsFlowFilterInDestIpOp
        	INTEGER,
		axsFlowFilterInDestIp
        	InetAddress,
		axsFlowFilterInDestIpLength
        	INTEGER,
		axsFlowFilterInDestIpRange
        	InetAddress,
		axsFlowFilterInDscp
        	INTEGER,
		axsFlowFilterInPrecedence
        	INTEGER,
		axsFlowFilterInUpperLength
        	INTEGER,
		axsFlowFilterInLowerLength
        	INTEGER,
		axsFlowFilterInFragments
        	INTEGER,
		axsFlowFilterInSrcPortOp
        	INTEGER,
		axsFlowFilterInSrcPort
        	INTEGER,
		axsFlowFilterInSrcPortRange
        	INTEGER,
		axsFlowFilterInDestPortOp
        	INTEGER,
		axsFlowFilterInDestPort
        	INTEGER,
		axsFlowFilterInDestPortRange
        	INTEGER,
		axsFlowFilterInAckFlag
        	INTEGER,
		axsFlowFilterInSynFlag
        	INTEGER,
		axsFlowFilterInIcmpType
        	INTEGER,
		axsFlowFilterInIcmpCode
        	INTEGER,
		axsFlowFilterInIgmpType
        	INTEGER
        }

axsFlowFilterInifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowFilterInEntry 1 }

axsFlowFilterInifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2(2)fixed."
	::= { axsFlowFilterInEntry 2 }

axsFlowFilterInListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowFilterInEntry 3 }

axsFlowFilterInSrcMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source MAC address on dete
		ction condition."
	::= { axsFlowFilterInEntry 4 }

axsFlowFilterInSrcMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source MAC address on detection condition."
	::= { axsFlowFilterInEntry 5 }

axsFlowFilterInSrcMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of source MAC address on detection specificat
		ion."
	::= { axsFlowFilterInEntry 6 }

axsFlowFilterInDestMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination MAC address on
		 detection condition."
	::= { axsFlowFilterInEntry 7 }

axsFlowFilterInDestMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination MAC address on detection condition."
	::= { axsFlowFilterInEntry 8 }

axsFlowFilterInDestMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of destination MAC address on detection speci
		fication."
	::= { axsFlowFilterInEntry 9 }

axsFlowFilterInEthernetType OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates type of ethernet V2 and IEEE802.3 SNAP/RFC1042 for
		m on detection condition."
	::= { axsFlowFilterInEntry 10 }

axsFlowFilterInUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates user priority in Tag-VLAN on detection condition."
	::= { axsFlowFilterInEntry 11 }

axsFlowFilterInLowerVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on detection condition.(He
		ad 1 bit indicates existence of untagged definition, and the 
		rest effective or non-effective of VLAN 1-2047.)"
	::= { axsFlowFilterInEntry 12 }

axsFlowFilterInHigherVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on detection condition.(Ea
		ch bit indicates whether VLAN 2048-4095 is effective or non-e
		ffective in order.)"
	::= { axsFlowFilterInEntry 13 }

axsFlowFilterInProtocolNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates upper protocol number on detection condition."
	::= { axsFlowFilterInEntry 14 }

axsFlowFilterInIpAddrType OBJECT-TYPE
	SYNTAX  InetAddressType
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates IP address type which is shown."
	::= { axsFlowFilterInEntry 15 }

axsFlowFilterInSrcIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source IP address on detec
		tion condition."
	::= { axsFlowFilterInEntry 16 }

axsFlowFilterInSrcIp OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source IP address on detection condition."
	::= { axsFlowFilterInEntry 17 }

axsFlowFilterInSrcIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 source IP address on detection condition."
	::= { axsFlowFilterInEntry 18 }

axsFlowFilterInSrcIpRange OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source IP address in range specified by detection condition.
		(maximum IP address)"
	::= { axsFlowFilterInEntry 19 }

axsFlowFilterInDestIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination IP address on 
		detection condition."
	::= { axsFlowFilterInEntry 20 }

axsFlowFilterInDestIp OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination IP address on detection condition."
	::= { axsFlowFilterInEntry 21 }

axsFlowFilterInDestIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 destination IP address on detection condition."
	::= { axsFlowFilterInEntry 22 }

axsFlowFilterInDestIpRange OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Destination IP address in range specified by detection condi
		tion.(maximum IP address)"
	::= { axsFlowFilterInEntry 23 }

axsFlowFilterInDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP on detection condition."
	::= { axsFlowFilterInEntry 24 }

axsFlowFilterInPrecedence OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of precedence on detection condition."
	::= { axsFlowFilterInEntry 25 }

axsFlowFilterInUpperLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The upper limit of IP user data length on detection conditio
		n. "
	::= { axsFlowFilterInEntry 26 }

axsFlowFilterInLowerLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The lower limit of IP user data length on detection conditio
		n."
	::= { axsFlowFilterInEntry 27 }

axsFlowFilterInFragments OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether 2nd fragment packet or later are included 
		in detection condition."
	::= { axsFlowFilterInEntry 28 }

axsFlowFilterInSrcPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source port number on dete
		ction condition."
	::= { axsFlowFilterInEntry 29 }

axsFlowFilterInSrcPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source port number on detection condition."
	::= { axsFlowFilterInEntry 30 }

axsFlowFilterInSrcPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source port number in range specified by detection condition
		.(maximum port number)"
	::= { axsFlowFilterInEntry 31 }

axsFlowFilterInDestPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination port number on
		 detection condition."
	::= { axsFlowFilterInEntry 32 }

axsFlowFilterInDestPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination port number on detection condition."
	::= { axsFlowFilterInEntry 33 }

axsFlowFilterInDestPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"destination port number in range specified by detection cond
		ition.(maximum port number)"
	::= { axsFlowFilterInEntry 34 }

axsFlowFilterInAckFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether TCP one-way communication permission is in
		cluded in detection condition or not."
	::= { axsFlowFilterInEntry 35 }

axsFlowFilterInSynFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether virtual circuit link-up permission is incl
		uded in detection condition or not."
	::= { axsFlowFilterInEntry 36 }

axsFlowFilterInIcmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 type on detection condition."
	::= { axsFlowFilterInEntry 37 }

axsFlowFilterInIcmpCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 code on detection condition."
	::= { axsFlowFilterInEntry 38 }

axsFlowFilterInIgmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates IGMP type on detection condition."
	::= { axsFlowFilterInEntry 39 }

axsFlowFilterOutTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowFilterOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of flow filter detection condition table.(Outbou
		nd)"
	::= { axsFlowFilter 2 }

axsFlowFilterOutEntry OBJECT-TYPE
	SYNTAX  AxsFlowFilterOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of flow filter detection condition."
	INDEX {
		axsFlowFilterOutifIndex,
		axsFlowFilterOutifIndexType,
		axsFlowFilterOutListNumber
	}
	::= { axsFlowFilterOutTable 1 }
	AxsFlowFilterOutEntry ::= 
	    SEQUENCE {
		axsFlowFilterOutifIndex
			INTEGER,
		axsFlowFilterOutifIndexType
        	INTEGER,
		axsFlowFilterOutListNumber
        	INTEGER,
		axsFlowFilterOutSrcMacOp
        	INTEGER,
		axsFlowFilterOutSrcMac
        	MacAddress,
		axsFlowFilterOutSrcMacMask
        	MacAddress,
		axsFlowFilterOutDestMacOp
        	INTEGER,
		axsFlowFilterOutDestMac
        	MacAddress,
		axsFlowFilterOutDestMacMask
        	MacAddress,
		axsFlowFilterOutEthernetType
        	OCTET STRING,
		axsFlowFilterOutUserPriority
        	INTEGER,
		axsFlowFilterOutLowerVlanList
        	OCTET STRING,
		axsFlowFilterOutHigherVlanList
        	OCTET STRING,
		axsFlowFilterOutProtocolNumber
        	INTEGER,
		axsFlowFilterOutIpAddrType
        	InetAddressType,
		axsFlowFilterOutSrcIpOp
        	INTEGER,
		axsFlowFilterOutSrcIp
        	InetAddress,
		axsFlowFilterOutSrcIpLength
        	INTEGER,
		axsFlowFilterOutSrcIpRange
        	InetAddress,
		axsFlowFilterOutDestIpOp
        	INTEGER,
		axsFlowFilterOutDestIp
        	InetAddress,
		axsFlowFilterOutDestIpLength
        	INTEGER,
		axsFlowFilterOutDestIpRange
        	InetAddress,
		axsFlowFilterOutDscp
        	INTEGER,
		axsFlowFilterOutPrecedence
        	INTEGER,
		axsFlowFilterOutUpperLength
        	INTEGER,
		axsFlowFilterOutLowerLength
        	INTEGER,
		axsFlowFilterOutFragments
        	INTEGER,
		axsFlowFilterOutSrcPortOp
        	INTEGER,
		axsFlowFilterOutSrcPort
        	INTEGER,
		axsFlowFilterOutSrcPortRange
        	INTEGER,
		axsFlowFilterOutDestPortOp
        	INTEGER,
		axsFlowFilterOutDestPort
        	INTEGER,
		axsFlowFilterOutDestPortRange
        	INTEGER,
		axsFlowFilterOutAckFlag
        	INTEGER,
		axsFlowFilterOutSynFlag
        	INTEGER,
		axsFlowFilterOutIcmpType
        	INTEGER,
		axsFlowFilterOutIcmpCode
        	INTEGER,
		axsFlowFilterOutIgmpType
        	INTEGER
        }

axsFlowFilterOutifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowFilterOutEntry 1 }

axsFlowFilterOutifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2(2)fixed."
	::= { axsFlowFilterOutEntry 2 }

axsFlowFilterOutListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowFilterOutEntry 3 }

axsFlowFilterOutSrcMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source MAC address on dete
		ction condition."
	::= { axsFlowFilterOutEntry 4 }

axsFlowFilterOutSrcMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source MAC address on detection condition."
	::= { axsFlowFilterOutEntry 5 }

axsFlowFilterOutSrcMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of source MAC address on detection specificat
		ion."
	::= { axsFlowFilterOutEntry 6 }

axsFlowFilterOutDestMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination MAC address on
		 detection condition."
	::= { axsFlowFilterOutEntry 7 }

axsFlowFilterOutDestMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination MAC address on detection condition."
	::= { axsFlowFilterOutEntry 8 }

axsFlowFilterOutDestMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of destination MAC address on detection speci
		fication."
	::= { axsFlowFilterOutEntry 9 }

axsFlowFilterOutEthernetType OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates type of ethernet V2 and IEEE802.3 SNAP/RFC1042 for
		m on detection condition."
	::= { axsFlowFilterOutEntry 10 }

axsFlowFilterOutUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates user priority in Tag-VLAN on detection condition."
	::= { axsFlowFilterOutEntry 11 }

axsFlowFilterOutLowerVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on detection condition.(He
		ad 1 bit indicates existence of untagged definition, and the 
		rest effective or non-effective of VLAN 1-2047.)"
	::= { axsFlowFilterOutEntry 12 }

axsFlowFilterOutHigherVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on detection condition.(Ea
		ch bit indicates whether VLAN 2048-4095 is effective or non-e
		ffective in order.)"
	::= { axsFlowFilterOutEntry 13 }

axsFlowFilterOutProtocolNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates upper protocol number on detection condition."
	::= { axsFlowFilterOutEntry 14 }

axsFlowFilterOutIpAddrType OBJECT-TYPE
	SYNTAX  InetAddressType
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates IP address type which is shown."
	::= { axsFlowFilterOutEntry 15 }

axsFlowFilterOutSrcIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source IP address on detec
		tion condition."
	::= { axsFlowFilterOutEntry 16 }

axsFlowFilterOutSrcIp OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source IP address on detection condition."
	::= { axsFlowFilterOutEntry 17 }

axsFlowFilterOutSrcIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 source IP address on detection condition."
	::= { axsFlowFilterOutEntry 18 }

axsFlowFilterOutSrcIpRange OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source IP address in range specified by detection condition.
		(maximum IP address)"
	::= { axsFlowFilterOutEntry 19 }

axsFlowFilterOutDestIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination IP address on 
		detection condition."
	::= { axsFlowFilterOutEntry 20 }

axsFlowFilterOutDestIp OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination IP address on detection condition."
	::= { axsFlowFilterOutEntry 21 }

axsFlowFilterOutDestIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 destination IP address on detection condition."
	::= { axsFlowFilterOutEntry 22 }

axsFlowFilterOutDestIpRange OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Destination IP address in range specified by detection condi
		tion.(maximum IP address)"
	::= { axsFlowFilterOutEntry 23 }

axsFlowFilterOutDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP on detection condition."
	::= { axsFlowFilterOutEntry 24 }

axsFlowFilterOutPrecedence OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of precedence on detection condition."
	::= { axsFlowFilterOutEntry 25 }

axsFlowFilterOutUpperLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The upper limit of IP user data length on detection conditio
		n. "
	::= { axsFlowFilterOutEntry 26 }

axsFlowFilterOutLowerLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The lower limit of IP user data length on detection conditio
		n."
	::= { axsFlowFilterOutEntry 27 }

axsFlowFilterOutFragments OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether 2nd fragment packet or later are included 
		in detection condition."
	::= { axsFlowFilterOutEntry 28 }

axsFlowFilterOutSrcPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source port number on dete
		ction condition."
	::= { axsFlowFilterOutEntry 29 }

axsFlowFilterOutSrcPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source port number on detection condition."
	::= { axsFlowFilterOutEntry 30 }

axsFlowFilterOutSrcPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source port number in range specified by detection condition
		.(maximum port number)"
	::= { axsFlowFilterOutEntry 31 }

axsFlowFilterOutDestPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination port number on
		 detection condition."
	::= { axsFlowFilterOutEntry 32 }

axsFlowFilterOutDestPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination port number on detection condition."
	::= { axsFlowFilterOutEntry 33 }

axsFlowFilterOutDestPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"destination port number in range specified by detection cond
		ition.(maximum port number)"
	::= { axsFlowFilterOutEntry 34 }

axsFlowFilterOutAckFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether TCP one-way communication permission is in
		cluded in detection condition or not."
	::= { axsFlowFilterOutEntry 35 }

axsFlowFilterOutSynFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether virtual circuit link-up permission is incl
		uded in detection condition or not."
	::= { axsFlowFilterOutEntry 36 }

axsFlowFilterOutIcmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 type on detection condition."
	::= { axsFlowFilterOutEntry 37 }

axsFlowFilterOutIcmpCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 code on detection condition."
	::= { axsFlowFilterOutEntry 38 }

axsFlowFilterOutIgmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates IGMP type on detection condition."
	::= { axsFlowFilterOutEntry 39 }

axsFlowFilterInActTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowFilterInActEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of action parameter table on flow filter detecti
		on condition.(Inbound)"
	::= { axsFlowFilter 3 }

axsFlowFilterInActEntry OBJECT-TYPE
	SYNTAX  AxsFlowFilterInActEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of action parameter on flow filter detection condition
		.(Inbound)"
	INDEX {
		axsFlowFilterInActifIndex,
		axsFlowFilterInActifIndexType,
		axsFlowFilterInActListNumber
	}
	::= { axsFlowFilterInActTable 1 }
	AxsFlowFilterInActEntry ::= 
	    SEQUENCE {
		axsFlowFilterInActifIndex
			INTEGER,
		axsFlowFilterInActifIndexType
        	INTEGER,
		axsFlowFilterInActListNumber
        	INTEGER,
		axsFlowFilterInActInfo
        	INTEGER
        }

axsFlowFilterInActifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowFilterInActEntry 1 }

axsFlowFilterInActifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowFilterInActEntry 2 }

axsFlowFilterInActListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowFilterInActEntry 3 }

axsFlowFilterInActInfo OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Information of action parameter on detection condition."
	::= { axsFlowFilterInActEntry 4 }

axsFlowFilterOutActTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowFilterOutActEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of action parameter table on flow filter detecti
		on condition.(Outbound)"
	::= { axsFlowFilter 4 }

axsFlowFilterOutActEntry OBJECT-TYPE
	SYNTAX  AxsFlowFilterOutActEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of action parameter on flow filter detection condition
		.(Outbound)"
	INDEX {
		axsFlowFilterOutActifIndex,
		axsFlowFilterOutActifIndexType,
		axsFlowFilterOutActListNumber
	}
	::= { axsFlowFilterOutActTable 1 }
	AxsFlowFilterOutActEntry ::= 
	    SEQUENCE {
		axsFlowFilterOutActifIndex
			INTEGER,
		axsFlowFilterOutActifIndexType
        	INTEGER,
		axsFlowFilterOutActListNumber
        	INTEGER,
		axsFlowFilterOutActInfo
        	INTEGER
        }

axsFlowFilterOutActifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowFilterOutActEntry 1 }

axsFlowFilterOutActifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowFilterOutActEntry 2 }

axsFlowFilterOutActListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowFilterOutActEntry 3 }

axsFlowFilterOutActInfo OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Information of action parameter on detection condition."
	::= { axsFlowFilterOutActEntry 4 }

axsFlowFilterStatsInTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowFilterStatsInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of statistics table of per action parameter on f
		low filter detection condition.(Inbound)"
	::= { axsFlowFilterStats 1 }

axsFlowFilterStatsInEntry OBJECT-TYPE
	SYNTAX  AxsFlowFilterStatsInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of statistics information of each action parameter on 
		flow filter detection condition.(Inbound)"
	INDEX {
		axsFlowFilterStatsInifIndex,
		axsFlowFilterStatsInifIndexType,
		axsFlowFilterStatsInListNumber
	}
	::= { axsFlowFilterStatsInTable 1 }
	AxsFlowFilterStatsInEntry ::= 
	    SEQUENCE {
		axsFlowFilterStatsInifIndex
			INTEGER,
		axsFlowFilterStatsInifIndexType
        	INTEGER,
		axsFlowFilterStatsInListNumber
        	INTEGER,
		axsFlowFilterStatsInDropPackets
        	Counter64,
		axsFlowFilterStatsInForwardPackets
        	Counter64,
		axsFlowFilterStatsInPolicyRoutedPackets
        	Counter64
        }

axsFlowFilterStatsInifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowFilterStatsInEntry 1 }

axsFlowFilterStatsInifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowFilterStatsInEntry 2 }

axsFlowFilterStatsInListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowFilterStatsInEntry 3 }

axsFlowFilterStatsInDropPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which were matched with detection cond
		ition and were discarded."
	::= { axsFlowFilterStatsInEntry 4 }

axsFlowFilterStatsInForwardPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which were matched with detection cond
		ition and were forwarded."
	::= { axsFlowFilterStatsInEntry 5 }

axsFlowFilterStatsInPolicyRoutedPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which were matched with detection cond
		ition and were policy routed."
	::= { axsFlowFilterStatsInEntry 6 }

axsFlowFilterStatsOutTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowFilterStatsOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of statistics table of per action parameter on f
		low filter detection condition.(Outbound)"
	::= { axsFlowFilterStats 2 }

axsFlowFilterStatsOutEntry OBJECT-TYPE
	SYNTAX  AxsFlowFilterStatsOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of statistics information of each action parameter on 
		flow filter detection condition.(Outbound)"
	INDEX {
		axsFlowFilterStatsOutifIndex,
		axsFlowFilterStatsOutifIndexType,
		axsFlowFilterStatsOutListNumber
	}
	::= { axsFlowFilterStatsOutTable 1 }
	AxsFlowFilterStatsOutEntry ::= 
	    SEQUENCE {
		axsFlowFilterStatsOutifIndex
			INTEGER,
		axsFlowFilterStatsOutifIndexType
        	INTEGER,
		axsFlowFilterStatsOutListNumber
        	INTEGER,
		axsFlowFilterStatsOutDropPackets
        	Counter64,
		axsFlowFilterStatsOutForwardPackets
        	Counter64
        }

axsFlowFilterStatsOutifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowFilterStatsOutEntry 1 }

axsFlowFilterStatsOutifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowFilterStatsOutEntry 2 }

axsFlowFilterStatsOutListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowFilterStatsOutEntry 3 }

axsFlowFilterStatsOutDropPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which were matched with detection cond
		ition and were discarded."
	::= { axsFlowFilterStatsOutEntry 4 }

axsFlowFilterStatsOutForwardPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which were matched with detection cond
		ition and were forwarded."
	::= { axsFlowFilterStatsOutEntry 5 }

axsFlowQosInTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of normal flow QoS detection condition table.(I
		nbound)"
	::= { axsFlowQos 1 }

axsFlowQosInEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of normal flow QoS detection condition."
	INDEX {
		axsFlowQosInifIndex,
		axsFlowQosInifIndexType,
		axsFlowQosInListNumber
	}
	::= { axsFlowQosInTable 1 }
	AxsFlowQosInEntry ::= 
	    SEQUENCE {
		axsFlowQosInifIndex
			INTEGER,
		axsFlowQosInifIndexType
        	INTEGER,
		axsFlowQosInListNumber
        	INTEGER,
		axsFlowQosInSrcMacOp
        	INTEGER,
		axsFlowQosInSrcMac
        	MacAddress,
		axsFlowQosInSrcMacMask
        	MacAddress,
		axsFlowQosInDestMacOp
        	INTEGER,
		axsFlowQosInDestMac
        	MacAddress,
		axsFlowQosInDestMacMask
        	MacAddress,
		axsFlowQosInEthernetType
        	OCTET STRING,
		axsFlowQosInUserPriority
        	INTEGER,
		axsFlowQosInLowerVlanList
        	OCTET STRING,
		axsFlowQosInHigherVlanList
        	OCTET STRING,
		axsFlowQosInProtocolNumber
        	INTEGER,
		axsFlowQosInIpAddrType
        	InetAddressType,
		axsFlowQosInSrcIpOp
        	INTEGER,
		axsFlowQosInSrcIp
        	InetAddress,
		axsFlowQosInSrcIpLength
        	INTEGER,
		axsFlowQosInSrcIpRange
        	InetAddress,
		axsFlowQosInDestIpOp
        	INTEGER,
		axsFlowQosInDestIp
        	InetAddress,
		axsFlowQosInDestIpLength
        	INTEGER,
		axsFlowQosInDestIpRange
        	InetAddress,
		axsFlowQosInDscp
        	INTEGER,
		axsFlowQosInPrecedence
        	INTEGER,
		axsFlowQosInUpperLength
        	INTEGER,
		axsFlowQosInLowerLength
        	INTEGER,
		axsFlowQosInFragments
        	INTEGER,
		axsFlowQosInSrcPortOp
        	INTEGER,
		axsFlowQosInSrcPort
        	INTEGER,
		axsFlowQosInSrcPortRange
        	INTEGER,
		axsFlowQosInDestPortOp
        	INTEGER,
		axsFlowQosInDestPort
        	INTEGER,
		axsFlowQosInDestPortRange
        	INTEGER,
		axsFlowQosInAckFlag
        	INTEGER,
		axsFlowQosInSynFlag
        	INTEGER,
		axsFlowQosInIcmpType
        	INTEGER,
		axsFlowQosInIcmpCode
        	INTEGER,
		axsFlowQosInIgmpType
        	INTEGER
        }

axsFlowQosInifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosInEntry 1 }

axsFlowQosInifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2(2)fixed."
	::= { axsFlowQosInEntry 2 }

axsFlowQosInListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosInEntry 3 }

axsFlowQosInSrcMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source MAC address on norm
		al flow detection condition."
	::= { axsFlowQosInEntry 4 }

axsFlowQosInSrcMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source MAC address on normal flow detection condi
		tion."
	::= { axsFlowQosInEntry 5 }

axsFlowQosInSrcMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of source MAC address on normal flow detecti
		on specification."
	::= { axsFlowQosInEntry 6 }

axsFlowQosInDestMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination MAC address on
		 normal flow detection condition."
	::= { axsFlowQosInEntry 7 }

axsFlowQosInDestMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination MAC address on normal flow detection 
		condition."
	::= { axsFlowQosInEntry 8 }

axsFlowQosInDestMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of destination MAC address on normal flow de
		tection specification."
	::= { axsFlowQosInEntry 9 }

axsFlowQosInEthernetType OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates type of ethernet V2 and IEEE802.3 SNAP/RFC1042 for
		m on normal flow detection condition."
	::= { axsFlowQosInEntry 10 }

axsFlowQosInUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates user priority in Tag-VLAN on normal detection con
		dition."
	::= { axsFlowQosInEntry 11 }

axsFlowQosInLowerVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on normal flow detection 
		condition.(Head 1 bit indicates existence of untagged definit
		ion, and the rest effective or non-effective of VLAN 1-2047.)
		"
	::= { axsFlowQosInEntry 12 }

axsFlowQosInHigherVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on normal flow detection 
		condition.(Each bit indicates whether VLAN 2048-4095 is effec
		tive or non-effective in order.)"
	::= { axsFlowQosInEntry 13 }

axsFlowQosInProtocolNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates upper protocol number on normal flow detection co
		ndition."
	::= { axsFlowQosInEntry 14 }

axsFlowQosInIpAddrType OBJECT-TYPE
	SYNTAX  InetAddressType
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates IP address type which is shown."
	::= { axsFlowQosInEntry 15 }

axsFlowQosInSrcIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source IP address on norma
		l flow detection condition."
	::= { axsFlowQosInEntry 16 }

axsFlowQosInSrcIp OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source IP address on normal flow detection condit
		ion."
	::= { axsFlowQosInEntry 17 }

axsFlowQosInSrcIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 source IP address on normal flow detection condition."
	::= { axsFlowQosInEntry 18 }

axsFlowQosInSrcIpRange OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source IP address in range specified by normal flow detecti
		on condition.(maximum IP address)"
	::= { axsFlowQosInEntry 19 }

axsFlowQosInDestIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination IP address on 
		normal flow detection condition."
	::= { axsFlowQosInEntry 20 }

axsFlowQosInDestIp OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination IP address on normal flow detection c
		ondition."
	::= { axsFlowQosInEntry 21 }

axsFlowQosInDestIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 destination IP address on normal flow detection condition."
	::= { axsFlowQosInEntry 22 }

axsFlowQosInDestIpRange OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Destination IP address in range specified by normal flow de
		tection condition.(maximum IP address)"
	::= { axsFlowQosInEntry 23 }

axsFlowQosInDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP on normal flow detection condition."
	::= { axsFlowQosInEntry 24 }

axsFlowQosInPrecedence OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of precedence on normal flow detection condition.
		"
	::= { axsFlowQosInEntry 25 }

axsFlowQosInUpperLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The upper limit of IP user data length on normal flow detec
		tion condition. "
	::= { axsFlowQosInEntry 26 }

axsFlowQosInLowerLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The lower limit of IP user data length on normal flow detec
		tion condition."
	::= { axsFlowQosInEntry 27 }

axsFlowQosInFragments OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether 2nd fragment packet or later are included 
		in normal flow detection condition."
	::= { axsFlowQosInEntry 28 }

axsFlowQosInSrcPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source port number on norm
		al flow detection condition."
	::= { axsFlowQosInEntry 29 }

axsFlowQosInSrcPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source port number on normal flow detection condi
		tion."
	::= { axsFlowQosInEntry 30 }

axsFlowQosInSrcPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source port number in range specified by normal flow detect
		ion condition.(maximum port number)"
	::= { axsFlowQosInEntry 31 }

axsFlowQosInDestPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination port number on
		 normal flow detection condition."
	::= { axsFlowQosInEntry 32 }

axsFlowQosInDestPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination port number on normal flow detection 
		condition."
	::= { axsFlowQosInEntry 33 }

axsFlowQosInDestPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"destination port number in range specified by normal flow d
		etection condition.(maximum port number)"
	::= { axsFlowQosInEntry 34 }

axsFlowQosInAckFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether TCP one-way communication permission is in
		cluded in normal flow detection condition or not."
	::= { axsFlowQosInEntry 35 }

axsFlowQosInSynFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether virtual circuit link-up permission is incl
		uded in normal flow detection condition or not."
	::= { axsFlowQosInEntry 36 }

axsFlowQosInIcmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 type on normal flow detection cond
		ition."
	::= { axsFlowQosInEntry 37 }

axsFlowQosInIcmpCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 code on normal flow detection cond
		ition."
	::= { axsFlowQosInEntry 38 }

axsFlowQosInIgmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates IGMP type on normal flow detection condition."
	::= { axsFlowQosInEntry 39 }

axsFlowQosInPremTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosInPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of premium flow QoS detection condition table.(I
		nbound)"
	::= { axsFlowQos 2 }

axsFlowQosInPremEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosInPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of premium flow QoS detection condition."
	INDEX {
		axsFlowQosInPremifIndex,
		axsFlowQosInPremifIndexType,
		axsFlowQosInPremListNumber
	}
	::= { axsFlowQosInPremTable 1 }
	AxsFlowQosInPremEntry ::= 
	    SEQUENCE {
		axsFlowQosInPremifIndex
			INTEGER,
		axsFlowQosInPremifIndexType
        	INTEGER,
		axsFlowQosInPremListNumber
        	INTEGER,
		axsFlowQosInPremSrcMacOp
        	INTEGER,
		axsFlowQosInPremSrcMac
        	MacAddress,
		axsFlowQosInPremSrcMacMask
        	MacAddress,
		axsFlowQosInPremDestMacOp
        	INTEGER,
		axsFlowQosInPremDestMac
        	MacAddress,
		axsFlowQosInPremDestMacMask
        	MacAddress,
		axsFlowQosInPremEthernetType
        	OCTET STRING,
		axsFlowQosInPremUserPriority
        	INTEGER,
		axsFlowQosInPremLowerVlanList
        	OCTET STRING,
		axsFlowQosInPremHigherVlanList
        	OCTET STRING,
		axsFlowQosInPremProtocolNumber
        	INTEGER,
		axsFlowQosInPremIpAddrType
        	InetAddressType,
		axsFlowQosInPremSrcIpOp
        	INTEGER,
		axsFlowQosInPremSrcIp
        	InetAddressType,
		axsFlowQosInPremSrcIpLength
        	INTEGER,
		axsFlowQosInPremSrcIpRange
        	InetAddressType,
		axsFlowQosInPremDestIpOp
        	INTEGER,
		axsFlowQosInPremDestIp
        	InetAddressType,
		axsFlowQosInPremDestIpLength
        	INTEGER,
		axsFlowQosInPremDestIpRange
        	InetAddressType,
		axsFlowQosInPremDscp
        	INTEGER,
		axsFlowQosInPremPrecedence
        	INTEGER,
		axsFlowQosInPremUpperLength
        	INTEGER,
		axsFlowQosInPremLowerLength
        	INTEGER,
		axsFlowQosInPremFragments
        	INTEGER,
		axsFlowQosInPremSrcPortOp
        	INTEGER,
		axsFlowQosInPremSrcPort
        	INTEGER,
		axsFlowQosInPremSrcPortRange
        	INTEGER,
		axsFlowQosInPremDestPortOp
        	INTEGER,
		axsFlowQosInPremDestPort
        	INTEGER,
		axsFlowQosInPremDestPortRange
        	INTEGER,
		axsFlowQosInPremAckFlag
        	INTEGER,
		axsFlowQosInPremSynFlag
        	INTEGER,
		axsFlowQosInPremIcmpType
        	INTEGER,
		axsFlowQosInPremIcmpCode
        	INTEGER,
		axsFlowQosInPremIgmpType
        	INTEGER
        }

axsFlowQosInPremifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosInPremEntry 1 }

axsFlowQosInPremifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2(2)fixed."
	::= { axsFlowQosInPremEntry 2 }

axsFlowQosInPremListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosInPremEntry 3 }

axsFlowQosInPremSrcMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source MAC address on prem
		ium flow detection condition."
	::= { axsFlowQosInPremEntry 4 }

axsFlowQosInPremSrcMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source MAC address on premium flow detection condi
		tion."
	::= { axsFlowQosInPremEntry 5 }

axsFlowQosInPremSrcMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of source MAC address on premium flow detecti
		on specification."
	::= { axsFlowQosInPremEntry 6 }

axsFlowQosInPremDestMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination MAC address on
		 premium flow detection condition."
	::= { axsFlowQosInPremEntry 7 }

axsFlowQosInPremDestMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination MAC address on premium flow detection 
		condition."
	::= { axsFlowQosInPremEntry 8 }

axsFlowQosInPremDestMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of destination MAC address on premium flow de
		tection specification."
	::= { axsFlowQosInPremEntry 9 }

axsFlowQosInPremEthernetType OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates type of ethernet V2 and IEEE802.3 SNAP/RFC1042 for
		m on premium flow detection condition."
	::= { axsFlowQosInPremEntry 10 }

axsFlowQosInPremUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates user priority in Tag-VLAN on premium flow detectio
		n condition."
	::= { axsFlowQosInPremEntry 11 }

axsFlowQosInPremLowerVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on premium flow detection 
		condition.(Head 1 bit indicates existence of untagged definit
		ion, and the rest effective or non-effective of VLAN 1-2047.)
		"
	::= { axsFlowQosInPremEntry 12 }

axsFlowQosInPremHigherVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on premium flow detection 
		condition.(Each bit indicates whether VLAN 2048-4095 is effec
		tive or non-effective in order.)"
	::= { axsFlowQosInPremEntry 13 }

axsFlowQosInPremProtocolNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates upper protocol number on premium flow detection co
		ndition."
	::= { axsFlowQosInPremEntry 14 }

axsFlowQosInPremIpAddrType OBJECT-TYPE
	SYNTAX  InetAddressType
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Shown IP address type."
	::= { axsFlowQosInPremEntry 15 }

axsFlowQosInPremSrcIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source IP address on premi
		um flow detection condition."
	::= { axsFlowQosInPremEntry 16 }

axsFlowQosInPremSrcIp OBJECT-TYPE
	SYNTAX  InetAddressType
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source IP address on premium flow detection condit
		ion."
	::= { axsFlowQosInPremEntry 17 }

axsFlowQosInPremSrcIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 source IP address on premium flow detection condition."
	::= { axsFlowQosInPremEntry 18 }

axsFlowQosInPremSrcIpRange OBJECT-TYPE
	SYNTAX  InetAddressType
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source IP address in range specified by premium flow detecti
		on condition.(maximum IP address)"
	::= { axsFlowQosInPremEntry 19 }

axsFlowQosInPremDestIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination IP address on 
		premium flow detection condition."
	::= { axsFlowQosInPremEntry 20 }

axsFlowQosInPremDestIp OBJECT-TYPE
	SYNTAX  InetAddressType
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination IP address on premium flow detection c
		ondition."
	::= { axsFlowQosInPremEntry 21 }

axsFlowQosInPremDestIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 destination IP address on premium flow detection condition."
	::= { axsFlowQosInPremEntry 22 }

axsFlowQosInPremDestIpRange OBJECT-TYPE
	SYNTAX  InetAddressType
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Destination IP address in range specified by premium flow de
		tection condition.(maximum IP address)"
	::= { axsFlowQosInPremEntry 23 }

axsFlowQosInPremDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP on premium flow detection condition."
	::= { axsFlowQosInPremEntry 24 }

axsFlowQosInPremPrecedence OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of precedence on premium flow detection condition.
		"
	::= { axsFlowQosInPremEntry 25 }

axsFlowQosInPremUpperLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The upper limit of IP user data length on premium flow detec
		tion condition. "
	::= { axsFlowQosInPremEntry 26 }

axsFlowQosInPremLowerLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The lower limit of IP user data length on premium flow detec
		tion condition."
	::= { axsFlowQosInPremEntry 27 }

axsFlowQosInPremFragments OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether 2nd fragment packet or later are included 
		in premium flow detection condition."
	::= { axsFlowQosInPremEntry 28 }

axsFlowQosInPremSrcPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source port number on prem
		ium flow detection condition."
	::= { axsFlowQosInPremEntry 29 }

axsFlowQosInPremSrcPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source port number on premium flow detection condi
		tion."
	::= { axsFlowQosInPremEntry 30 }

axsFlowQosInPremSrcPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source port number in range specified by premium flow detect
		ion condition.(maximum port number)"
	::= { axsFlowQosInPremEntry 31 }

axsFlowQosInPremDestPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination port number on
		 premium flow detection condition."
	::= { axsFlowQosInPremEntry 32 }

axsFlowQosInPremDestPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination port number on premium flow detection 
		condition."
	::= { axsFlowQosInPremEntry 33 }

axsFlowQosInPremDestPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"destination port number in range specified by premium flow d
		etection condition.(maximum port number)"
	::= { axsFlowQosInPremEntry 34 }

axsFlowQosInPremAckFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether TCP one-way communication permission is in
		cluded in premium flow detection condition or not."
	::= { axsFlowQosInPremEntry 35 }

axsFlowQosInPremSynFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether virtual circuit link-up permission is incl
		uded in premium flow detection condition or not."
	::= { axsFlowQosInPremEntry 36 }

axsFlowQosInPremIcmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 type on premium flow detection cond
		ition."
	::= { axsFlowQosInPremEntry 37 }

axsFlowQosInPremIcmpCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 code on premium flow detection cond
		ition."
	::= { axsFlowQosInPremEntry 38 }

axsFlowQosInPremIgmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates IGMP type on premium flow detection condition."
	::= { axsFlowQosInPremEntry 39 }

axsFlowQosOutTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of normal flow QoS detection condition table.(O
		utbound)"
	::= { axsFlowQos 3 }

axsFlowQosOutEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of normal flow QoS detection condition."
	INDEX {
		axsFlowQosOutifIndex,
		axsFlowQosOutifIndexType,
		axsFlowQosOutListNumber
	}
	::= { axsFlowQosOutTable 1 }
	AxsFlowQosOutEntry ::= 
	    SEQUENCE {
		axsFlowQosOutifIndex
			INTEGER,
		axsFlowQosOutifIndexType
        	INTEGER,
		axsFlowQosOutListNumber
        	INTEGER,
		axsFlowQosOutSrcMacOp
        	INTEGER,
		axsFlowQosOutSrcMac
        	MacAddress,
		axsFlowQosOutSrcMacMask
        	MacAddress,
		axsFlowQosOutDestMacOp
        	INTEGER,
		axsFlowQosOutDestMac
        	MacAddress,
		axsFlowQosOutDestMacMask
        	MacAddress,
		axsFlowQosOutEthernetType
        	OCTET STRING,
		axsFlowQosOutUserPriority
        	INTEGER,
		axsFlowQosOutLowerVlanList
        	OCTET STRING,
		axsFlowQosOutHigherVlanList
        	OCTET STRING,
		axsFlowQosOutProtocolNumber
        	INTEGER,
		axsFlowQosOutIpAddrType
        	InetAddressType,
		axsFlowQosOutSrcIpOp
        	INTEGER,
		axsFlowQosOutSrcIp
        	InetAddress,
		axsFlowQosOutSrcIpLength
        	INTEGER,
		axsFlowQosOutSrcIpRange
        	InetAddress,
		axsFlowQosOutDestIpOp
        	INTEGER,
		axsFlowQosOutDestIp
        	InetAddress,
		axsFlowQosOutDestIpLength
        	INTEGER,
		axsFlowQosOutDestIpRange
        	InetAddress,
		axsFlowQosOutDscp
        	INTEGER,
		axsFlowQosOutPrecedence
        	INTEGER,
		axsFlowQosOutUpperLength
        	INTEGER,
		axsFlowQosOutLowerLength
        	INTEGER,
		axsFlowQosOutFragments
        	INTEGER,
		axsFlowQosOutSrcPortOp
        	INTEGER,
		axsFlowQosOutSrcPort
        	INTEGER,
		axsFlowQosOutSrcPortRange
        	INTEGER,
		axsFlowQosOutDestPortOp
        	INTEGER,
		axsFlowQosOutDestPort
        	INTEGER,
		axsFlowQosOutDestPortRange
        	INTEGER,
		axsFlowQosOutAckFlag
        	INTEGER,
		axsFlowQosOutSynFlag
        	INTEGER,
		axsFlowQosOutIcmpType
        	INTEGER,
		axsFlowQosOutIcmpCode
        	INTEGER,
		axsFlowQosOutIgmpType
        	INTEGER
        }

axsFlowQosOutifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosOutEntry 1 }

axsFlowQosOutifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2(2)fixed."
	::= { axsFlowQosOutEntry 2 }

axsFlowQosOutListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosOutEntry 3 }

axsFlowQosOutSrcMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source MAC address on norm
		al flow detection condition."
	::= { axsFlowQosOutEntry 4 }

axsFlowQosOutSrcMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source MAC address on normal flow detection condi
		tion."
	::= { axsFlowQosOutEntry 5 }

axsFlowQosOutSrcMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of source MAC address on normal flow detecti
		on specification."
	::= { axsFlowQosOutEntry 6 }

axsFlowQosOutDestMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination MAC address on
		 normal flow detection condition."
	::= { axsFlowQosOutEntry 7 }

axsFlowQosOutDestMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination MAC address on normal flow detection 
		condition."
	::= { axsFlowQosOutEntry 8 }

axsFlowQosOutDestMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of destination MAC address on normal flow de
		tection specification."
	::= { axsFlowQosOutEntry 9 }

axsFlowQosOutEthernetType OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates type of ethernet V2 and IEEE802.3 SNAP/RFC1042 for
		m on normal flow detection condition."
	::= { axsFlowQosOutEntry 10 }

axsFlowQosOutUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates user priority in Tag-VLAN on normal detection con
		dition."
	::= { axsFlowQosOutEntry 11 }

axsFlowQosOutLowerVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on normal flow detection 
		condition.(Head 1 bit indicates existence of untagged definit
		ion, and the rest effective or non-effective of VLAN 1-2047.)
		"
	::= { axsFlowQosOutEntry 12 }

axsFlowQosOutHigherVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on normal flow detection 
		condition.(Each bit indicates whether VLAN 2048-4095 is effec
		tive or non-effective in order.)"
	::= { axsFlowQosOutEntry 13 }

axsFlowQosOutProtocolNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates upper protocol number on normal flow detection co
		ndition."
	::= { axsFlowQosOutEntry 14 }

axsFlowQosOutIpAddrType OBJECT-TYPE
	SYNTAX  InetAddressType
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates IP address type which is shown."
	::= { axsFlowQosOutEntry 15 }

axsFlowQosOutSrcIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source IP address on norma
		l flow detection condition."
	::= { axsFlowQosOutEntry 16 }

axsFlowQosOutSrcIp OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source IP address on normal flow detection condit
		ion."
	::= { axsFlowQosOutEntry 17 }

axsFlowQosOutSrcIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 source IP address on normal flow detection condition."
	::= { axsFlowQosOutEntry 18 }

axsFlowQosOutSrcIpRange OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source IP address in range specified by normal flow detecti
		on condition.(maximum IP address)"
	::= { axsFlowQosOutEntry 19 }

axsFlowQosOutDestIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination IP address on 
		normal flow detection condition."
	::= { axsFlowQosOutEntry 20 }

axsFlowQosOutDestIp OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination IP address on normal flow detection c
		ondition."
	::= { axsFlowQosOutEntry 21 }

axsFlowQosOutDestIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 destination IP address on normal flow detection condition."
	::= { axsFlowQosOutEntry 22 }

axsFlowQosOutDestIpRange OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Destination IP address in range specified by normal flow de
		tection condition.(maximum IP address)"
	::= { axsFlowQosOutEntry 23 }

axsFlowQosOutDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP on normal flow detection condition."
	::= { axsFlowQosOutEntry 24 }

axsFlowQosOutPrecedence OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of precedence on normal flow detection condition.
		"
	::= { axsFlowQosOutEntry 25 }

axsFlowQosOutUpperLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The upper limit of IP user data length on normal flow detec
		tion condition. "
	::= { axsFlowQosOutEntry 26 }

axsFlowQosOutLowerLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The lower limit of IP user data length on normal flow detec
		tion condition."
	::= { axsFlowQosOutEntry 27 }

axsFlowQosOutFragments OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether 2nd fragment packet or later are included 
		in normal flow detection condition."
	::= { axsFlowQosOutEntry 28 }

axsFlowQosOutSrcPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source port number on norm
		al flow detection condition."
	::= { axsFlowQosOutEntry 29 }

axsFlowQosOutSrcPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source port number on normal flow detection condi
		tion."
	::= { axsFlowQosOutEntry 30 }

axsFlowQosOutSrcPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source port number in range specified by normal flow detect
		ion condition.(maximum port number)"
	::= { axsFlowQosOutEntry 31 }

axsFlowQosOutDestPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination port number on
		 normal flow detection condition."
	::= { axsFlowQosOutEntry 32 }

axsFlowQosOutDestPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination port number on normal flow detection 
		condition."
	::= { axsFlowQosOutEntry 33 }

axsFlowQosOutDestPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"destination port number in range specified by normal flow d
		etection condition.(maximum port number)"
	::= { axsFlowQosOutEntry 34 }

axsFlowQosOutAckFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether TCP one-way communication permission is in
		cluded in normal flow detection condition or not."
	::= { axsFlowQosOutEntry 35 }

axsFlowQosOutSynFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether virtual circuit link-up permission is incl
		uded in normal flow detection condition or not."
	::= { axsFlowQosOutEntry 36 }

axsFlowQosOutIcmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 type on normal flow detection cond
		ition."
	::= { axsFlowQosOutEntry 37 }

axsFlowQosOutIcmpCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 code on normal flow detection cond
		ition."
	::= { axsFlowQosOutEntry 38 }

axsFlowQosOutIgmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates IGMP type on normal flow detection condition."
	::= { axsFlowQosOutEntry 39 }

axsFlowQosOutPremTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosOutPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of premium flow QoS detection condition table.(O
		utbound)"
	::= { axsFlowQos 4 }

axsFlowQosOutPremEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosOutPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of premium flow QoS detection condition."
	INDEX {
		axsFlowQosOutPremifIndex,
		axsFlowQosOutPremifIndexType,
		axsFlowQosOutPremListNumber
	}
	::= { axsFlowQosOutPremTable 1 }
	AxsFlowQosOutPremEntry ::= 
	    SEQUENCE {
		axsFlowQosOutPremifIndex
			INTEGER,
		axsFlowQosOutPremifIndexType
        	INTEGER,
		axsFlowQosOutPremListNumber
        	INTEGER,
		axsFlowQosOutPremSrcMacOp
        	INTEGER,
		axsFlowQosOutPremSrcMac
        	MacAddress,
		axsFlowQosOutPremSrcMacMask
        	MacAddress,
		axsFlowQosOutPremDestMacOp
        	INTEGER,
		axsFlowQosOutPremDestMac
        	MacAddress,
		axsFlowQosOutPremDestMacMask
        	MacAddress,
		axsFlowQosOutPremEthernetType
        	OCTET STRING,
		axsFlowQosOutPremUserPriority
        	INTEGER,
		axsFlowQosOutPremLowerVlanList
        	OCTET STRING,
		axsFlowQosOutPremHigherVlanList
        	OCTET STRING,
		axsFlowQosOutPremProtocolNumber
        	INTEGER,
		axsFlowQosOutPremIpAddrType
        	InetAddress,
		axsFlowQosOutPremSrcIpOp
        	INTEGER,
		axsFlowQosOutPremSrcIp
        	InetAddress,
		axsFlowQosOutPremSrcIpLength
        	INTEGER,
		axsFlowQosOutPremSrcIpRange
        	InetAddress,
		axsFlowQosOutPremDestIpOp
        	INTEGER,
		axsFlowQosOutPremDestIp
        	InetAddress,
		axsFlowQosOutPremDestIpLength
        	INTEGER,
		axsFlowQosOutPremDestIpRange
        	InetAddress,
		axsFlowQosOutPremDscp
        	INTEGER,
		axsFlowQosOutPremPrecedence
        	INTEGER,
		axsFlowQosOutPremUpperLength
        	INTEGER,
		axsFlowQosOutPremLowerLength
        	INTEGER,
		axsFlowQosOutPremFragments
        	INTEGER,
		axsFlowQosOutPremSrcPortOp
        	INTEGER,
		axsFlowQosOutPremSrcPort
        	INTEGER,
		axsFlowQosOutPremSrcPortRange
        	INTEGER,
		axsFlowQosOutPremDestPortOp
        	INTEGER,
		axsFlowQosOutPremDestPort
        	INTEGER,
		axsFlowQosOutPremDestPortRange
        	INTEGER,
		axsFlowQosOutPremAckFlag
        	INTEGER,
		axsFlowQosOutPremSynFlag
        	INTEGER,
		axsFlowQosOutPremIcmpType
        	INTEGER,
		axsFlowQosOutPremIcmpCode
        	INTEGER,
		axsFlowQosOutPremIgmpType
        	INTEGER
        }

axsFlowQosOutPremifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosOutPremEntry 1 }

axsFlowQosOutPremifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2(2)fixed."
	::= { axsFlowQosOutPremEntry 2 }

axsFlowQosOutPremListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosOutPremEntry 3 }

axsFlowQosOutPremSrcMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source MAC address on prem
		ium flow detection condition."
	::= { axsFlowQosOutPremEntry 4 }

axsFlowQosOutPremSrcMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source MAC address on premium flow detection condi
		tion."
	::= { axsFlowQosOutPremEntry 5 }

axsFlowQosOutPremSrcMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of source MAC address on premium flow detecti
		on specification."
	::= { axsFlowQosOutPremEntry 6 }

axsFlowQosOutPremDestMacOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination MAC address on
		 premium flow detection condition."
	::= { axsFlowQosOutPremEntry 7 }

axsFlowQosOutPremDestMac OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination MAC address on premium flow detection 
		condition."
	::= { axsFlowQosOutPremEntry 8 }

axsFlowQosOutPremDestMacMask OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates mask of destination MAC address on premium flow de
		tection specification."
	::= { axsFlowQosOutPremEntry 9 }

axsFlowQosOutPremEthernetType OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates type of ethernet V2 and IEEE802.3 SNAP/RFC1042 for
		m on premium flow detection condition."
	::= { axsFlowQosOutPremEntry 10 }

axsFlowQosOutPremUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates user priority in Tag-VLAN on premium flow detectio
		n condition."
	::= { axsFlowQosOutPremEntry 11 }

axsFlowQosOutPremLowerVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on premium flow detection 
		condition.(Head 1 bit indicates existence of untagged definit
		ion, and the rest effective or non-effective of VLAN 1-2047.)
		"
	::= { axsFlowQosOutPremEntry 12 }

axsFlowQosOutPremHigherVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map representation of VLAN ID on premium flow detection 
		condition.(Each bit indicates whether VLAN 2048-4095 is effec
		tive or non-effective in order.)"
	::= { axsFlowQosOutPremEntry 13 }

axsFlowQosOutPremProtocolNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates upper protocol number on premium flow detection co
		ndition."
	::= { axsFlowQosOutPremEntry 14 }

axsFlowQosOutPremIpAddrType OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Shown IP address type."
	::= { axsFlowQosOutPremEntry 15 }

axsFlowQosOutPremSrcIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source IP address on premi
		um flow detection condition."
	::= { axsFlowQosOutPremEntry 16 }

axsFlowQosOutPremSrcIp OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source IP address on premium flow detection condit
		ion."
	::= { axsFlowQosOutPremEntry 17 }

axsFlowQosOutPremSrcIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 source IP address on premium flow detection condition."
	::= { axsFlowQosOutPremEntry 18 }

axsFlowQosOutPremSrcIpRange OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source IP address in range specified by premium flow detecti
		on condition.(maximum IP address)"
	::= { axsFlowQosOutPremEntry 19 }

axsFlowQosOutPremDestIpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination IP address on 
		premium flow detection condition."
	::= { axsFlowQosOutPremEntry 20 }

axsFlowQosOutPremDestIp OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination IP address on premium flow detection c
		ondition."
	::= { axsFlowQosOutPremEntry 21 }

axsFlowQosOutPremDestIpLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates subnet mask length(ipv4) or prefix length(ipv6) of
		 destination IP address on premium flow detection condition."
	::= { axsFlowQosOutPremEntry 22 }

axsFlowQosOutPremDestIpRange OBJECT-TYPE
	SYNTAX  InetAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Destination IP address in range specified by premium flow de
		tection condition.(maximum IP address)"
	::= { axsFlowQosOutPremEntry 23 }

axsFlowQosOutPremDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP on premium flow detection condition."
	::= { axsFlowQosOutPremEntry 24 }

axsFlowQosOutPremPrecedence OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of precedence on premium flow detection condition.
		"
	::= { axsFlowQosOutPremEntry 25 }

axsFlowQosOutPremUpperLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The upper limit of IP user data length on premium flow detec
		tion condition. "
	::= { axsFlowQosOutPremEntry 26 }

axsFlowQosOutPremLowerLength OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The lower limit of IP user data length on premium flow detec
		tion condition."
	::= { axsFlowQosOutPremEntry 27 }

axsFlowQosOutPremFragments OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether 2nd fragment packet or later are included 
		in premium flow detection condition."
	::= { axsFlowQosOutPremEntry 28 }

axsFlowQosOutPremSrcPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of source port number on prem
		ium flow detection condition."
	::= { axsFlowQosOutPremEntry 29 }

axsFlowQosOutPremSrcPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates source port number on premium flow detection condi
		tion."
	::= { axsFlowQosOutPremEntry 30 }

axsFlowQosOutPremSrcPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Source port number in range specified by premium flow detect
		ion condition.(maximum port number)"
	::= { axsFlowQosOutPremEntry 31 }

axsFlowQosOutPremDestPortOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of destination port number on
		 premium flow detection condition."
	::= { axsFlowQosOutPremEntry 32 }

axsFlowQosOutPremDestPort OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates destination port number on premium flow detection 
		condition."
	::= { axsFlowQosOutPremEntry 33 }

axsFlowQosOutPremDestPortRange OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"destination port number in range specified by premium flow d
		etection condition.(maximum port number)"
	::= { axsFlowQosOutPremEntry 34 }

axsFlowQosOutPremAckFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether TCP one-way communication permission is in
		cluded in premium flow detection condition or not."
	::= { axsFlowQosOutPremEntry 35 }

axsFlowQosOutPremSynFlag OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether virtual circuit link-up permission is incl
		uded in premium flow detection condition or not."
	::= { axsFlowQosOutPremEntry 36 }

axsFlowQosOutPremIcmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 type on premium flow detection cond
		ition."
	::= { axsFlowQosOutPremEntry 37 }

axsFlowQosOutPremIcmpCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates ICMP or ICMPv6 code on premium flow detection cond
		ition."
	::= { axsFlowQosOutPremEntry 38 }

axsFlowQosOutPremIgmpType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates IGMP type on premium flow detection condition."
	::= { axsFlowQosOutPremEntry 39 }

axsFlowQosInActTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosInActEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of action parameter table on normal flow detect
		ion condition.(Inbound)"
	::= { axsFlowQos 5 }

axsFlowQosInActEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosInActEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of action parameter on normal flow detection conditio
		n.(Inbound)"
	INDEX {
		axsFlowQosInActifIndex,
		axsFlowQosInActifIndexType,
		axsFlowQosInActListNumber
	}
	::= { axsFlowQosInActTable 1 }
	AxsFlowQosInActEntry ::= 
	    SEQUENCE {
		axsFlowQosInActifIndex
			INTEGER,
		axsFlowQosInActifIndexType
        	INTEGER,
		axsFlowQosInActListNumber
        	INTEGER,
		axsFlowQosInActMaxRate
        	INTEGER,
		axsFlowQosInActMaxRateBurst
        	INTEGER,
		axsFlowQosInActMaxUpcRedMinBurst
        	INTEGER,
		axsFlowQosInActMaxUpcRedMaxBurst
        	INTEGER,
		axsFlowQosInActMaxUpcRedProbability
        	INTEGER,
		axsFlowQosInActMinRate
        	INTEGER,
		axsFlowQosInActMinRateBurst
        	INTEGER,
		axsFlowQosInActMinUpcRedMinBurst
        	INTEGER,
		axsFlowQosInActMinUpcRedMaxBurst
        	INTEGER,
		axsFlowQosInActMinUpcRedProbability
        	INTEGER,
		axsFlowQosInActAgQueueOp
        	INTEGER,
		axsFlowQosInActAgQueue
        	INTEGER,
		axsFlowQosInActPriority
        	INTEGER,
		axsFlowQosInActMaxUnderPriority
        	INTEGER,
		axsFlowQosInActMinOverPriority
        	INTEGER,
		axsFlowQosInActMinUnderPriority
        	INTEGER,
		axsFlowQosInActDiscard
        	INTEGER,
		axsFlowQosInActMaxUnderDiscard
        	INTEGER,
		axsFlowQosInActMinOverDiscard
        	INTEGER,
		axsFlowQosInActMinUnderDiscard
        	INTEGER,
		axsFlowQosInActDscpOp
        	INTEGER,
		axsFlowQosInActDscp
        	INTEGER,
		axsFlowQosInActMaxUnderDscp
        	INTEGER,
		axsFlowQosInActMinOverDscp
        	INTEGER,
		axsFlowQosInActMinUnderDscp
        	INTEGER,
		axsFlowQosInActUserPriority
        	INTEGER,
		axsFlowQosInActMaxUnderUserPriority
        	INTEGER,
		axsFlowQosInActMinOverUserPriority
        	INTEGER,
		axsFlowQosInActMinUnderUserPriority
        	INTEGER
        }

axsFlowQosInActifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosInActEntry 1 }

axsFlowQosInActifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowQosInActEntry 2 }

axsFlowQosInActListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosInActEntry 3 }

axsFlowQosInActMaxRate OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of monitoring bandwidth under maximum bandwidth co
		ntrol."
	::= { axsFlowQosInActEntry 4 }

axsFlowQosInActMaxRateBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Burst size under maximum bandwidth control."
	::= { axsFlowQosInActEntry 5 }

axsFlowQosInActMaxUpcRedMinBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Minimum burst size while using UPC-RED(Max) function."
	::= { axsFlowQosInActEntry 6 }

axsFlowQosInActMaxUpcRedMaxBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum burst size while using UPC-RED(Max) function."
	::= { axsFlowQosInActEntry 7 }

axsFlowQosInActMaxUpcRedProbability OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum violation rate while using UPC-RED(Max) function."
	::= { axsFlowQosInActEntry 8 }

axsFlowQosInActMinRate OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of monitoring bandwidth under minimum bandwidth co
		ntrol."
	::= { axsFlowQosInActEntry 9 }

axsFlowQosInActMinRateBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Burst size under minimum bandwidth control."
	::= { axsFlowQosInActEntry 10 }

axsFlowQosInActMinUpcRedMinBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Minimum burst size while using UPC-RED(Min) function."
	::= { axsFlowQosInActEntry 11 }

axsFlowQosInActMinUpcRedMaxBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum burst size while using UPC-RED(Min) function."
	::= { axsFlowQosInActEntry 12 }

axsFlowQosInActMinUpcRedProbability OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum violation rate while using UPC-RED(Min) function."
	::= { axsFlowQosInActEntry 13 }

axsFlowQosInActAgQueueOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of aggregate queue number of 
		layered shaper."
	::= { axsFlowQosInActEntry 14 }

axsFlowQosInActAgQueue OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Aggregate queue number of layered shaper."
	::= { axsFlowQosInActEntry 15 }

axsFlowQosInActPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Output priority when bandwidth monitoring function is not us
		ed."
	::= { axsFlowQosInActEntry 16 }

axsFlowQosInActMaxUnderPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Output priority of packets which complied with maximum contr
		act bandwidth when maximum bandwidth control is being used."
	::= { axsFlowQosInActEntry 17 }

axsFlowQosInActMinOverPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Output priority of packets which violated minimum contract b
		andwidth when minimum bandwidth control is being used."
	::= { axsFlowQosInActEntry 18 }

axsFlowQosInActMinUnderPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Output priority of packets which complied with minimum contr
		act bandwidth when minimum bandwidth control is being used."
	::= { axsFlowQosInActEntry 19 }

axsFlowQosInActDiscard OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Queuing priority when bandwidth monitoring function is not b
		eing used."
	::= { axsFlowQosInActEntry 20 }

axsFlowQosInActMaxUnderDiscard OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Queuing priority of packets which complied with maximum cont
		ract bandwidth when maximum bandwidth control is being used."
	::= { axsFlowQosInActEntry 21 }

axsFlowQosInActMinOverDiscard OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Queuing priority of packets which violated minimum contract 
		bandwidth when minimum bandwidth control is being used."
	::= { axsFlowQosInActEntry 22 }

axsFlowQosInActMinUnderDiscard OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Queuing priority of packets which complied with minimum cont
		ract bandwidth when minimum bandwidth control is being used."
	::= { axsFlowQosInActEntry 23 }

axsFlowQosInActDscpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates existence of DSCP mapping specification."
	::= { axsFlowQosInActEntry 24 }

axsFlowQosInActDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP when bandwidth monitoring function is not 
		being used."
	::= { axsFlowQosInActEntry 25 }

axsFlowQosInActMaxUnderDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP of packets which complied with maximum con
		tract bandwidth when maximum bandwidth control is being used.
		"
	::= { axsFlowQosInActEntry 26 }

axsFlowQosInActMinOverDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP of packets which violated minimum contract
		 bandwidth when minimum bandwidth control is being used."
	::= { axsFlowQosInActEntry 27 }

axsFlowQosInActMinUnderDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP of packets which complied with minimum con
		tract bandwidth when minimum bandwidth control is being used.
		"
	::= { axsFlowQosInActEntry 28 }

axsFlowQosInActUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates user priority when bandwidth monitoring function i
		s not being used."
	::= { axsFlowQosInActEntry 29 }

axsFlowQosInActMaxUnderUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"User priority of packets which complied with maximum contrac
		t bandwidth when maximum bandwidth control is being used."
	::= { axsFlowQosInActEntry 30 }

axsFlowQosInActMinOverUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"User priority of packets which violated minimum contract ban
		dwidth when minimum bandwidth control is being used."
	::= { axsFlowQosInActEntry 31 }

axsFlowQosInActMinUnderUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"User priority of packets which complied with minimum contrac
		t bandwidth when minimum bandwidth control is being used."
	::= { axsFlowQosInActEntry 32 }

axsFlowQosInActPremTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosInActPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of action parameter table on premium flow detect
		ion condition.(Inbound)"
	::= { axsFlowQos 6 }

axsFlowQosInActPremEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosInActPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of action parameter on premium flow detection conditio
		n.(Inbound)"
	INDEX {
		axsFlowQosInActPremifIndex,
		axsFlowQosInActPremifIndexType,
		axsFlowQosInActPremListNumber
	}
	::= { axsFlowQosInActPremTable 1 }
	AxsFlowQosInActPremEntry ::= 
	    SEQUENCE {
		axsFlowQosInActPremifIndex
			INTEGER,
		axsFlowQosInActPremifIndexType
        	INTEGER,
		axsFlowQosInActPremListNumber
        	INTEGER,
		axsFlowQosInActPremMaxRateBurst
        	INTEGER,
		axsFlowQosInActPremMinRateBurst
        	INTEGER
        }

axsFlowQosInActPremifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosInActPremEntry 1 }

axsFlowQosInActPremifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowQosInActPremEntry 2 }

axsFlowQosInActPremListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosInActPremEntry 3 }

axsFlowQosInActPremMaxRateBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Burst size of premium flow under maximum bandwidth control."
	::= { axsFlowQosInActPremEntry 4 }

axsFlowQosInActPremMinRateBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Burst size of premium flow under minimum bandwidth control."
	::= { axsFlowQosInActPremEntry 5 }

axsFlowQosOutActTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosOutActEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of action parameter table on normal flow detect
		ion condition.(Outbound)"
	::= { axsFlowQos 7 }

axsFlowQosOutActEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosOutActEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of action parameter on normal flow detection conditio
		n.(Outbound)"
	INDEX {
		axsFlowQosOutActifIndex,
		axsFlowQosOutActifIndexType,
		axsFlowQosOutActListNumber
	}
	::= { axsFlowQosOutActTable 1 }
	AxsFlowQosOutActEntry ::= 
	    SEQUENCE {
		axsFlowQosOutActifIndex
			INTEGER,
		axsFlowQosOutActifIndexType
        	INTEGER,
		axsFlowQosOutActListNumber
        	INTEGER,
		axsFlowQosOutActMaxRate
        	INTEGER,
		axsFlowQosOutActMaxRateBurst
        	INTEGER,
		axsFlowQosOutActMaxUpcRedMinBurst
        	INTEGER,
		axsFlowQosOutActMaxUpcRedMaxBurst
        	INTEGER,
		axsFlowQosOutActMaxUpcRedProbability
        	INTEGER,
		axsFlowQosOutActMinRate
        	INTEGER,
		axsFlowQosOutActMinRateBurst
        	INTEGER,
		axsFlowQosOutActMinUpcRedMinBurst
        	INTEGER,
		axsFlowQosOutActMinUpcRedMaxBurst
        	INTEGER,
		axsFlowQosOutActMinUpcRedProbability
        	INTEGER,
		axsFlowQosOutActAgQueueOp
        	INTEGER,
		axsFlowQosOutActAgQueue
        	INTEGER,
		axsFlowQosOutActPriority
        	INTEGER,
		axsFlowQosOutActMaxUnderPriority
        	INTEGER,
		axsFlowQosOutActMinOverPriority
        	INTEGER,
		axsFlowQosOutActMinUnderPriority
        	INTEGER,
		axsFlowQosOutActDiscard
        	INTEGER,
		axsFlowQosOutActMaxUnderDiscard
        	INTEGER,
		axsFlowQosOutActMinOverDiscard
        	INTEGER,
		axsFlowQosOutActMinUnderDiscard
        	INTEGER,
		axsFlowQosOutActDscpOp
        	INTEGER,
		axsFlowQosOutActDscp
        	INTEGER,
		axsFlowQosOutActMaxUnderDscp
        	INTEGER,
		axsFlowQosOutActMinOverDscp
        	INTEGER,
		axsFlowQosOutActMinUnderDscp
        	INTEGER,
		axsFlowQosOutActUserPriority
        	INTEGER,
		axsFlowQosOutActMaxUnderUserPriority
        	INTEGER,
		axsFlowQosOutActMinOverUserPriority
        	INTEGER,
		axsFlowQosOutActMinUnderUserPriority
        	INTEGER
        }

axsFlowQosOutActifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosOutActEntry 1 }

axsFlowQosOutActifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowQosOutActEntry 2 }

axsFlowQosOutActListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosOutActEntry 3 }

axsFlowQosOutActMaxRate OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of monitoring bandwidth under maximum bandwidth co
		ntrol."
	::= { axsFlowQosOutActEntry 4 }

axsFlowQosOutActMaxRateBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Burst size under maximum bandwidth control."
	::= { axsFlowQosOutActEntry 5 }

axsFlowQosOutActMaxUpcRedMinBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Minimum burst size while using UPC-RED(Max) function."
	::= { axsFlowQosOutActEntry 6 }

axsFlowQosOutActMaxUpcRedMaxBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum burst size while using UPC-RED(Max) function."
	::= { axsFlowQosOutActEntry 7 }

axsFlowQosOutActMaxUpcRedProbability OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum violation rate while using UPC-RED(Max) function."
	::= { axsFlowQosOutActEntry 8 }

axsFlowQosOutActMinRate OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of monitoring bandwidth under minimum bandwidth co
		ntrol."
	::= { axsFlowQosOutActEntry 9 }

axsFlowQosOutActMinRateBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Burst size under minimum bandwidth control."
	::= { axsFlowQosOutActEntry 10 }

axsFlowQosOutActMinUpcRedMinBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Minimum burst size while using UPC-RED(Min) function."
	::= { axsFlowQosOutActEntry 11 }

axsFlowQosOutActMinUpcRedMaxBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum burst size while using UPC-RED(Min) function."
	::= { axsFlowQosOutActEntry 12 }

axsFlowQosOutActMinUpcRedProbability OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Maximum violation rate while using UPC-RED(Min) function."
	::= { axsFlowQosOutActEntry 13 }

axsFlowQosOutActAgQueueOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates specification method of aggregate queue number of 
		layered shaper."
	::= { axsFlowQosOutActEntry 14 }

axsFlowQosOutActAgQueue OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Aggregate queue number of layered shaper."
	::= { axsFlowQosOutActEntry 15 }

axsFlowQosOutActPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Output priority when bandwidth monitoring function is not us
		ed."
	::= { axsFlowQosOutActEntry 16 }

axsFlowQosOutActMaxUnderPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Output priority of packets which complied with maximum contr
		act bandwidth when maximum bandwidth control is being used."
	::= { axsFlowQosOutActEntry 17 }

axsFlowQosOutActMinOverPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Output priority of packets which violated minimum contract b
		andwidth when minimum bandwidth control is being used."
	::= { axsFlowQosOutActEntry 18 }

axsFlowQosOutActMinUnderPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Output priority of packets which complied with minimum contr
		act bandwidth when minimum bandwidth control is being used."
	::= { axsFlowQosOutActEntry 19 }

axsFlowQosOutActDiscard OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Queuing priority when bandwidth monitoring function is not b
		eing used."
	::= { axsFlowQosOutActEntry 20 }

axsFlowQosOutActMaxUnderDiscard OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Queuing priority of packets which complied with maximum cont
		ract bandwidth when maximum bandwidth control is being used."
	::= { axsFlowQosOutActEntry 21 }

axsFlowQosOutActMinOverDiscard OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Queuing priority of packets which violated minimum contract 
		bandwidth when minimum bandwidth control is being used."
	::= { axsFlowQosOutActEntry 22 }

axsFlowQosOutActMinUnderDiscard OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Queuing priority of packets which complied with minimum cont
		ract bandwidth when minimum bandwidth control is being used."
	::= { axsFlowQosOutActEntry 23 }

axsFlowQosOutActDscpOp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates existence of DSCP mapping specification."
	::= { axsFlowQosOutActEntry 24 }

axsFlowQosOutActDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP when bandwidth monitoring function is not 
		being used."
	::= { axsFlowQosOutActEntry 25 }

axsFlowQosOutActMaxUnderDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP of packets which complied with maximum con
		tract bandwidth when maximum bandwidth control is being used.
		"
	::= { axsFlowQosOutActEntry 26 }

axsFlowQosOutActMinOverDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP of packets which violated minimum contract
		 bandwidth when minimum bandwidth control is being used."
	::= { axsFlowQosOutActEntry 27 }

axsFlowQosOutActMinUnderDscp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of DSCP of packets which complied with minimum con
		tract bandwidth when minimum bandwidth control is being used.
		"
	::= { axsFlowQosOutActEntry 28 }

axsFlowQosOutActUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates user priority when bandwidth monitoring function i
		s not being used."
	::= { axsFlowQosOutActEntry 29 }

axsFlowQosOutActMaxUnderUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"User priority of packets which complied with maximum contrac
		t bandwidth when maximum bandwidth control is being used."
	::= { axsFlowQosOutActEntry 30 }

axsFlowQosOutActMinOverUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"User priority of packets which violated minimum contract ban
		dwidth when minimum bandwidth control is being used."
	::= { axsFlowQosOutActEntry 31 }

axsFlowQosOutActMinUnderUserPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"User priority of packets which complied with minimum contrac
		t bandwidth when minimum bandwidth control is being used."
	::= { axsFlowQosOutActEntry 32 }

axsFlowQosOutActPremTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosOutActPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of action parameter table on premium flow detect
		ion condition.(Outbound)"
	::= { axsFlowQos 8 }

axsFlowQosOutActPremEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosOutActPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of action parameter on premium flow detection conditio
		n.(Outbound)"
	INDEX {
		axsFlowQosOutActPremifIndex,
		axsFlowQosOutActPremifIndexType,
		axsFlowQosOutActPremListNumber
	}
	::= { axsFlowQosOutActPremTable 1 }
	AxsFlowQosOutActPremEntry ::= 
	    SEQUENCE {
		axsFlowQosOutActPremifIndex
			INTEGER,
		axsFlowQosOutActPremifIndexType
        	INTEGER,
		axsFlowQosOutActPremListNumber
        	INTEGER,
		axsFlowQosOutActPremMaxRateBurst
        	INTEGER,
		axsFlowQosOutActPremMinRateBurst
        	INTEGER
        }

axsFlowQosOutActPremifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosOutActPremEntry 1 }

axsFlowQosOutActPremifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowQosOutActPremEntry 2 }

axsFlowQosOutActPremListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosOutActPremEntry 3 }

axsFlowQosOutActPremMaxRateBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Burst size of premium flow under maximum bandwidth control."
	::= { axsFlowQosOutActPremEntry 4 }

axsFlowQosOutActPremMinRateBurst OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Burst size of premium flow under minimum bandwidth control."
	::= { axsFlowQosOutActPremEntry 5 }

axsFlowQosStatsInTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosStatsInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of statistics table which matched normal flow de
		tection condition."
	::= { axsFlowQosStats 1 }

axsFlowQosStatsInEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosStatsInEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of statistics information which matched normal flow de
		tection condition."
	INDEX {
		axsFlowQosStatsInifIndex,
		axsFlowQosStatsInifIndexType,
		axsFlowQosStatsInListNumber
	}
	::= { axsFlowQosStatsInTable 1 }
	AxsFlowQosStatsInEntry ::= 
	    SEQUENCE {
		axsFlowQosStatsInifIndex
			INTEGER,
		axsFlowQosStatsInifIndexType
        	INTEGER,
		axsFlowQosStatsInListNumber
        	INTEGER,
		axsFlowQosStatsInHitPackets
        	Counter64,
		axsFlowQosStatsInMaxOverPackets
        	Counter64,
		axsFlowQosStatsInMaxUnderPackets
        	Counter64,
		axsFlowQosStatsInMinOverPackets
        	Counter64,
		axsFlowQosStatsInMinUnderPackets
        	Counter64
        }

axsFlowQosStatsInifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosStatsInEntry 1 }

axsFlowQosStatsInifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowQosStatsInEntry 2 }

axsFlowQosStatsInListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosStatsInEntry 3 }

axsFlowQosStatsInHitPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which matched normal flow detection co
		ndition."
	::= { axsFlowQosStatsInEntry 4 }

axsFlowQosStatsInMaxOverPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which violated maximum contract bandwi
		dth and matched normal flow detection condition."
	::= { axsFlowQosStatsInEntry 5 }

axsFlowQosStatsInMaxUnderPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which complied with maximum contract b
		andwidth and matched normal flow detection condition."
	::= { axsFlowQosStatsInEntry 6 }

axsFlowQosStatsInMinOverPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which violated minimum contract bandwi
		dth and matched normal flow detection condition."
	::= { axsFlowQosStatsInEntry 7 }

axsFlowQosStatsInMinUnderPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which complied with minimum contract b
		andwidth and matched normal flow detection condition."
	::= { axsFlowQosStatsInEntry 8 }

axsFlowQosStatsInPremTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosStatsInPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of statistics table which matched premium flow d
		etection condition."
	::= { axsFlowQosStats 2 }

axsFlowQosStatsInPremEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosStatsInPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of statistics information which matched premium flow d
		etection condition."
	INDEX {
		axsFlowQosStatsInPremifIndex,
		axsFlowQosStatsInPremifIndexType,
		axsFlowQosStatsInPremListNumber
	}
	::= { axsFlowQosStatsInPremTable 1 }
	AxsFlowQosStatsInPremEntry ::= 
	    SEQUENCE {
		axsFlowQosStatsInPremifIndex
			INTEGER,
		axsFlowQosStatsInPremifIndexType
        	INTEGER,
		axsFlowQosStatsInPremListNumber
        	INTEGER,
		axsFlowQosStatsInPremMaxOverPackets
        	Counter64,
		axsFlowQosStatsInPremMaxUnderPackets
        	Counter64,
		axsFlowQosStatsInPremMinOverPackets
        	Counter64,
		axsFlowQosStatsInPremMinUnderPackets
        	Counter64
        }

axsFlowQosStatsInPremifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosStatsInPremEntry 1 }

axsFlowQosStatsInPremifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowQosStatsInPremEntry 2 }

axsFlowQosStatsInPremListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosStatsInPremEntry 3 }

axsFlowQosStatsInPremMaxOverPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which violated maximum contract bandwi
		dth and matched premium flow detection condition."
	::= { axsFlowQosStatsInPremEntry 4 }

axsFlowQosStatsInPremMaxUnderPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which complied with maximum contract b
		andwidth and matched premium flow detection condition."
	::= { axsFlowQosStatsInPremEntry 5 }

axsFlowQosStatsInPremMinOverPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which violated minimum contract bandwi
		dth and matched premium flow detection condition."
	::= { axsFlowQosStatsInPremEntry 6 }

axsFlowQosStatsInPremMinUnderPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which complied with minimum contract b
		andwidth and matched premium flow detection condition."
	::= { axsFlowQosStatsInPremEntry 7 }

axsFlowQosStatsOutTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosStatsOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of statistics table which matched normal flow de
		tection condition."
	::= { axsFlowQosStats 3 }

axsFlowQosStatsOutEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosStatsOutEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of statistics information which matched normal flow de
		tection condition."
	INDEX {
		axsFlowQosStatsOutifIndex,
		axsFlowQosStatsOutifIndexType,
		axsFlowQosStatsOutListNumber
	}
	::= { axsFlowQosStatsOutTable 1 }
	AxsFlowQosStatsOutEntry ::= 
	    SEQUENCE {
		axsFlowQosStatsOutifIndex
			INTEGER,
		axsFlowQosStatsOutifIndexType
        	INTEGER,
		axsFlowQosStatsOutListNumber
        	INTEGER,
		axsFlowQosStatsOutHitPackets
        	Counter64,
		axsFlowQosStatsOutMaxOverPackets
        	Counter64,
		axsFlowQosStatsOutMaxUnderPackets
        	Counter64,
		axsFlowQosStatsOutMinOverPackets
        	Counter64,
		axsFlowQosStatsOutMinUnderPackets
        	Counter64
        }

axsFlowQosStatsOutifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosStatsOutEntry 1 }

axsFlowQosStatsOutifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowQosStatsOutEntry 2 }

axsFlowQosStatsOutListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosStatsOutEntry 3 }

axsFlowQosStatsOutHitPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which matched normal flow detection co
		ndition."
	::= { axsFlowQosStatsOutEntry 4 }

axsFlowQosStatsOutMaxOverPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which violated maximum contract bandwi
		dth and matched normal flow detection condition."
	::= { axsFlowQosStatsOutEntry 5 }

axsFlowQosStatsOutMaxUnderPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which complied with maximum contract b
		andwidth and matched normal flow detection condition."
	::= { axsFlowQosStatsOutEntry 6 }

axsFlowQosStatsOutMinOverPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which violated minimum contract bandwi
		dth and matched normal flow detection condition."
	::= { axsFlowQosStatsOutEntry 7 }

axsFlowQosStatsOutMinUnderPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which complied with minimum contract b
		andwidth and matched normal flow detection condition."
	::= { axsFlowQosStatsOutEntry 8 }

axsFlowQosStatsOutPremTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsFlowQosStatsOutPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information of statistics table which matched premium flow d
		etection condition."
	::= { axsFlowQosStats 4 }

axsFlowQosStatsOutPremEntry OBJECT-TYPE
	SYNTAX  AxsFlowQosStatsOutPremEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Entry of statistics information which matched premium flow d
		etection condition."
	INDEX {
		axsFlowQosStatsOutPremifIndex,
		axsFlowQosStatsOutPremifIndexType,
		axsFlowQosStatsOutPremListNumber
	}
	::= { axsFlowQosStatsOutPremTable 1 }
	AxsFlowQosStatsOutPremEntry ::= 
	    SEQUENCE {
		axsFlowQosStatsOutPremifIndex
			INTEGER,
		axsFlowQosStatsOutPremifIndexType
        	INTEGER,
		axsFlowQosStatsOutPremListNumber
        	INTEGER,
		axsFlowQosStatsOutPremMaxOverPackets
        	Counter64,
		axsFlowQosStatsOutPremMaxUnderPackets
        	Counter64,
		axsFlowQosStatsOutPremMinOverPackets
        	Counter64,
		axsFlowQosStatsOutPremMinUnderPackets
        	Counter64
        }

axsFlowQosStatsOutPremifIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(ifIndex) which identifies this 
		table entry."
	::= { axsFlowQosStatsOutPremEntry 1 }

axsFlowQosStatsOutPremifIndexType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates interface type.Physical port number : 1Interface n
		ame : 2"
	::= { axsFlowQosStatsOutPremEntry 2 }

axsFlowQosStatsOutPremListNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Indicates the value of index(list number) which identifies t
		his table entry."
	::= { axsFlowQosStatsOutPremEntry 3 }

axsFlowQosStatsOutPremMaxOverPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which violated maximum contract bandwi
		dth and matched premium flow detection condition."
	::= { axsFlowQosStatsOutPremEntry 4 }

axsFlowQosStatsOutPremMaxUnderPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which complied with maximum contract b
		andwidth and matched premium flow detection condition."
	::= { axsFlowQosStatsOutPremEntry 5 }

axsFlowQosStatsOutPremMinOverPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which violated minimum contract bandwi
		dth and matched premium flow detection condition."
	::= { axsFlowQosStatsOutPremEntry 6 }

axsFlowQosStatsOutPremMinUnderPackets OBJECT-TYPE
	SYNTAX  Counter64
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of packets which complied with minimum contract b
		andwidth and matched premium flow detection condition."
	::= { axsFlowQosStatsOutPremEntry 7 }

--  OSPF General Variables

axsOspfGeneralTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfGeneralEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table of OSPF information."
	::= { axsOspf 1 }

axsOspfGeneralEntry OBJECT-TYPE
	SYNTAX  AxsOspfGeneralEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry of OSPF information."
    INDEX { axsOspfGeneralDomainNumber }
	::= { axsOspfGeneralTable 1 }

	AxsOspfGeneralEntry ::=
		SEQUENCE {
		    axsOspfGeneralDomainNumber	INTEGER,
		    axsOspfRouterId				IpAddress,
		    axsOspfAdminStat				INTEGER,
		    axsOspfVersionNumber			INTEGER,
		    axsOspfAreaBdrRtrStatus		INTEGER,
		    axsOspfASBdrRtrStatus		INTEGER,
		    axsOspfExternLsaCount		Gauge,
		    axsOspfExternLsaCksumSum		INTEGER,
		    axsOspfTOSSupport			INTEGER,
		    axsOspfOriginateNewLsas		Counter,
		    axsOspfRxNewLsas				Counter,
		    axsOspfExtLsdbLimit			INTEGER,
		    axsOspfMulticastExtensions	INTEGER
		}

axsOspfGeneralDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Domain number in the Autonomous System."
	::= { axsOspfGeneralEntry 1 }

axsOspfRouterId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A integer uniquely identifying the router
		in the Autonomous System."
	::= { axsOspfGeneralEntry 2 }

axsOspfAdminStat OBJECT-TYPE
	SYNTAX  INTEGER   { 
				enabled(1),
				disabled(2)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The  administrative  status  of  OSPF  in  the
		router.  "
	::= { axsOspfGeneralEntry 3 }

axsOspfVersionNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The current version number of the OSPF  
		protocol is 2."
	::= { axsOspfGeneralEntry 4 }

axsOspfAreaBdrRtrStatus OBJECT-TYPE
	SYNTAX  INTEGER { 
				true(1),
				false(2)
			}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A flag to note whether this router is an  area
		 border router."
	::= { axsOspfGeneralEntry 5 }

axsOspfASBdrRtrStatus OBJECT-TYPE
	SYNTAX  INTEGER {
				true(1),
				false(2)
			}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A flag to note whether this router is  configured
		as an Autonomous System border router."
	::= { axsOspfGeneralEntry 6 }

axsOspfExternLsaCount OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of external (LS type 5)  link-state
		advertisements in the link-state database."
	::= { axsOspfGeneralEntry 7 }

axsOspfExternLsaCksumSum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32-bit unsigned sum of the LS checksums of
		the  external  link-state  advertisements  contained
		in the link-state  database."
	::= { axsOspfGeneralEntry 8 }

axsOspfTOSSupport OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The router's support for type-of-service routing.
		 This value of false(2). "
	::= { axsOspfGeneralEntry 9 }

axsOspfOriginateNewLsas OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of  new  link-state  advertisements
		that have been originated. "
	::= { axsOspfGeneralEntry 10 }

axsOspfRxNewLsas OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of  link-state  advertisements  received
		determined  to  be  new instantiations."
	::= { axsOspfGeneralEntry 11 }

axsOspfExtLsdbLimit OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The maximum number of non-default AS-external-LSAs
		entries that can be stored in the link-state database.
		If the value is -1,  then there is no limit.
		This value is -1"
	::= { axsOspfGeneralEntry 12 }

axsOspfMulticastExtensions OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A Bit Mask indicating whether  the  router  is
		forwarding  IP  multicast  (Class  D) datagrams
		based on the algorithms defined in  the  Multicast
		Extensions to OSPF."
	::= { axsOspfGeneralEntry 13 }

axsOspfAreaTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfAreaEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The router's support for demand routing."
	::= { axsOspf 2 }

axsOspfAreaEntry OBJECT-TYPE
	SYNTAX  AxsOspfAreaEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"This entry contain ospf area information."
    INDEX { axsOspfAreaDomainNumber, axsOspfAreaId }
	::= { axsOspfAreaTable 1 }

	AxsOspfAreaEntry ::=
		SEQUENCE {
		    axsOspfAreaDomainNumber	INTEGER,
		    axsOspfAreaId			IpAddress,
		    axsOspfAuthType			INTEGER,
		    axsOspfImportAsExtern	INTEGER,
		    axsOspfSpfRuns			Counter,
		    axsOspfAreaBdrRtrCount	Gauge,
		    axsOspfAsBdrRtrCount		Gauge,
		    axsOspfAreaLsaCount		Gauge,
		    axsOspfAreaLsaCksumSum	INTEGER,
		    axsOspfAreaSummary		INTEGER,
		    axsOspfAreaStatus		INTEGER
		}

axsOspfAreaDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"An uniquely identifying number of domain."
	::= { axsOspfAreaEntry 1 }

axsOspfAreaId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A 32-bit integer uniquely identifying an area."
	::= { axsOspfAreaEntry 2 }

axsOspfAuthType OBJECT-TYPE
	SYNTAX  INTEGER
			-- none(0),
			-- simplePassword (1),
			-- md5(2)
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The authentication type specified for an area."
	::= { axsOspfAreaEntry 3 }

axsOspfImportAsExtern OBJECT-TYPE
	SYNTAX  INTEGER { 
				importExternal (1),
				importNoExternal (2),
				importNssa (3)
			}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The area's support for importing  AS  external
		link- state advertisements."
	::= { axsOspfAreaEntry 4 }

axsOspfSpfRuns OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times that the intra-area  route
		table  has  been  calculated  using this area's
		link-state database."
	::= { axsOspfAreaEntry 5 }

axsOspfAreaBdrRtrCount OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of area border routers reachable
		within this area."
	::= { axsOspfAreaEntry 6 }

axsOspfAsBdrRtrCount OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of AS area border routers reachable
		within this area."
	::= { axsOspfAreaEntry 7 }

axsOspfAreaLsaCount OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of LSA(link-state  advertisements) 
		in this area. Excluding AS External LSA's"
	::= { axsOspfAreaEntry 8 }

axsOspfAreaLsaCksumSum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The sum of LSA's  LS  checksums  contained in this
		area's link-state database."
	::= { axsOspfAreaEntry 9 }

axsOspfAreaSummary OBJECT-TYPE
	SYNTAX  INTEGER  {
				    noAreaSummary (1),
				    sendAreaSummary (2)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"he variable axsOspfAreaSummary controls the import
		of summary LSAs into stub areas. Value is only 
		sendAreaSummary(2)."
	::= { axsOspfAreaEntry 10 }

axsOspfAreaStatus OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of  the  entry.
		Value is only valid(1)."
	::= { axsOspfAreaEntry 11 }

axsOspfStubAreaTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfStubAreaEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The set of metrics that will be advertised  by
		a default Area Border Router into a stub area."
	::= { axsOspf 3 }

axsOspfStubAreaEntry OBJECT-TYPE
	SYNTAX  AxsOspfStubAreaEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The metric for a given Type  of  Service  that
		will be advertised by a default Area Border Router 
		into a stub area."
    INDEX { axsOspfStubDomainNumber, axsOspfStubAreaId,
		    axsOspfStubTOS }
	::= { axsOspfStubAreaTable 1 }

	AxsOspfStubAreaEntry ::=
		SEQUENCE {
		    axsOspfStubDomainNumber	INTEGER,
		    axsOspfStubAreaId		IpAddress,
		    axsOspfStubTOS			INTEGER,
		    axsOspfStubMetric		INTEGER,
		    axsOspfStubStatus		INTEGER,
		    axsOspfStubMetricType	INTEGER
		}

axsOspfStubDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The domain identifier for the Stub  Area."
	::= { axsOspfStubAreaEntry 1 }

axsOspfStubAreaId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The identifier for the Stub  Area."
	::= { axsOspfStubAreaEntry 2 }

axsOspfStubTOS OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Type of Service associated with the metric.
		Value is only 0."
	::= { axsOspfStubAreaEntry 3 }

axsOspfStubMetric OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The metric value applied at the indicated type
		of service."
	::= { axsOspfStubAreaEntry 4 }

axsOspfStubStatus OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of the entry.
		This value is only valid(1)."
	::= { axsOspfStubAreaEntry 5 }

axsOspfStubMetricType OBJECT-TYPE
	SYNTAX  INTEGER  {
				ospfMetric(1),
				comparableCost(2),
				nonComparable(3)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"his variable displays the type of metric advertised
		as a default route."
	::= { axsOspfStubAreaEntry 6 }

axsOspfLsdbTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfLsdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The OSPF Process's Link State Database."
	::= { axsOspf 4 }

axsOspfLsdbEntry OBJECT-TYPE
	SYNTAX  AxsOspfLsdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		 "A single Link State Advertisement."
    INDEX { axsOspfLsdbDomainNumber, axsOspfLsdbAreaId,
		    axsOspfLsdbType, axsOspfLsdbLsid, axsOspfLsdbRouterId }
	::= { axsOspfLsdbTable 1 }

	AxsOspfLsdbEntry ::=
		SEQUENCE {
		    axsOspfLsdbDomainNumber	INTEGER,
		    axsOspfLsdbAreaId		IpAddress,
		    axsOspfLsdbType		INTEGER,
		    axsOspfLsdbLsid		IpAddress,
		    axsOspfLsdbRouterId		IpAddress,
		    axsOspfLsdbSequence		INTEGER,
		    axsOspfLsdbAge		INTEGER,
		    axsOspfLsdbChecksum		INTEGER,
		    axsOspfLsdbAdvertisement	OCTET STRING
		}

axsOspfLsdbDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The identifier of the domain from  which
		the LSA was received."
	::= { axsOspfLsdbEntry 1 }

axsOspfLsdbAreaId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32 bit identifier of the Area  from  which
		the LSA was received."
	::= { axsOspfLsdbEntry 2 }

axsOspfLsdbType OBJECT-TYPE
	SYNTAX  INTEGER    {
		       routerLink (1),
		       networkLink (2),
		       summaryLink (3),
		       asSummaryLink (4),
		       asExternalLink (5), -- but see axsOspfExtLsdbTable
		       multicastLink (6),
		       nssaExternalLink (7)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The type  of  the  link  state  advertisement."
	::= { axsOspfLsdbEntry 3 }

axsOspfLsdbLsid OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Link State ID . It identifies the piece of the routing
		domain that is being described by the advertisement."
	::= { axsOspfLsdbEntry 4 }

axsOspfLsdbRouterId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number that uniquely identifies the originating 
		router in the Autonomous System."
	::= { axsOspfLsdbEntry 5 }

axsOspfLsdbSequence OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The sequence number field is a  signed  32-bit
		integer."
	::= { axsOspfLsdbEntry 6 }

axsOspfLsdbAge OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This the age of the link state adver-
		tisement in seconds."
	::= { axsOspfLsdbEntry 7 }

axsOspfLsdbChecksum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This field is the  checksum  of  the  complete
		contents  of  the  advertisement, excepting the
		age field."
	::= { axsOspfLsdbEntry 8 }

axsOspfLsdbAdvertisement OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The entire Link State Advertisement, including
		its header."
	::= { axsOspfLsdbEntry 9 }

axsOspfAreaRangeTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfAreaRangeEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A range if IP addresses  specified  by  an  IP
		address/IP  network  mask  pair."
	::= { axsOspf 5 }

axsOspfAreaRangeEntry OBJECT-TYPE
	SYNTAX  AxsOspfAreaRangeEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A range if IP addresses specified by an IP
		address/IP network mask pair."
    INDEX { axsOspfAreaRangeDomainNumber, axsOspfAreaRangeAreaId,
		    axsOspfAreaRangeNet }
	::= { axsOspfAreaRangeTable 1 }

	AxsOspfAreaRangeEntry ::=
		SEQUENCE {
		    axsOspfAreaRangeDomainNumber	INTEGER,
		    axsOspfAreaRangeAreaId	IpAddress,
		    axsOspfAreaRangeNet		IpAddress,
		    axsOspfAreaRangeMask		IpAddress,
		    axsOspfAreaRangeStatus	INTEGER,
		    axsOspfAreaRangeEffect	INTEGER
		}

axsOspfAreaRangeDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Domain number of the Area."
	::= { axsOspfAreaRangeEntry 1 }

axsOspfAreaRangeAreaId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Area the Address  Range  is  to  be  found
		within."
	::= { axsOspfAreaRangeEntry 2 }

axsOspfAreaRangeNet OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP Address of the Net or Subnet  indicated
		by the range."
	::= { axsOspfAreaRangeEntry 3 }

axsOspfAreaRangeMask OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Subnet Mask that pertains to  the  Net  or
		Subnet."
	::= { axsOspfAreaRangeEntry 4 }

axsOspfAreaRangeStatus OBJECT-TYPE
	SYNTAX  INTEGER    {
		       valid(1),
		       invalid(2)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of  the  entry.
		This value is only valid(1)."
	::= { axsOspfAreaRangeEntry 5 }

axsOspfAreaRangeEffect OBJECT-TYPE
	SYNTAX  INTEGER  {
				advertiseMatching (1),
				doNotAdvertiseMatching (2)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Subnets subsumed by ranges either trigger  the
		advertisement  of the indicated summary (adver-
		tiseMatching), or result in  the  subnet's  not
		being advertised at all outside the area."
	::= { axsOspfAreaRangeEntry 6 }

axsOspfHostTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfHostEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The list of Hosts, and their metrics, that the
		router will advertise as host routes."
	::= { axsOspf 6 }

axsOspfHostEntry OBJECT-TYPE
	SYNTAX  AxsOspfHostEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A metric to be advertised, for a given type of service,
		when a given host is reachable."
    INDEX { axsOspfHostDomainNumber, axsOspfHostIpAddress,
		    axsOspfHostTOS }
	::= { axsOspfHostTable 1 }

	AxsOspfHostEntry ::=
		SEQUENCE {
		    axsOspfHostDomainNumber	INTEGER,
		    axsOspfHostIpAddress		IpAddress,
		    axsOspfHostTOS			INTEGER,
		    axsOspfHostMetric		INTEGER,
		    axsOspfHostStatus		INTEGER
		}

axsOspfHostDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"OSPF domain number of the Host."
	::= { axsOspfHostEntry 1 }

axsOspfHostIpAddress OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP Address of the Host."
	::= { axsOspfHostEntry 2 }

axsOspfHostTOS OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Type of Service of the route being configured.
		This value is only 0."
	::= { axsOspfHostEntry 3 }

axsOspfHostMetric OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Metric to be advertised."
	::= { axsOspfHostEntry 4 }

axsOspfHostStatus OBJECT-TYPE
	SYNTAX  INTEGER   { 
				valid(1),
				invalid(2)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of  the  entry.
		Setting it to 'invalid' has the effect of rendering
		it inoperative. The internal effect (row removal) is
		implementation dependent."
	::= { axsOspfHostEntry 5 }

axsOspfIfTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfIfEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The OSPF Interface Table describes the interfaces
		from the viewpoint of OSPF."
	::= { axsOspf 7 }

axsOspfIfEntry OBJECT-TYPE
	SYNTAX  AxsOspfIfEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The OSPF Interface Entry describes one  interface
		from the viewpoint of OSPF."
    INDEX { axsOspfIfDomainNumber, axsOspfIfIpAddress, axsOspfAddressLessIf }
	::= { axsOspfIfTable 1 }

	AxsOspfIfEntry ::=
		SEQUENCE {
		    axsOspfIfDomainNumber			INTEGER,
		    axsOspfIfIpAddress				IpAddress,
		    axsOspfAddressLessIf				INTEGER,
		    axsOspfIfAreaId					IpAddress,
		    axsOspfIfType					INTEGER,
		    axsOspfIfAdminStat				INTEGER,
		    axsOspfIfRtrPriority				INTEGER,
		    axsOspfIfTransitDelay			INTEGER,
		    axsOspfIfRetransInterval			INTEGER,
		    axsOspfIfHelloInterval			INTEGER,
		    axsOspfIfRtrDeadInterval			INTEGER,
		    axsOspfIfPollInterval			INTEGER,
		    axsOspfIfState					INTEGER,
		    axsOspfIfDesignatedRouter		IpAddress,
		    axsOspfIfEvents					Counter,
		    axsOspfIfAuthKey					OCTET STRING,
		    axsOspfIfStatus					INTEGER,
		    axsOspfIfMulticastForwarding		INTEGER,
		    axsOspfIfBackupDesignatedRouter	IpAddress
		}

axsOspfIfDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The domain number of this OSPF interface."
	::= { axsOspfIfEntry 1 }

axsOspfIfIpAddress OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP address of this OSPF interface."
	::= { axsOspfIfEntry 2 }

axsOspfAddressLessIf OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"For the purpose of easing  the  instancing  of
		addressed   and  addressless  interfaces;  This
		variable takes the value 0 on  interfaces  with
		IP  Addresses,  and  the corresponding value of
		ifIndex for interfaces having no IP Address."
	::= { axsOspfIfEntry 3 }

axsOspfIfAreaId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A integer uniquely identifying the area to which 
		the interface connects."
	::= { axsOspfIfEntry 4 }

axsOspfIfType OBJECT-TYPE
	SYNTAX  INTEGER  {
				 broadcast (1),
				 nbma (2),
				 pointToPoint (3),
				 pointToMultipoint (5)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The OSPF interface type."
	::= { axsOspfIfEntry 5 }

axsOspfIfAdminStat OBJECT-TYPE
	SYNTAX  INTEGER { 
				enabled(1),
				disabled(2)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The OSPF  interface's  administrative  status."
	::= { axsOspfIfEntry 6 }

axsOspfIfRtrPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The priority of this interface."
	::= { axsOspfIfEntry 7 }

axsOspfIfTransitDelay OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The estimated number of seconds  it  takes  to
		transmit  a  link state update packet over this
		interface."
	::= { axsOspfIfEntry 8 }

axsOspfIfRetransInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of seconds between link-state ad-
		vertisement retransmissions, for adjacencies
		belonging to this  interface."
	::= { axsOspfIfEntry 9 }

axsOspfIfHelloInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The length of time, in  seconds,  between the
		Hello  packets that the router sends on the interface."
	::= { axsOspfIfEntry 10 }

axsOspfIfRtrDeadInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of seconds that  a  router's  Hello
		packets  have  not been seen before it's neighbors 
		declare the router down."
	::= { axsOspfIfEntry 11 }

axsOspfIfPollInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The larger time interval, in seconds,  between
		the  Hello  packets  sent  to  an inactive non-
		broadcast multi- access neighbor."
	::= { axsOspfIfEntry 12 }

axsOspfIfState OBJECT-TYPE
	SYNTAX  INTEGER   {
				down (1),
				loopback (2),
				waiting (3),
				pointToPoint (4),
				designatedRouter (5),
				backupDesignatedRouter (6),
				otherDesignatedRouter (7)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The OSPF Interface State."
	::= { axsOspfIfEntry 13 }

axsOspfIfDesignatedRouter OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP Address of the Designated Router."
	::= { axsOspfIfEntry 14 }

axsOspfIfEvents OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times this  OSPF  interface  has
		changed its state, or an error has occurred."
	::= { axsOspfIfEntry 16 }

axsOspfIfAuthKey OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Authentication Key."
	::= { axsOspfIfEntry 17 }

axsOspfIfStatus OBJECT-TYPE
	SYNTAX  INTEGER   { 
				valid(1),
				invalid(2)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of  the  entry.
		this value is only valid(1)."
	::= { axsOspfIfEntry 18 }

axsOspfIfMulticastForwarding OBJECT-TYPE
	SYNTAX  INTEGER  {
				blocked (1),		-- no multicast forwarding
				multicast (2),     -- using multicast address
				unicast (3)		-- to each OSPF neighbor
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The way multicasts should  forwarded  on  this
		interface;  not  forwarded,  forwarded  as data
		link multicasts, or forwarded as data link unicasts."
	::= { axsOspfIfEntry 19 }

axsOspfIfBackupDesignatedRouter OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP Address of the Backup Designated Router."
	::= { axsOspfIfEntry 15 }

axsOspfIfMetricTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfIfMetricEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The TOS metrics for a non-virtual interface identified
		by the interface index."
	::= { axsOspf 8 }

axsOspfIfMetricEntry OBJECT-TYPE
	SYNTAX  AxsOspfIfMetricEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A particular TOS metric for a non-virtual interface
		identified by the interface index."
    INDEX { axsOspfIfMetricDomainNumber, axsOspfIfMetricIpAddress,
		    axsOspfIfMetricAddressLessIf, axsOspfIfMetricTOS }
	::= { axsOspfIfMetricTable 1 }

	AxsOspfIfMetricEntry ::=
		SEQUENCE {
		    axsOspfIfMetricDomainNumber	INTEGER,
		    axsOspfIfMetricIpAddress		IpAddress,
		    axsOspfIfMetricAddressLessIf	INTEGER,
		    axsOspfIfMetricTOS			INTEGER,
		    axsOspfIfMetricValue			INTEGER,
		    axsOspfIfMetricStatus		INTEGER
		}

axsOspfIfMetricDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The domain number of this OSPF interface."
	::= { axsOspfIfMetricEntry 1 }

axsOspfIfMetricIpAddress OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP address of this OSPF interface."
	::= { axsOspfIfMetricEntry 2 }

axsOspfIfMetricAddressLessIf OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"For the purpose of easing  the  instancing  of
		addressed   and  addressless  interfaces;  This
		variable takes the value 0 on  interfaces  with
		IP  Addresses, and the value of ifIndex for in-
		terfaces having no IP Address."
	::= { axsOspfIfMetricEntry 3 }

axsOspfIfMetricTOS OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The type of service metric  being  referenced.
		this value is only 0."
	::= { axsOspfIfMetricEntry 4 }

axsOspfIfMetricValue OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The metric of using this type  of  service  on
		this interface."
	::= { axsOspfIfMetricEntry 5 }

axsOspfIfMetricStatus OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of the entry.
		This entry status is only valid(1)."
	::= { axsOspfIfMetricEntry 6 }

axsOspfVirtIfTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfVirtIfEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information about this router's virtual interfaces."
	::= { axsOspf 9 }

axsOspfVirtIfEntry OBJECT-TYPE
	SYNTAX  AxsOspfVirtIfEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information about a single Virtual Interface."
    INDEX { axsOspfVirtIfDomainNumber, axsOspfVirtIfAreaId,
		    axsOspfVirtIfNeighbor }
	::= { axsOspfVirtIfTable 1 }

	AxsOspfVirtIfEntry ::=
		SEQUENCE {
		    axsOspfVirtIfDomainNumber	INTEGER,
		    axsOspfVirtIfAreaId			IpAddress,
		    axsOspfVirtIfNeighbor		IpAddress,
		    axsOspfVirtIfTransitDelay	INTEGER,
		    axsOspfVirtIfRetransInterval	INTEGER,
		    axsOspfVirtIfHelloInterval	INTEGER,
		    axsOspfVirtIfRtrDeadInterval	INTEGER,
		    axsOspfVirtIfState			INTEGER,
		    axsOspfVirtIfEvents			Counter,
		    axsOspfVirtIfAuthKey			OCTET STRING,
		    axsOspfVirtIfStatus			INTEGER
		}

axsOspfVirtIfDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The domain number for this  Virtual Interface"
	::= { axsOspfVirtIfEntry 1 }

axsOspfVirtIfAreaId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Transit Area that the Virtual Link traverses."
	::= { axsOspfVirtIfEntry 2 }

axsOspfVirtIfNeighbor OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Router ID of the Virtual Neighbor."
	::= { axsOspfVirtIfEntry 3 }

axsOspfVirtIfTransitDelay OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The estimated number of seconds  it  takes  to
		transmit  a link- state update packet over this
		interface."
	::= { axsOspfVirtIfEntry 4 }

axsOspfVirtIfRetransInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of seconds between link-state advertisement
		retransmissions, for adjacencies belonging to this
		interface."
	::= { axsOspfVirtIfEntry 5 }

axsOspfVirtIfHelloInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The length of time, in  seconds, between the
		Hello  packets that the router sends on the in-
		terface. "
	::= { axsOspfVirtIfEntry 6 }

axsOspfVirtIfRtrDeadInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of seconds that  a  router's  Hello
		packets  have  not been seen before it's neighbors
		declare the router down."
	::= { axsOspfVirtIfEntry 7 }

axsOspfVirtIfState OBJECT-TYPE
	SYNTAX  INTEGER    {
				down (1),		    -- these use the same encoding
				pointToPoint (4)     -- as the axsOspfIfTable
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"OSPF virtual interface states."
	::= { axsOspfVirtIfEntry 8 }

axsOspfVirtIfEvents OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of state changes or error events on
		this Virtual Link"
	::= { axsOspfVirtIfEntry 9 }

axsOspfVirtIfAuthKey OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Authentication key of this interface."
	::= { axsOspfVirtIfEntry 10 }

axsOspfVirtIfStatus OBJECT-TYPE
	SYNTAX  INTEGER    { 
				valid(1),
				invalid(2)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of  the  entry.
		This entry is only valid(1)."
	::= { axsOspfVirtIfEntry 11 }

axsOspfNbrTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfNbrEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table of non-virtual neighbor information."
	::= { axsOspf 10 }

axsOspfNbrEntry OBJECT-TYPE
	SYNTAX  AxsOspfNbrEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The information regarding a single neighbor."
    INDEX { axsOspfNbrDomainNumber, axsOspfNbrIpAddr, axsOspfNbrAddressLessIndex }
	::= { axsOspfNbrTable 1 }

	AxsOspfNbrEntry ::=
		SEQUENCE {
		    axsOspfNbrDomainNumber		INTEGER,
		    axsOspfNbrIpAddr				IpAddress,
		    axsOspfNbrAddressLessIndex	INTEGER,
		    axsOspfNbrRtrId				IpAddress,
		    axsOspfNbrOptions			INTEGER,
		    axsOspfNbrPriority			INTEGER,
		    axsOspfNbrState				INTEGER,
		    axsOspfNbrEvents				Counter,
		    axsOspfNbrLsRetransQLen		Gauge,
		    axsOspfNbmaNbrStatus			INTEGER,
		    axsOspfNbmaNbrPermanence		INTEGER
		}

axsOspfNbrDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"OSPF domain number of this neighbor."
	::= { axsOspfNbrEntry 1 }

axsOspfNbrIpAddr OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP address this neighbor is using  in  its
		IP  Source  Address."
	::= { axsOspfNbrEntry 2 }

axsOspfNbrAddressLessIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"On an interface having an  IP  Address,  zero.
		On  addressless  interfaces,  the corresponding
		value of ifIndex in the Internet Standard  MIB."
	::= { axsOspfNbrEntry 3 }

axsOspfNbrRtrId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The integer uniquely identifying the neighboring
		router in the Autonomous System."
	::= { axsOspfNbrEntry 4 }

axsOspfNbrOptions OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A Bit Mask corresponding to the neighbor's op-
		 tions field.

		 Bit 0, if set, indicates that the  system  will
		 operate  on  Type of Service metrics other than
		 TOS 0.  If zero, the neighbor will  ignore  all
		 metrics except the TOS 0 metric.

		 Bit 1, if set, indicates  that  the  associated
		 area  accepts and operates on external informa-
		 tion; if zero, it is a stub area.

		 Bit 2, if set, indicates that the system is ca-
		 pable  of routing IP Multicast datagrams; i.e.,
		 that it implements the Multicast Extensions  to
		 OSPF.

		 Bit 3, if set, indicates  that  the  associated
		 area  is  an  NSSA.  These areas are capable of
		 carrying type 7 external advertisements,  which
		 are  translated into type 5 external advertise-
		 ments at NSSA borders."
	::= { axsOspfNbrEntry 5 }

axsOspfNbrPriority OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The priority of this neighbor."
	::= { axsOspfNbrEntry 6 }

axsOspfNbrState OBJECT-TYPE
	SYNTAX  INTEGER   {
				down (1),
				attempt (2),
				init (3),
				twoWay (4),
				exchangeStart (5),
				exchange (6),
				loading (7),
				full (8)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The State of the relationship with this Neighbor."
	::= { axsOspfNbrEntry 7 }

axsOspfNbrEvents OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times this neighbor relationship
		has changed state, or an error has occurred."
	::= { axsOspfNbrEntry 8 }

axsOspfNbrLsRetransQLen OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The current length of the retransmission queue."
	::= { axsOspfNbrEntry 9 }

axsOspfNbmaNbrStatus OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of the entry.
		This entry value is only valid(1). And enable to response
		this entry when axsOspfIfType is nbma."
	::= { axsOspfNbrEntry 10 }

axsOspfNbmaNbrPermanence OBJECT-TYPE
	SYNTAX  INTEGER  {
				dynamic (1),		-- learned through protocol
				 permanent (2)       -- configured address
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of the entry."
	::= { axsOspfNbrEntry 11 }

axsOspfVirtNbrTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfVirtNbrEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table of virtual neighbor information."
	::= { axsOspf 11 }

axsOspfVirtNbrEntry OBJECT-TYPE
	SYNTAX  AxsOspfVirtNbrEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Virtual neighbor information."
    INDEX { axsOspfVirtNbrDomainNumber, axsOspfVirtNbrArea,
		    axsOspfVirtNbrRtrId }
	::= { axsOspfVirtNbrTable 1 }

	AxsOspfVirtNbrEntry ::=
		SEQUENCE {
		    axsOspfVirtNbrDomainNumber		INTEGER,
		    axsOspfVirtNbrArea				IpAddress,
		    axsOspfVirtNbrRtrId				IpAddress,
		    axsOspfVirtNbrIpAddr				IpAddress,
		    axsOspfVirtNbrOptions			INTEGER,
		    axsOspfVirtNbrState				INTEGER,
		    axsOspfVirtNbrEvents				Counter,
		    axsOspfVirtNbrLsRetransQLen		Gauge
		}

axsOspfVirtNbrDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The domain number."
	::= { axsOspfVirtNbrEntry 1 }

axsOspfVirtNbrArea OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Transit Area Identifier."
	::= { axsOspfVirtNbrEntry 2 }

axsOspfVirtNbrRtrId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A integer  uniquely  identifying  the neighboring
		 router in the Autonomous System."
	::= { axsOspfVirtNbrEntry 3 }

axsOspfVirtNbrIpAddr OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP address this Virtual Neighbor is using."
	::= { axsOspfVirtNbrEntry 4 }

axsOspfVirtNbrOptions OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A Bit Mask corresponding to the neighbor's options
		 field.

		 Bit 1, if set, indicates that the  system  will operate
		 on Type of Service metrics other than TOS 0. If zero,
		 the neighbor will  ignore  all metrics except the TOS
		 0 metric.

		 Bit 2, if set, indicates  that  the  system  is Network
		 Multicast  capable; ie, that it implements OSPF Multicast
		 Routing."
	::= { axsOspfVirtNbrEntry 5 }

axsOspfVirtNbrState OBJECT-TYPE
	SYNTAX  INTEGER   {
				down (1),
				attempt (2),
				init (3),
				twoWay (4),
				exchangeStart (5),
				exchange (6),
				loading (7),
				full (8)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The state of the  Virtual  Neighbor  Relationship."
	::= { axsOspfVirtNbrEntry 6 }

axsOspfVirtNbrEvents OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times this virtual link has changed
		its state, or an error has occurred."
	::= { axsOspfVirtNbrEntry 7 }

axsOspfVirtNbrLsRetransQLen OBJECT-TYPE
	SYNTAX  Gauge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The current length of the retransmission queue."
	::= { axsOspfVirtNbrEntry 8 }

axsOspfExtLsdbTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfExtLsdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The OSPF Process's Links State Database."
	::= { axsOspf 12 }

axsOspfExtLsdbEntry OBJECT-TYPE
	SYNTAX  AxsOspfExtLsdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A single Link State Advertisement."
    INDEX { axsOspfExtLsdbDomainNumber, axsOspfExtLsdbType,
		    axsOspfExtLsdbLsid, axsOspfExtLsdbRouterId }
	::= { axsOspfExtLsdbTable 1 }

	AxsOspfExtLsdbEntry ::=
		SEQUENCE {
		    axsOspfExtLsdbDomainNumber	INTEGER,
		    axsOspfExtLsdbType			INTEGER,
		    axsOspfExtLsdbLsid			IpAddress,
		    axsOspfExtLsdbRouterId		IpAddress,
		    axsOspfExtLsdbSequence		INTEGER,
		    axsOspfExtLsdbAge			INTEGER,
		    axsOspfExtLsdbChecksum		INTEGER,
		    axsOspfExtLsdbAdvertisement	OCTET STRING
		}

axsOspfExtLsdbDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"OSPF domain number."
	::= { axsOspfExtLsdbEntry 1 }

axsOspfExtLsdbType OBJECT-TYPE
	SYNTAX  INTEGER {
				asExternalLink (5)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The type  of  the  link  state  advertisement."
	::= { axsOspfExtLsdbEntry 2 }

axsOspfExtLsdbLsid OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Link State ID is an LS Type Specific field
		 containing either a Router ID or an IP Address;
		 it identifies the piece of the  routing  domain
		 that is being described by the advertisement."
	::= { axsOspfExtLsdbEntry 3 }

axsOspfExtLsdbRouterId OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32 bit number that uniquely identifies the
		originating router in the Autonomous System."
	::= { axsOspfExtLsdbEntry 4 }

axsOspfExtLsdbSequence OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The sequence number field is a  signed  32-bit integer."
	::= { axsOspfExtLsdbEntry 5 }

axsOspfExtLsdbAge OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The age of the link state advertisement in seconds."
	::= { axsOspfExtLsdbEntry 6 }

axsOspfExtLsdbChecksum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This field is the  checksum  of  the  complete
		 contents  of  the  advertisement, excepting the
		 age field.  The age field is excepted  so  that
		 an   advertisement's  age  can  be  incremented
		 without updating the  checksum."
	::= { axsOspfExtLsdbEntry 7 }

axsOspfExtLsdbAdvertisement OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The entire Link State Advertisement, including its header."
	::= { axsOspfExtLsdbEntry 8 }

axsOspfAreaAggregateTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfAreaAggregateEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A range of IP addresses  specified  by  an  IP
		address/IP  network  mask  pair."
	::= { axsOspf 14 }

axsOspfAreaAggregateEntry OBJECT-TYPE
	SYNTAX  AxsOspfAreaAggregateEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A range of IP addresses  specified  by  an  IP
		address/IP  network  mask  pair."
    INDEX { axsOspfAreaAggregateDomainNumber, axsOspfAreaAggregateAreaID,
		    axsOspfAreaAggregateLsdbType, axsOspfAreaAggregateNet,
		    axsOspfAreaAggregateMask }
	::= { axsOspfAreaAggregateTable 1 }

	AxsOspfAreaAggregateEntry ::=
		SEQUENCE {
		    axsOspfAreaAggregateDomainNumber	INTEGER,
		    axsOspfAreaAggregateAreaID		IpAddress,
		    axsOspfAreaAggregateLsdbType		INTEGER,
		    axsOspfAreaAggregateNet			IpAddress,
		    axsOspfAreaAggregateMask			IpAddress,
		    axsOspfAreaAggregateStatus		INTEGER,
		    axsOspfAreaAggregateEffect		INTEGER
		}

axsOspfAreaAggregateDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"OSPF domain number."
	::= { axsOspfAreaAggregateEntry 1 }

axsOspfAreaAggregateAreaID OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Area the Address Aggregate is to be found within."
	::= { axsOspfAreaAggregateEntry 2 }

axsOspfAreaAggregateLsdbType OBJECT-TYPE
	SYNTAX  INTEGER  {
				summaryLink (3),
				nssaExternalLink (7)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The type of the Address Aggregate. This field
		 specifies  the  Lsdb type that this Address 
		 Aggregate applies to."
	::= { axsOspfAreaAggregateEntry 3 }

axsOspfAreaAggregateNet OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP Address of the Net or Subnet indicated by the range."
	::= { axsOspfAreaAggregateEntry 4 }

axsOspfAreaAggregateMask OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Subnet Mask that pertains to the Net or Subnet."
	::= { axsOspfAreaAggregateEntry 5 }

axsOspfAreaAggregateStatus OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of  the  entry.
		This entry value is only valid(1)."
	::= { axsOspfAreaAggregateEntry 6 }

axsOspfAreaAggregateEffect OBJECT-TYPE
	SYNTAX  INTEGER   {
				advertiseMatching (1),
				doNotAdvertiseMatching (2)
		    }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Subnets subsumed by ranges either trigger  the
		 advertisement  of  the indicated aggregate (ad-
		 vertiseMatching), or result in the subnet's not
		 being advertised at all outside the area."
	::= { axsOspfAreaAggregateEntry 7 }

axsOspfTrapControlTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfTrapControlEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table about trap information."
	::= { axsOspfTrap 1 }

axsOspfTrapControlEntry OBJECT-TYPE
	SYNTAX  AxsOspfTrapControlEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The Entry about trap information."
	INDEX { axsOspfTrapDomainNumber }
	::= { axsOspfTrapControlTable 1 }

	AxsOspfTrapControlEntry ::=
	SEQUENCE {
		axsOspfTrapDomainNumber
			INTEGER,
		axsOspfSetTrap	
			OCTET STRING,
		axsOspfConfigErrorType	
			INTEGER,
		axsOspfPacketType	
			INTEGER,
		axsOspfPacketSrc	
			IpAddress
                }

axsOspfTrapDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"axsOspfTrap domain number."
	::= { axsOspfTrapControlEntry 1 }

axsOspfSetTrap OBJECT-TYPE
       SYNTAX   OCTET STRING
       ACCESS   read-write
       STATUS   mandatory
       DESCRIPTION
           "A four-octet string serving as a bit  map  for
           the trap events defined by the OSPF traps. This
           object is used to enable and  disable  specific
           OSPF   traps   where  a  1  in  the  bit  field
           represents enabled.  The right-most bit  (least
           significant) represents trap 0."
       ::= { axsOspfTrapControlEntry 2 }

axsOspfConfigErrorType OBJECT-TYPE
       SYNTAX   INTEGER   {
                   noError(0),
                   badVersion (1),
                   areaMismatch (2),
                   unknownNbmaNbr (3), -- Router is Dr eligible
                   unknownVirtualNbr (4),
                   authTypeMismatch(5),
                   authFailure (6),
                   netMaskMismatch (7),
                   helloIntervalMismatch (8),
                   deadIntervalMismatch (9),
                   optionMismatch (10)--,
                   --duplicateRouterId (12),
                   -- noError (13)
                }
       ACCESS   read-only
       STATUS   mandatory
       DESCRIPTION
           "Potential types  of  configuration  conflicts.
           Used  by the ospfConfigError and ospfConfigVir-
           tError traps."
       ::= { axsOspfTrapControlEntry 3 }

axsOspfPacketType OBJECT-TYPE
        SYNTAX   INTEGER   {
                    noError(0),
                    hello (1),
                    dbDescript (2),
                    lsReq (3),
                    lsUpdate (4),
                    lsAck (5)--, 
                    --nullPacket (6)
                 }
        ACCESS   read-only
        STATUS   mandatory
        DESCRIPTION
           "OSPF packet types."
   ::= { axsOspfTrapControlEntry 4 }

axsOspfPacketSrc OBJECT-TYPE
        SYNTAX   IpAddress
        ACCESS   read-only
        STATUS   mandatory
        DESCRIPTION
           "The IP address of an inbound packet that  can-
           not be identified by a neighbor instance."
       ::= { axsOspfTrapControlEntry 5 }

-- axsOspfv3

axsOspfv3GeneralTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfv3GeneralEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table which ospfv3 information is stored in."
	::= { axsOspfv3 1 }

axsOspfv3GeneralEntry OBJECT-TYPE
	SYNTAX  AxsOspfv3GeneralEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The list of the ospfv3 information."
	INDEX { axsOspfv3GeneralDomainNumber }
	::= { axsOspfv3GeneralTable 1 }

	AxsOspfv3GeneralEntry ::=
	SEQUENCE {
		axsOspfv3GeneralDomainNumber
			INTEGER,
		axsOspfv3RouterId
			RouterID,
		axsOspfv3AdminStat
			Status,
		axsOspfv3VersionNumber
			INTEGER,
		axsOspfv3AreaBdrRtrStatus
			TruthValue,
		axsOspfv3ASBdrRtrStatus
			TruthValue,
		axsOspfv3AsScopeLsaCount
			Gauge32,
		axsOspfv3AsScopeLsaCksumSum
			Integer32,
		axsOspfv3OriginateNewLsas
			Counter32,
		axsOspfv3RxNewLsas
			Counter32,
		axsOspfv3ExtAreaLsdbLimit
			Integer32,
		axsOspfv3MulticastExtensions
			Integer32,
		axsOspfv3DemandExtensions
			TruthValue,
		axsOspfv3TrafficEngineeringSupport
			TruthValue
		}

axsOspfv3GeneralDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ospfv3 domain number."
	::= { axsOspfv3GeneralEntry 1 }

axsOspfv3RouterId OBJECT-TYPE
	SYNTAX  RouterID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A  32-bit  integer  uniquely  identifying  the
		router in the Autonomous System.
		By convention, to  ensure  uniqueness, this
		should  default  to  the  value  of  one of the
		router's IPv4 interface addresses if IPv4 is
		configured."
	::= { axsOspfv3GeneralEntry 2 }

axsOspfv3AdminStat OBJECT-TYPE
	SYNTAX  Status
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The  administrative  status  of  axsOspfv3  in  the
		router.  The  value 'enabled' denotes that the
		axsOspfv3 Process is active on at least  one  inter-
		face;  'disabled'  disables  it  on  all inter-
		faces."
	::= { axsOspfv3GeneralEntry 3 }

axsOspfv3VersionNumber OBJECT-TYPE
	SYNTAX  INTEGER { version3 (3) }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The version number of OSPF for IPv6 is 3."
	::= { axsOspfv3GeneralEntry 4 }

axsOspfv3AreaBdrRtrStatus OBJECT-TYPE
	SYNTAX  TruthValue
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A flag to note whether this router is an  area
		border router."
	REFERENCE
		"OSPF Version 2, Section 3 Splitting the AS into
		Areas"
	::= { axsOspfv3GeneralEntry 5 }

axsOspfv3ASBdrRtrStatus OBJECT-TYPE
	SYNTAX  TruthValue
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A flag to note whether this router is  config-
		ured as an Autonomous System border router."
	REFERENCE
		"OSPF Version 2, Section 3.3  Classification  of
		routers"
	::= { axsOspfv3GeneralEntry 6 }

axsOspfv3AsScopeLsaCount OBJECT-TYPE
	SYNTAX  Gauge32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of AS-Scope (e.g. AS-External) link-state
		advertisements in the link-state database."
	::= { axsOspfv3GeneralEntry 7 }

axsOspfv3AsScopeLsaCksumSum OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32-bit unsigned sum of the LS checksums of
		the  AS-scoped link-state advertisements  con-
		tained in the link-state database. This sum
		can  be  used  to determine if there has been a
		change in a router's link state  database,  and
		to  compare  the  link-state  database  of  two
		routers."
	::= { axsOspfv3GeneralEntry 8 }

axsOspfv3OriginateNewLsas OBJECT-TYPE
	SYNTAX  Counter32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of  new  link-state  advertisements
		that  have been originated.  This number is in-
		cremented each time the router originates a new
		LSA."
	::= { axsOspfv3GeneralEntry 9 }

axsOspfv3RxNewLsas OBJECT-TYPE
	SYNTAX  Counter32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of  link-state  advertisements  re-
		ceived  determined  to  be  new instantiations.
		This number does not include  newer  instantia-
		tions  of self-originated link-state advertise-
		ments."
	::= { axsOspfv3GeneralEntry 10 }

axsOspfv3ExtAreaLsdbLimit OBJECT-TYPE
	SYNTAX  Integer32 (-1..'7FFFFFFF'h)
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The  maximum   number   of   non-default   AS-
		external-LSAs entries that can be stored in the
		link-state database.  If the value is -1,  then
		there is no limit.
		When the number of non-default AS-external-LSAs
		in  a  router's  link-state  database  reaches
		axsOspfv3ExtAreaLsdbLimit, the router  enters  Overflow-
		State.  The   router  never  holds  more  than
		axsOspfv3ExtAreaLsdbLimit  non-default  AS-external-LSAs
		in  its  database. OspfExtAreaLsdbLimit MUST be set
		identically in all routers attached to the axsOspfv3
		backbone  and/or  any regular axsOspfv3 area. (i.e.,
		axsOspfv3 stub areas and NSSAs are excluded)."
	DEFVAL { -1 }
	::= { axsOspfv3GeneralEntry 11 }

axsOspfv3MulticastExtensions OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A Bit Mask indicating whether  the  router  is
		forwarding  IPv6  multicast datagrams
		based on the algorithms defined in  the  Multi-
		cast Extensions to OSPF.
		Bit 0, if set, indicates that  the  router  can
		forward  IPv6 multicast datagrams in the router's
		directly attached areas (called intra-area mul-
		ticast routing).
		Bit 1, if set, indicates that  the  router  can
		forward  IPv6  multicast  datagrams  between axsOspfv3
		areas (called inter-area multicast routing).
		Bit 2, if set, indicates that  the  router  can
		forward  IPv6  multicast  datagrams between Auto-
		nomous Systems (called inter-AS multicast rout-
		ing).
		Only certain combinations of bit  settings are
		allowed,  namely: 0 (no multicast forwarding is
		enabled), 1 (intra-area multicasting  only),  3
		(intra-area  and  inter-area  multicasting),  5
		(intra-area and inter-AS  multicasting)  and  7
		(multicasting  everywhere). By default, no mul-
		ticast forwarding is enabled."
	DEFVAL { 0 }
	::= { axsOspfv3GeneralEntry 12 }

axsOspfv3DemandExtensions OBJECT-TYPE
	SYNTAX  TruthValue
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The router's support for demand routing."
	REFERENCE
		"OSPF Version 2, Appendix on Demand Routing"
	::= { axsOspfv3GeneralEntry 14 }

axsOspfv3TrafficEngineeringSupport OBJECT-TYPE
	SYNTAX  TruthValue
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The router's support for traffic engineering
		extensions."
	::= { axsOspfv3GeneralEntry 15 }

--  The axsOspfv3 Area Data Structure contains information
--  regarding the various areas. The interfaces and
--  virtual links are configured as part of these areas.
--  Area 0.0.0.0, by definition, is the Backbone Area

axsOspfv3AreaTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfv3AreaEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information describing the configured  parame-
		ters  and cumulative statistics of the router's
		attached areas."
	REFERENCE
		"OSPF Version 2, Section 6  The Area Data Struc-
		ture"
	::= { axsOspfv3 2 }

axsOspfv3AreaEntry OBJECT-TYPE
	SYNTAX  AxsOspfv3AreaEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information describing the configured  parame-
		ters  and  cumulative  statistics of one of the
		router's attached areas."
		INDEX { axsOspfv3AreaId }
	::= { axsOspfv3AreaTable 1 }

	AxsOspfv3AreaEntry ::=
		SEQUENCE {
			axsOspfv3AreaDomainNumber
				INTEGER,
			axsOspfv3AreaId
				AreaID,
			axsOspfv3ImportAsExtern
				INTEGER,
			axsOspfv3SpfRuns
				Counter32,
			axsOspfv3AreaBdrRtrCount
				Gauge32,
			axsOspfv3AsBdrRtrCount
				Gauge32,
			axsOspfv3AreaScopeLsaCount
				Gauge32,
			axsOspfv3AreaScopeLsaCksumSum
				Integer32,
			axsOspfv3AreaSummary
				INTEGER,
			axsOspfv3AreaStatus
				RowStatus,
			axsOspfv3StubMetric
				BigMetric
		}

axsOspfv3AreaDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ospfv3 domain number."
	::= { axsOspfv3AreaEntry 1 }

axsOspfv3AreaId OBJECT-TYPE
	SYNTAX  AreaID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A 32-bit integer uniquely identifying an area.
		Area ID 0.0.0.0 is used for the axsOspfv3 backbone."
	REFERENCE
		"OSPF Version 2, Appendix C.2 Area parameters"
	::= { axsOspfv3AreaEntry 2 }

axsOspfv3ImportAsExtern OBJECT-TYPE
	SYNTAX  INTEGER {
	importExternal (1),  -- normal area
	importNoExternal (2), -- stub area
	importNssa (3)        -- not-so-stubby-area
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether an area is a Stub area, NSSA, or
		standard area. AS-scope LSAs are not imported into Stub
		Areas or NSSAs. NSSAs import AS-External data as Type-7
		LSAs which have Area-scope"
	REFERENCE
		"OSPF Version 2, Appendix C.2 Area parameters"
		DEFVAL { importExternal }
	::= { axsOspfv3AreaEntry 3 }

axsOspfv3SpfRuns OBJECT-TYPE
	SYNTAX  Counter32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times that the intra-area  route
		table  has  been  calculated  using this area's
		link-state database.  This  is  typically  done
		using Dijkstra's algorithm."
	::= { axsOspfv3AreaEntry 4 }

axsOspfv3AreaBdrRtrCount OBJECT-TYPE
	SYNTAX  Gauge32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of area border routers reach-
		able within this area. This is initially zero,
		and is calculated in each SPF Pass."
	::= { axsOspfv3AreaEntry 5 }

axsOspfv3AsBdrRtrCount OBJECT-TYPE
	SYNTAX  Gauge32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of Autonomous  System  border
		routers  reachable  within  this area.  This is
		initially zero, and is calculated in  each  SPF
		Pass."
	::= { axsOspfv3AreaEntry 6 }

axsOspfv3AreaScopeLsaCount OBJECT-TYPE
	SYNTAX  Gauge32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
	"The total number of Area-Scope link-state
	advertisements in  this  area's link-state
	database."
	::= { axsOspfv3AreaEntry 7 }

axsOspfv3AreaScopeLsaCksumSum OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32-bit unsigned sum of the Area-Scope link-state
		advertisements'  LS  checksums  contained in this
		area's link-state database.  The sum can be used
		to determine if  there  has been  a  change  in a
		router's link state database, and to compare the
		link-state database of two routers."
		DEFVAL  { 0 }
	::= { axsOspfv3AreaEntry 8 }

axsOspfv3AreaSummary OBJECT-TYPE
	SYNTAX  INTEGER {
		noAreaSummary (1),
		sendAreaSummary (2)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The variable axsOspfv3AreaSummary controls the  im-
		port  of  summary LSAs into stub areas.  It has
		no effect on other areas.
		If it is noAreaSummary, the router will neither
		originate  nor  propagate summary LSAs into the
		stub area.  It will rely entirely  on  its  de-
		fault route.
		If it is sendAreaSummary, the router will  both
		summarize and propagate summary LSAs."
		DEFVAL  { noAreaSummary }
	::= { axsOspfv3AreaEntry 9 }

axsOspfv3AreaStatus OBJECT-TYPE
	SYNTAX  RowStatus
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of  the  en-
		try.  Setting it to 'invalid' has the effect of
		rendering it inoperative.  The internal  effect
		(row removal) is implementation dependent."
	::= { axsOspfv3AreaEntry 10 }

axsOspfv3StubMetric OBJECT-TYPE
	SYNTAX  BigMetric
--	ACCESS  read-create
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The metric value advertised for the default route
		into Stub and NSSA areas."
	::= { axsOspfv3AreaEntry 11 }

--	axsOspfv3 AS-Scope Link State Database
--		The Link State Database contains the AS-Scope Link State
--		Advertisements from throughout the areas that the
--		device is attached to.

axsOspfv3AsLsdbTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfv3AsLsdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The axsOspfv3 Process's AS-Scope Link State Database."
	::= { axsOspfv3 3 }

axsOspfv3AsLsdbEntry OBJECT-TYPE
	SYNTAX  AxsOspfv3AsLsdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
	"A single AS-Scope Link State Advertisement."
	INDEX { axsOspfv3AsLsdbType,
			axsOspfv3AsLsdbRouterId,
			axsOspfv3AsLsdbLsid }
	::= { axsOspfv3AsLsdbTable 1 }

	AxsOspfv3AsLsdbEntry ::=
		SEQUENCE {
			axsOspfv3AsLsdbDomainNumber
				INTEGER,
			axsOspfv3AsLsdbType
				INTEGER,
			axsOspfv3AsLsdbRouterId
				RouterID,
			axsOspfv3AsLsdbLsid
				IpAddress,
			axsOspfv3AsLsdbSequence
				Integer32,
			axsOspfv3AsLsdbAge
				Integer32,
			axsOspfv3AsLsdbChecksum
				Integer32,
			axsOspfv3AsLsdbAdvertisement
				OCTET STRING
			}

axsOspfv3AsLsdbDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ospfv3 domain number."
	::= { axsOspfv3AsLsdbEntry 1 }

axsOspfv3AsLsdbType OBJECT-TYPE
	SYNTAX  INTEGER {
		asExternalLink (16389)  -- 0x4005
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The type  of  the  link  state  advertisement.
		Each  link state type has a separate advertise-
		ment format. Unrecognized AS-Scope LSAs with the
		U-bit set are also store in this database."
	::= { axsOspfv3AsLsdbEntry 2 }

axsOspfv3AsLsdbRouterId OBJECT-TYPE
	SYNTAX  RouterID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32 bit number that uniquely identifies the
		originating router in the Autonomous System."
	REFERENCE
		"OSPF Version 2, Appendix C.1 Global parameters"
	::= { axsOspfv3AsLsdbEntry 3 }

axsOspfv3AsLsdbLsid OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
	"The Link State ID is an LS Type Specific field
	containing either a Router ID or a unique identifier;
	it identifies the piece of the  routing  domain
	that is being described by the advertisement.
	In contrast to OSPF for IPv4, the LSID has no
	addressing semantics."
	::= { axsOspfv3AsLsdbEntry 4 }

--  Note that the OSPF Sequence Number is a 32 bit signed
--  integer.  It starts with the value '80000001'h,
--  or -'7FFFFFFF'h, and increments until '7FFFFFFF'h
--  Thus, a typical sequence number will be very negative.

axsOspfv3AsLsdbSequence OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The sequence number field is a  signed  32-bit
		integer.   It  is used to detect old and dupli-
		cate link state advertisements.  The  space  of
		sequence  numbers  is  linearly  ordered.  The
		larger the sequence number the more recent  the
		advertisement."
	REFERENCE
		"OSPF Version  2,  Section  12.1.6  LS  sequence
		number"
	::= { axsOspfv3AsLsdbEntry 5 }

axsOspfv3AsLsdbAge OBJECT-TYPE
	SYNTAX  Integer32  -- Should be 0..MaxAge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This field is the age of the link state adver-
		tisement in seconds."
	REFERENCE
		"OSPF Version 2, Section 12.1.1 LS age"
	::= { axsOspfv3AsLsdbEntry 6 }

axsOspfv3AsLsdbChecksum OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This field is the  checksum  of  the  complete
		contents  of  the  advertisement, excepting the
		age field.  The age field is excepted  so  that
		an  advertisement's  age  can  be  incremented
		without updating the  checksum.  The  checksum
		used  is  the same that is used for ISO connec-
		tionless datagrams; it is commonly referred  to
		as the Fletcher checksum."
	REFERENCE
		"OSPF Version 2, Section 12.1.7 LS checksum"
	::= { axsOspfv3AsLsdbEntry 7 }

axsOspfv3AsLsdbAdvertisement OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (1..65535))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
	"The entire Link State Advertisement, including
	its header."
	::= { axsOspfv3AsLsdbEntry 8 }

--  axsOspfv3 Area-Scope Link State Database
--  The Link State Database contains the Area-Scope Link State
--  Advertisements from throughout the area that the
--  device is attached to.

axsOspfv3AreaLsdbTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfv3AreaLsdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The axsOspfv3 Process's Area-Scope Link State Database."
	::= { axsOspfv3 4 }

axsOspfv3AreaLsdbEntry OBJECT-TYPE
	SYNTAX  AxsOspfv3AreaLsdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A single Area-Scope Link State Advertisement."
	INDEX { axsOspfv3AreaLsdbDomainNumber,
		axsOspfv3AreaLsdbAreaId,
		axsOspfv3AreaLsdbType,
		axsOspfv3AreaLsdbRouterId,
		axsOspfv3AreaLsdbLsid }
	::= { axsOspfv3AreaLsdbTable 1 }

	AxsOspfv3AreaLsdbEntry ::=
		SEQUENCE {
		axsOspfv3AreaLsdbDomainNumber
			INTEGER,
		axsOspfv3AreaLsdbAreaId
			AreaID,
		axsOspfv3AreaLsdbType
			INTEGER,
		axsOspfv3AreaLsdbRouterId
			RouterID,
		axsOspfv3AreaLsdbLsid
			IpAddress,
		axsOspfv3AreaLsdbSequence
			Integer32,
		axsOspfv3AreaLsdbAge
			Integer32,
		axsOspfv3AreaLsdbChecksum
			Integer32,
		axsOspfv3AreaLsdbAdvertisement
			OCTET STRING
	}

axsOspfv3AreaLsdbDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ospfv3 domain number."
	::= { axsOspfv3AreaLsdbEntry 1 }

axsOspfv3AreaLsdbAreaId OBJECT-TYPE
	SYNTAX  AreaID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32 bit identifier of the Area from which the
		LSA was received."
	REFERENCE
		"OSPF Version 2, Appendix C.2 Area parameters."
	::= { axsOspfv3AreaLsdbEntry 2 }

axsOspfv3AreaLsdbType OBJECT-TYPE
	SYNTAX  INTEGER {
		routerLsa          (8193),  -- 0x2001
		networkLsa         (8194),  -- 0x2002
		interAreaPrefixLsa (8195),  -- 0x2003
		interAreaRouterLsa (8196),  -- 0x2004
		groupMembershipLsa (8198),  -- 0x2006
		nssaExternalLsa    (8199),  -- 0x2007
		intraAreaPrefixLsa (8201)   -- 0x2009
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The type  of  the  link  state  advertisement.
		Each  link state type has a separate advertise-
		ment format. Unrecognized Area-Scope LSAs with
		the U-bit set are also stored in this database."
	::= { axsOspfv3AreaLsdbEntry 3 }

axsOspfv3AreaLsdbRouterId OBJECT-TYPE
	SYNTAX  RouterID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32 bit number that uniquely identifies the
		originating router in the Autonomous System."
	REFERENCE
		"OSPF Version 2, Appendix C.1 Global parameters"
	::= { axsOspfv3AreaLsdbEntry 4 }

axsOspfv3AreaLsdbLsid OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Link State ID is an LS Type Specific field
		containing either a Router ID or a unique identifier;
		it identifies the piece of the  routing  domain
		that is being described by the advertisement.
		In contrast to OSPF for IPv4, the LSID has no
		addressing semantics."
	::= { axsOspfv3AreaLsdbEntry 5 }

--  Note that the OSPF Sequence Number is a 32 bit signed
--  integer.  It starts with the value '80000001'h,
--  or -'7FFFFFFF'h, and increments until '7FFFFFFF'h
--  Thus, a typical sequence number will be very negative.

axsOspfv3AreaLsdbSequence OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The sequence number field is a  signed  32-bit
		integer.   It  is used to detect old and dupli-
		cate link state advertisements.  The  space  of
		sequence  numbers  is  linearly  ordered.   The
		larger the sequence number the more recent  the
		advertisement."
	REFERENCE
		"OSPF Version  2,  Section  12.1.6  LS  sequence
		number"
	::= { axsOspfv3AreaLsdbEntry 6 }

axsOspfv3AreaLsdbAge OBJECT-TYPE
	SYNTAX  Integer32  -- Should be 0..MaxAge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This field is the age of the link state adver-
		tisement in seconds."
	REFERENCE
		"OSPF Version 2, Section 12.1.1 LS age"
	::= { axsOspfv3AreaLsdbEntry 7 }

axsOspfv3AreaLsdbChecksum OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This field is the  checksum  of  the  complete
		contents  of  the  advertisement, excepting the
		age field.  The age field is excepted  so  that
		an  advertisement's  age  can  be  incremented
		without updating the  checksum.  The  checksum
		used  is  the same that is used for ISO connec-
		tionless datagrams; it is commonly referred  to
		as the Fletcher checksum."
	REFERENCE
		"OSPF Version 2, Section 12.1.7 LS checksum"
	::= { axsOspfv3AreaLsdbEntry 8 }

axsOspfv3AreaLsdbAdvertisement OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (1..65535))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The entire Link State Advertisement, including
		its header."
	::= { axsOspfv3AreaLsdbEntry 9 }

--  axsOspfv3 Link-Scope Link State Database
--    The Link State Database contains the Link-Scope Link State
--    Advertisements from the links that the
--    device is attached to.

axsOspfv3LinkLsdbTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfv3LinkLsdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The axsOspfv3 Process's Link-Scope Link State Database."
	::= { axsOspfv3 5 }

axsOspfv3LinkLsdbEntry OBJECT-TYPE
	SYNTAX  AxsOspfv3LinkLsdbEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A single Link-Scope Link State Advertisement."
	INDEX { axsOspfv3LinkLsdbIfIndex,
		axsOspfv3LinkLsdbType,
		axsOspfv3LinkLsdbRouterId,
		axsOspfv3LinkLsdbLsid }
	::= { axsOspfv3LinkLsdbTable 1 }

	AxsOspfv3LinkLsdbEntry ::=
		SEQUENCE {
			axsOspfv3LinkLsdbDomainNumber
				INTEGER,
			axsOspfv3LinkLsdbIfIndex
				Ipv6IfIndex,
			axsOspfv3LinkLsdbType
				INTEGER,
			axsOspfv3LinkLsdbRouterId
				RouterID,
			axsOspfv3LinkLsdbLsid
				IpAddress,
			axsOspfv3LinkLsdbSequence
				Integer32,
			axsOspfv3LinkLsdbAge
				Integer32,
			axsOspfv3LinkLsdbChecksum
				Integer32,
			axsOspfv3LinkLsdbAdvertisement
				OCTET STRING
		}

axsOspfv3LinkLsdbDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ospfv3 domain number."
	::= { axsOspfv3LinkLsdbEntry 1 }

axsOspfv3LinkLsdbIfIndex OBJECT-TYPE
	SYNTAX  Ipv6IfIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The identifier of the link from which the LSA
		was received."
	REFERENCE
		"OSPF Version 2, Appendix C.2 Area parameters"
	::= { axsOspfv3LinkLsdbEntry 2 }

axsOspfv3LinkLsdbType OBJECT-TYPE
	SYNTAX  INTEGER  {
		linkLsa (8)  -- 0x0008
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The type  of  the  link  state  advertisement.
		Each  link state type has a separate advertise-
		ment format. Unrecognized Link-Scope LSAs with
		the U-bit set are also stored in this database."
	::= { axsOspfv3LinkLsdbEntry 3 }

axsOspfv3LinkLsdbRouterId OBJECT-TYPE
	SYNTAX  RouterID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32 bit number that uniquely identifies the
		originating router in the Autonomous System."
	REFERENCE
		"OSPF Version 2, Appendix C.1 Global parameters"
	::= { axsOspfv3LinkLsdbEntry 4 }

axsOspfv3LinkLsdbLsid OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Link State ID is an LS Type Specific field
		containing either a Router ID or a unique identifier;
		it identifies the piece of the  routing  domain
		that is being described by the advertisement.
		In contrast to OSPF for IPv4, the LSID has no
		addressing semantics."
	::= { axsOspfv3LinkLsdbEntry 5 }

--  Note that the OSPF Sequence Number is a 32 bit signed
--  integer.  It starts with the value '80000001'h,
--  or -'7FFFFFFF'h, and increments until '7FFFFFFF'h
--  Thus, a typical sequence number will be very negative.

axsOspfv3LinkLsdbSequence OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The sequence number field is a  signed  32-bit
		integer.   It  is used to detect old and dupli-
		cate link state advertisements.  The  space  of
		sequence  numbers  is  linearly  ordered.  The
		larger the sequence number the more recent  the
		advertisement."
	REFERENCE
		"OSPF Version  2,  Section  12.1.6  LS  sequence
		number"
	::= { axsOspfv3LinkLsdbEntry 6 }

axsOspfv3LinkLsdbAge OBJECT-TYPE
	SYNTAX  Integer32  -- Should be 0..MaxAge
	ACCESS  read-only
	STATUS   mandatory
	DESCRIPTION
		"This field is the age of the link state adver-
		tisement in seconds."
	REFERENCE
		"OSPF Version 2, Section 12.1.1 LS age"
	::= { axsOspfv3LinkLsdbEntry 7 }

axsOspfv3LinkLsdbChecksum OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This field is the  checksum  of  the  complete
		contents  of  the  advertisement, excepting the
		age field.  The age field is excepted  so  that
		an  advertisement's  age  can  be  incremented
		without updating the  checksum.  The  checksum
		used  is  the same that is used for ISO connec-
		tionless datagrams; it is commonly referred  to
		as the Fletcher checksum."
	REFERENCE
		"OSPF Version 2, Section 12.1.7 LS checksum"
	::= { axsOspfv3LinkLsdbEntry 8 }

axsOspfv3LinkLsdbAdvertisement OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (1..65535))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The entire Link State Advertisement, including
		its header."
	::= { axsOspfv3LinkLsdbEntry 9 }

--  OSPF Host Table
--    The Host/Metric Table indicates what hosts are directly
--    attached to the Router, and what metrics and types of
--    service should be advertised for them.
--  axsOspfv3 Interface Table

axsOspfv3IfTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfv3IfEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The axsOspfv3 Interface Table describes the  inter-
		faces from the viewpoint of axsOspfv3."
	REFERENCE
		"OSPF Version 2, Appendix C.3  Router  interface
		parameters"
	::= { axsOspfv3 7 }

axsOspfv3IfEntry OBJECT-TYPE
	SYNTAX  AxsOspfv3IfEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The axsOspfv3 Interface Entry describes one  inter-
		face from the viewpoint of axsOspfv3."
	INDEX { axsOspfv3IfIndex }
	::= { axsOspfv3IfTable 1 }

	AxsOspfv3IfEntry ::=
		SEQUENCE {
			axsOspfv3IfDomainNumber
				INTEGER,
			axsOspfv3IfIndex
				Ipv6IfIndex,
			axsOspfv3IfAreaId
				AreaID,
			axsOspfv3IfType
				INTEGER,
			axsOspfv3IfAdminStat
				Status,
			axsOspfv3IfRtrPriority
				DesignatedRouterPriority,
			axsOspfv3IfTransitDelay
				UpToMaxAge,
			axsOspfv3IfRetransInterval
				UpToMaxAge,
			axsOspfv3IfHelloInterval
				HelloRange,
			axsOspfv3IfRtrDeadInterval
				PositiveInteger,
			axsOspfv3IfPollInterval
				PositiveInteger,
			axsOspfv3IfState
				INTEGER,
			axsOspfv3IfDesignatedRouter
				RouterID,
			axsOspfv3IfBackupDesignatedRouter
				RouterID,
			axsOspfv3IfEvents
				Counter32,
			axsOspfv3IfStatus
				RowStatus,
			axsOspfv3IfMulticastForwarding
				INTEGER,
			axsOspfv3IfDemand
				TruthValue,
			axsOspfv3IfMetricValue
				Metric,
			axsOspfv3IfLinkScopeLsaCount
				Gauge32,
			axsOspfv3IfLinkLsaCksumSum
				Integer32,
			axsOspfv3IfInstId
				Integer32
			}

axsOspfv3IfDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ospfv3 domain number."
	::= { axsOspfv3IfEntry 1 }

axsOspfv3IfIndex OBJECT-TYPE
	SYNTAX  Ipv6IfIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The interface index of this axsOspfv3 interface.
		It corresponds to the interface index of the
		Ipv6 interface on which axsOspfv3 is configured."
	::= { axsOspfv3IfEntry 2 }

axsOspfv3IfAreaId OBJECT-TYPE
	SYNTAX  AreaID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A 32-bit integer uniquely identifying the area
		to  which  the  interface  connects.   Area  ID
		0.0.0.0 is used for the axsOspfv3 backbone."
	DEFVAL   { '00000000'H }  -- 0.0.0.0
	::= { axsOspfv3IfEntry 3 }

axsOspfv3IfType OBJECT-TYPE
	SYNTAX  INTEGER {
		broadcast (1),
		nbma (2),
		pointToPoint (3),
		pointToMultipoint (5)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The axsOspfv3 interface type."
	::= { axsOspfv3IfEntry 4 }

axsOspfv3IfAdminStat OBJECT-TYPE
	SYNTAX  Status
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The axsOspfv3 interface's  administrative  status.
		The  value formed on the interface, and the in-
		terface will be advertised as an internal route
		to  some  area.  The  value 'disabled' denotes
		that the interface is external to axsOspfv3."
	DEFVAL { enabled }
	::= { axsOspfv3IfEntry 5 }

axsOspfv3IfRtrPriority OBJECT-TYPE
	SYNTAX  DesignatedRouterPriority
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The  priority  of  this  interface.   Used  in
		multi-access  networks,  this  field is used in
		the designated router election algorithm.  The
		value 0 signifies that the router is not eligi-
		ble to become the  designated  router  on  this
		particular  network.   In the event of a tie in
		this value, routers will use their Router ID as
		a tie breaker."
	DEFVAL { 1 }
	::= { axsOspfv3IfEntry 6 }

axsOspfv3IfTransitDelay OBJECT-TYPE
	SYNTAX  UpToMaxAge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The estimated number of seconds  it  takes  to
		transmit  a  link state update packet over this
		interface."
	DEFVAL { 1 }
	::= { axsOspfv3IfEntry 7 }

axsOspfv3IfRetransInterval OBJECT-TYPE
	SYNTAX  UpToMaxAge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of seconds between  link-state  ad-
		vertisement  retransmissions,  for  adjacencies
		belonging to this  interface.  This  value  is
		also used when retransmitting database descrip-
		tion and link-state request packets."
	DEFVAL { 5 }
	::= { axsOspfv3IfEntry 8 }

axsOspfv3IfHelloInterval OBJECT-TYPE
	SYNTAX  HelloRange
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The length of time, in  seconds,  between  the
		Hello  packets that the router sends on the in-
		terface.  This value must be the same  for  all
		routers attached to a common network."
	DEFVAL { 10 }
	::= { axsOspfv3IfEntry 9 }

axsOspfv3IfRtrDeadInterval OBJECT-TYPE
	SYNTAX  PositiveInteger
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of seconds that  a  router's  Hello
		packets  have  not been seen before it's neigh-
		bors declare the router down.  This  should  be
		some  multiple  of  the  Hello  interval.  This
		value must be the same for all routers attached
		to a common network."
	DEFVAL { 40 }
	::= { axsOspfv3IfEntry 10 }

axsOspfv3IfPollInterval OBJECT-TYPE
	SYNTAX  PositiveInteger
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The larger time interval, in seconds,  between
		the  Hello  packets  sent  to  an inactive non-
		broadcast multi- access neighbor."
	DEFVAL { 120 }
	::= { axsOspfv3IfEntry 11 }

axsOspfv3IfState OBJECT-TYPE
	SYNTAX  INTEGER {
		down (1),
		loopback (2),
		waiting (3),
		pointToPoint (4),
		designatedRouter (5),
		backupDesignatedRouter (6),
		otherDesignatedRouter (7)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The axsOspfv3 Interface State."
	DEFVAL { down }
	::= { axsOspfv3IfEntry 12 }

axsOspfv3IfDesignatedRouter OBJECT-TYPE
	SYNTAX  RouterID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Router ID of the Designated Router."
	DEFVAL  { '00000000'H }  -- 0.0.0.0
	::= { axsOspfv3IfEntry 13 }

axsOspfv3IfBackupDesignatedRouter OBJECT-TYPE
	SYNTAX  RouterID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The  Router ID of  the  Backup   Designated
		Router."
	DEFVAL  { '00000000'H }  -- 0.0.0.0
	::= { axsOspfv3IfEntry 15 }

axsOspfv3IfEvents OBJECT-TYPE
	SYNTAX  Counter32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times this  OSPF  interface  has
		changed its state, or an error has occurred."
	::= { axsOspfv3IfEntry 16 }

axsOspfv3IfStatus OBJECT-TYPE
	SYNTAX  RowStatus
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of  the  en-
		try.  Setting it to 'invalid' has the effect of
		rendering it inoperative.  The internal  effect
		(row removal) is implementation dependent."
	::= { axsOspfv3IfEntry 18 }

axsOspfv3IfMulticastForwarding OBJECT-TYPE
	SYNTAX  INTEGER {
		blocked (1),   -- no multicast forwarding
		multicast (2), -- using multicast address
		unicast (3)    -- to each axsOspfv3 neighbor
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The way multicasts should  forwarded  on  this
		interface;  not  forwarded,  forwarded  as data
		link multicasts, or forwarded as data link uni-
		casts.  Data link multicasting is not meaning-
		ful on point to point and NBMA interfaces, and
		setting axsOspfv3MulticastForwarding to 0 effective-
		ly disables all multicast forwarding."
	DEFVAL { blocked }
	::= { axsOspfv3IfEntry 19 }

axsOspfv3IfDemand OBJECT-TYPE
	SYNTAX  TruthValue
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether Demand axsOspfv3 procedures (hel-
		lo supression to FULL neighbors and setting the
		DoNotAge flag on proogated LSAs) should be per-
		formed on this interface."
	DEFVAL { false }
	::= { axsOspfv3IfEntry 20 }

axsOspfv3IfMetricValue OBJECT-TYPE
	SYNTAX  Metric
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The metric assigned to this interface.
		The default value of the Metric is
		10^8 / ifSpeed."
	::= { axsOspfv3IfEntry 21 }

axsOspfv3IfLinkScopeLsaCount OBJECT-TYPE
	SYNTAX  Gauge32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of Link-Scope link-state
		advertisements in  this  link's link-state database."
	::= { axsOspfv3IfEntry 22 }

axsOspfv3IfLinkLsaCksumSum OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32-bit unsigned sum of the Link-Scope link-state
		advertisements'  LS  checksums  contained in this
		link's link-state database.  The sum can be used
		to determine if  there  has been  a  change  in a
		router's link state database, and to compare the
		link-state database of two routers."
	DEFVAL  { 0 }
	::= { axsOspfv3IfEntry 23 }

axsOspfv3IfInstId OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Enables multiple instances of axsOspfv3 to be run over
		a single link. Each protocol instance would be assigned
		a separate ID. This ID has local link significance
		only."
	DEFVAL  { 0 }
	::= { axsOspfv3IfEntry 24 }

--  axsOspfv3 Virtual Interface Table
--    The Virtual Interface Table describes the virtual
--    links that the axsOspfv3 Process is configured to
--    carry on.

axsOspfv3VirtIfTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfv3VirtIfEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information about this router's virtual inter-
		faces."
	REFERENCE
		"OSPF Version  2,  Appendix  C.4   Virtual  link
		parameters"
	::= { axsOspfv3 8 }

axsOspfv3VirtIfEntry OBJECT-TYPE
	SYNTAX  AxsOspfv3VirtIfEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Information about a single Virtual Interface."
		INDEX { axsOspfv3VirtIfAreaId, axsOspfv3VirtIfNeighbor }
	::= { axsOspfv3VirtIfTable 1 }

	AxsOspfv3VirtIfEntry ::=
		SEQUENCE {
			axsOspfv3VirtIfDomainNumber
				INTEGER,
			axsOspfv3VirtIfAreaId
				AreaID,
			axsOspfv3VirtIfNeighbor
				RouterID,
			axsOspfv3VirtIfIndex
				Ipv6IfIndex,
			axsOspfv3VirtIfTransitDelay
				UpToMaxAge,
			axsOspfv3VirtIfRetransInterval
				UpToMaxAge,
			axsOspfv3VirtIfHelloInterval
				HelloRange,
			axsOspfv3VirtIfRtrDeadInterval
				PositiveInteger,
			axsOspfv3VirtIfState
				INTEGER,
			axsOspfv3VirtIfEvents
				Counter32,
			axsOspfv3VirtIfStatus
				RowStatus,
			axsOspfv3VirtIfLinkScopeLsaCount
				Gauge32,
			axsOspfv3VirtIfLinkLsaCksumSum
				Integer32
			}

axsOspfv3VirtIfDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ospfv3 domain number."
	::= { axsOspfv3VirtIfEntry 1 }

axsOspfv3VirtIfAreaId OBJECT-TYPE
	SYNTAX  AreaID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The  Transit  Area  that  the   Virtual   Link
		traverses.  By definition, this is not 0.0.0.0"
	::= { axsOspfv3VirtIfEntry 2 }

axsOspfv3VirtIfNeighbor OBJECT-TYPE
	SYNTAX  RouterID
	ACCESS  read-only
	STATUS mandatory
	DESCRIPTION
		"The Router ID of the Virtual Neighbor."
	::= { axsOspfv3VirtIfEntry 3 }

axsOspfv3VirtIfIndex OBJECT-TYPE
	SYNTAX  Ipv6IfIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The interface index of this axsOspfv3 virtual interface.
		It must be unique among all the interface indices
		on the router."
		::= { axsOspfv3VirtIfEntry 4 }

axsOspfv3VirtIfTransitDelay OBJECT-TYPE
	SYNTAX  UpToMaxAge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The estimated number of seconds  it  takes  to
		transmit  a link- state update packet over this
		interface."
	DEFVAL { 1 }
	::= { axsOspfv3VirtIfEntry 5 }

axsOspfv3VirtIfRetransInterval OBJECT-TYPE
	SYNTAX  UpToMaxAge
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of seconds between  link-state  ad-
		vertisement  retransmissions,  for  adjacencies
		belonging to this  interface.  This  value  is
		also used when retransmitting database descrip-
		tion  and  link-state  request  packets.   This
		value  should  be well over the expected round-
		trip time."
	DEFVAL { 5 }
	::= { axsOspfv3VirtIfEntry 6 }

axsOspfv3VirtIfHelloInterval OBJECT-TYPE
	SYNTAX  HelloRange
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The length of time, in  seconds,  between  the
		Hello  packets that the router sends on the in-
		terface.  This value must be the same  for  the
		virtual neighbor."
	DEFVAL { 10 }
	::= { axsOspfv3VirtIfEntry 7 }

axsOspfv3VirtIfRtrDeadInterval OBJECT-TYPE
	SYNTAX  PositiveInteger
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of seconds that  a  router's  Hello
		packets  have  not been seen before it's neigh-
		bors declare the router down.  This  should  be
		some  multiple  of  the  Hello  interval.  This
		value must be the same for the  virtual  neigh-
		bor."
	DEFVAL { 60 }
	::= { axsOspfv3VirtIfEntry 8 }

axsOspfv3VirtIfState OBJECT-TYPE
	SYNTAX  INTEGER {
		down (1),    -- these use the same encoding
		pointToPoint (4) -- as the axsOspfv3IfTable
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"OSPF virtual interface states."
	DEFVAL  { down }
	::= { axsOspfv3VirtIfEntry 9 }

axsOspfv3VirtIfEvents OBJECT-TYPE
	SYNTAX  Counter32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of state changes or error events on
		this Virtual Link"
	::= { axsOspfv3VirtIfEntry 10 }

axsOspfv3VirtIfStatus OBJECT-TYPE
	SYNTAX  RowStatus
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of  the  en-
		try.  Setting it to 'invalid' has the effect of
		rendering it inoperative.  The internal  effect
		(row removal) is implementation dependent."
		::= { axsOspfv3VirtIfEntry 11 }

axsOspfv3VirtIfLinkScopeLsaCount OBJECT-TYPE
	SYNTAX  Gauge32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of Link-Scope link-state
		advertisements in  this  virtual link's link-state
		database."
	::= { axsOspfv3VirtIfEntry 12 }

axsOspfv3VirtIfLinkLsaCksumSum OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The 32-bit unsigned sum of the Link-Scope link-state
		advertisements'  LS  checksums  contained in this
		virtual link's link-state database.  The sum can be used
		to determine if  there  has been  a  change  in a
		router's link state database, and to compare the
		link-state database of two routers."
	DEFVAL  { 0 }
	::= { axsOspfv3VirtIfEntry 13 }

--  axsOspfv3 Neighbor Table
--    The axsOspfv3 Neighbor Table describes all neighbors in
--    the locality of the subject router.

axsOspfv3NbrTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfv3NbrEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table of non-virtual neighbor information."
	REFERENCE
		"OSPF Version 2, Section 10  The  Neighbor  Data
		Structure"
	::= { axsOspfv3 9 }

axsOspfv3NbrEntry OBJECT-TYPE
	SYNTAX  AxsOspfv3NbrEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The information regarding a single neighbor."
	REFERENCE
		"OSPF Version 2, Section 10  The  Neighbor  Data
		Structure"
	INDEX { axsOspfv3NbrIfIndex, axsOspfv3NbrIpv6Addr }
	::= { axsOspfv3NbrTable 1 }

	AxsOspfv3NbrEntry ::=
		SEQUENCE {
			axsOspfv3NbrDomainNumber
				INTEGER,
			axsOspfv3NbrIfIndex
				Ipv6IfIndex,
			axsOspfv3NbrIpv6Addr
				Ipv6Address,
			axsOspfv3NbrRtrId
				RouterID,
			axsOspfv3NbrOptions
				Integer32,
			axsOspfv3NbrPriority
				DesignatedRouterPriority,
			axsOspfv3NbrState
				INTEGER,
			axsOspfv3NbrEvents
				Counter32,
			axsOspfv3NbrLsRetransQLen
				Gauge32,
			axsOspfv3NbrHelloSuppressed
				TruthValue,
			axsOspfv3NbrIfId
				Ipv6IfIndex
			}

axsOspfv3NbrDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ospfv3 domain number."
	::= { axsOspfv3NbrEntry 1 }

axsOspfv3NbrIfIndex OBJECT-TYPE
	SYNTAX  Ipv6IfIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The local link ID of the link over which the
		neighbor can be reached."
	::= { axsOspfv3NbrEntry 2 }

axsOspfv3NbrIpv6Addr OBJECT-TYPE
	SYNTAX  Ipv6Address
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IPv6 address of the neighbor associated with
		the local link."
	::= { axsOspfv3NbrEntry 3 }

axsOspfv3NbrRtrId OBJECT-TYPE
	SYNTAX  RouterID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A 32-bit integer (represented as a type  IpAd-
		dress)  uniquely  identifying  the  neighboring
		router in the Autonomous System."
	::= { axsOspfv3NbrEntry 4 }

axsOspfv3NbrOptions OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A Bit Mask corresponding to the neighbor's op-
		tions field."
	DEFVAL { 0 }
	::= { axsOspfv3NbrEntry 5 }

axsOspfv3NbrPriority OBJECT-TYPE
	SYNTAX  DesignatedRouterPriority
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The priority of this neighbor in the designat-
		ed router election algorithm.  The value 0 sig-
		nifies that the neighbor is not eligible to be-
		come  the  designated router on this particular
		network."
	DEFVAL { 1 }
	::= { axsOspfv3NbrEntry 6 }

axsOspfv3NbrState OBJECT-TYPE
	SYNTAX  INTEGER {
		down (1),
		attempt (2),
		init (3),
		twoWay (4),
		exchangeStart (5),
		exchange (6),
		loading (7),
		full (8)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The State of the relationship with this Neigh-
		bor."
	REFERENCE
		"OSPF Version 2, Section 10.1 Neighbor States"
	DEFVAL  { down }
	::= { axsOspfv3NbrEntry 7 }

axsOspfv3NbrEvents OBJECT-TYPE
	SYNTAX  Counter32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of times this neighbor relationship
		has changed state, or an error has occurred."
	::= { axsOspfv3NbrEntry 8 }

axsOspfv3NbrLsRetransQLen OBJECT-TYPE
	SYNTAX  Gauge32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The  current  length  of  the   retransmission
		queue."
	::= { axsOspfv3NbrEntry 9 }

axsOspfv3NbrHelloSuppressed OBJECT-TYPE
	SYNTAX  TruthValue
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether Hellos are being  suppressed
		to the neighbor"
	::= { axsOspfv3NbrEntry 12 }

axsOspfv3NbrIfId OBJECT-TYPE
	SYNTAX  Ipv6IfIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The interface ID that the neighbor advertises
		in its Hello Packets on this link, that is, the
		neighbor's local interface index."
	::= { axsOspfv3NbrEntry 13 }

--  axsOspfv3 Virtual Neighbor Table
--    This table describes all virtual neighbors.
--    Since Virtual Links are configured in the
--    virtual interface table, this table is read-only.

axsOspfv3VirtNbrTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfv3VirtNbrEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table of virtual neighbor information."
	REFERENCE
		"OSPF Version 2, Section 15  Virtual Links"
	::= { axsOspfv3 10 }

axsOspfv3VirtNbrEntry OBJECT-TYPE
	SYNTAX  AxsOspfv3VirtNbrEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Virtual neighbor information."
	INDEX { axsOspfv3VirtNbrArea, axsOspfv3VirtNbrRtrId }
	::= { axsOspfv3VirtNbrTable 1 }

	AxsOspfv3VirtNbrEntry ::=
		SEQUENCE {
			axsOspfv3VirtNbrDomainNumber
				INTEGER,
			axsOspfv3VirtNbrArea
				AreaID,
			axsOspfv3VirtNbrRtrId
				RouterID,
			axsOspfv3VirtNbrIfIndex
				Ipv6IfIndex,
			axsOspfv3VirtNbrIpv6Addr
				Ipv6Address,
			axsOspfv3VirtNbrOptions
				Integer32,
			axsOspfv3VirtNbrState
				INTEGER,
			axsOspfv3VirtNbrEvents
				Counter32,
			axsOspfv3VirtNbrLsRetransQLen
				Gauge32,
			axsOspfv3VirtNbrHelloSuppressed
				TruthValue,
			axsOspfv3VirtNbrIfId
				Ipv6IfIndex
			}

axsOspfv3VirtNbrDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ospfv3 domain number."
	::= { axsOspfv3VirtNbrEntry 1 }

axsOspfv3VirtNbrArea OBJECT-TYPE
	SYNTAX  AreaID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Transit Area Identifier."
	::= { axsOspfv3VirtNbrEntry 2 }

axsOspfv3VirtNbrRtrId OBJECT-TYPE
	SYNTAX  RouterID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A  32-bit  integer  uniquely  identifying  the
		neighboring router in the Autonomous System."
	::= { axsOspfv3VirtNbrEntry 3 }

axsOspfv3VirtNbrIfIndex OBJECT-TYPE
	SYNTAX  Ipv6IfIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The local link ID for the virtual link over
		which the neighbor can be reached."
	::= { axsOspfv3VirtNbrEntry 4 }

axsOspfv3VirtNbrIpv6Addr OBJECT-TYPE
	SYNTAX  Ipv6Address
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IPv6 address used to reach this Virtual Neighbor.
		It must be a Site-Local or Global scope address."
	::= { axsOspfv3VirtNbrEntry 5 }

axsOspfv3VirtNbrOptions OBJECT-TYPE
	SYNTAX  Integer32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A Bit Mask corresponding to the neighbor's op-
		tions field."
	::= { axsOspfv3VirtNbrEntry 6 }

axsOspfv3VirtNbrState OBJECT-TYPE
	SYNTAX  INTEGER {
		down (1),
		attempt (2),
		init (3),
		twoWay (4),
		exchangeStart (5),
		exchange (6),
		loading (7),
		full (8)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The state of the  Virtual  Neighbor  Relation-
		ship."
	::= { axsOspfv3VirtNbrEntry 7 }

axsOspfv3VirtNbrEvents OBJECT-TYPE
	SYNTAX  Counter32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of  times  this  virtual  link  has
		changed its state, or an error has occurred."
	::= { axsOspfv3VirtNbrEntry 8 }

axsOspfv3VirtNbrLsRetransQLen OBJECT-TYPE
	SYNTAX  Gauge32
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The  current  length  of  the   retransmission
		queue."
	::= { axsOspfv3VirtNbrEntry 9 }

axsOspfv3VirtNbrHelloSuppressed OBJECT-TYPE
	SYNTAX  TruthValue
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Indicates whether Hellos are being  suppressed
		to the neighbor"
	::= { axsOspfv3VirtNbrEntry 10 }

axsOspfv3VirtNbrIfId OBJECT-TYPE
	SYNTAX  Ipv6IfIndex
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The interface ID that the neighbor advertises
		in its Hello Packets on this virtual link, that is,
		the neighbor's local interface index."
	::= { axsOspfv3VirtNbrEntry 11 }

 --
 --    The axsOspfv3 Area Aggregate Table
 --

axsOspfv3AreaAggregateTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsOspfv3AreaAggregateEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A range of IPv6 prefixes specified by a
		prefix/prefix length  pair. Note that if
		ranges are configured such that one range sub-
		sumes  another range the most specific match is
		the preferred one."
	::= { axsOspfv3 11 }

axsOspfv3AreaAggregateEntry OBJECT-TYPE
	SYNTAX  AxsOspfv3AreaAggregateEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A range of IPv6 prefixes specified by a
		prefix/prefix length  pair. Note that if
		ranges are configured such that one range sub-
		sumes  another range the most specific match is
		the preferred one."
	REFERENCE
		"OSPF Version 2, Appendix C.2  Area parameters"
	INDEX { axsOspfv3AreaAggregateAreaID,
		axsOspfv3AreaAggregateAreaLsdbType,
		axsOspfv3AreaAggregateIndex }
	::= { axsOspfv3AreaAggregateTable 1 }

	AxsOspfv3AreaAggregateEntry ::=
		SEQUENCE {
			axsOspfv3AreaAggregateDomainNumber
				INTEGER,
			axsOspfv3AreaAggregateAreaID
				AreaID,
			axsOspfv3AreaAggregateAreaLsdbType
				INTEGER,
			axsOspfv3AreaAggregateIndex
				INTEGER,
			axsOspfv3AreaAggregatePrefix
				Ipv6AddressPrefix,
			axsOspfv3AreaAggregatePrefixLen
				INTEGER,
			axsOspfv3AreaAggregateStatus
				RowStatus,
			axsOspfv3AreaAggregateEffect
				INTEGER
			}

axsOspfv3AreaAggregateDomainNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"ospfv3 domain number."
	::= { axsOspfv3AreaAggregateEntry 1 }

axsOspfv3AreaAggregateAreaID OBJECT-TYPE
	SYNTAX  AreaID
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Area the Address Aggregate is to be  found
		within."
	REFERENCE
		"OSPF Version 2, Appendix C.2 Area parameters"
	::= { axsOspfv3AreaAggregateEntry 2 }

axsOspfv3AreaAggregateAreaLsdbType OBJECT-TYPE
	SYNTAX  INTEGER {
		interAreaPrefixLsa (8195), -- 0x2003
		nssaExternalLsa    (8199)  -- 0x2007
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The type of the Address Aggregate.  This field
		specifies  the  Area Lsdb type that this Address Ag-
		gregate applies to."
	REFERENCE
		"OSPF Version 2, Appendix A.4.1 The  Link  State
		Advertisement header"
	::= { axsOspfv3AreaAggregateEntry 3 }

axsOspfv3AreaAggregateIndex OBJECT-TYPE
	SYNTAX  INTEGER (1..2147483647)
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A unique identifier for this aggregate table entry."
	::= { axsOspfv3AreaAggregateEntry 4 }

axsOspfv3AreaAggregatePrefix OBJECT-TYPE
	SYNTAX  Ipv6AddressPrefix
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IPv6 Prefix."
	REFERENCE
		"OSPF Version 2, Appendix C.2 Area parameters"
	::= { axsOspfv3AreaAggregateEntry 5 }

axsOspfv3AreaAggregatePrefixLen OBJECT-TYPE
	SYNTAX  INTEGER ( 3..128 )
--	UNITS  "bits"
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The length of the prefix (in bits). A prefix can
		not be shorter than 3 bits."
	REFERENCE
		"OSPF Version 2, Appendix C.2 Area parameters"
	::= { axsOspfv3AreaAggregateEntry 6 }

axsOspfv3AreaAggregateStatus OBJECT-TYPE
	SYNTAX  RowStatus
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable displays the status of  the  en-
		try.  Setting it to 'invalid' has the effect of
		rendering it inoperative.  The internal  effect
		(row removal) is implementation dependent."
	::= { axsOspfv3AreaAggregateEntry 7 }

axsOspfv3AreaAggregateEffect OBJECT-TYPE
	SYNTAX  INTEGER {
		advertiseMatching (1),
		doNotAdvertiseMatching (2)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Prefixes subsumed by ranges either trigger  the
		advertisement  of  the indicated aggregate (ad-
		vertiseMatching), or result in the prefix not
		being advertised at all outside the area."
	DEFVAL  { advertiseMatching }
	::= { axsOspfv3AreaAggregateEntry 8 }

--  axsIsis group

axsIsisSysTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsIsisSysEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The set of instances of the Integrated IS-IS protocol existing on the system."
	::= { axsIsisSystem 1 }

axsIsisSysEntry OBJECT-TYPE
	SYNTAX  AxsIsisSysEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Each row defines information specific to a single instance of the IS-IS protocol existing on the system."
    INDEX { axsIsisSysInstance }
	::= { axsIsisSysTable 1 }

	AxsIsisSysEntry ::=
		SEQUENCE {
		    axsIsisSysInstance		INTEGER
		}

axsIsisSysInstance OBJECT-TYPE
	SYNTAX  INTEGER
--	ACCESS  accessible-for-notify
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The unique identifier of the Integrated IS-IS instance to which this row corresponds."
	::= { axsIsisSysEntry 1 }

axsIsisSysLevelTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsIsisSysLevelEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Level specific information about the System."
	::= { axsIsisSysLevel 1 }

axsIsisSysLevelEntry OBJECT-TYPE
	SYNTAX  AxsIsisSysLevelEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Describe variables defined for Area or Domain."
    INDEX { axsIsisSysInstance,axsIsisSysLevelIndex }
	::= { axsIsisSysLevelTable 1 }

	AxsIsisSysLevelEntry ::=
		SEQUENCE {
		    axsIsisSysLevelIndex		INTEGER
		}

axsIsisSysLevelIndex OBJECT-TYPE
	SYNTAX  INTEGER
--	ACCESS  accessible-for-notify
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The level that this entry describes."
	::= { axsIsisSysLevelEntry 1 }

axsIsisCircTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsIsisCircEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table of circuits used by each instance of Integrated IS-IS on this system."
	::= { axsIsisCirc 1 }

axsIsisCircEntry OBJECT-TYPE
	SYNTAX  AxsIsisCircEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An isisCircEntry exists for each circuit used by Integrated IS-IS on this system."
    INDEX { axsIsisSysInstance,axsIsisCircIndex }
	::= { axsIsisCircTable 1 }

	AxsIsisCircEntry ::=
		SEQUENCE {
		    axsIsisCircIndex		INTEGER
		}

axsIsisCircIndex OBJECT-TYPE
	SYNTAX  INTEGER
--	ACCESS  accessible-for-notify
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The identifier of this circuit, unique within the instance of the IS-IS protocol. This object follows the index behavior.  This is for SNMP Indexing purposes only and need not have any relation to any protocol value."
	::= { axsIsisCircEntry 1 }

axsIsisNotificationTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsIsisNotificationEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Objects seen in the most recent notification from this instance of the IS-IS protocol."
	::= { axsIsisNotification 1 }

axsIsisNotificationEntry OBJECT-TYPE
	SYNTAX  AxsIsisNotificationEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Each entry defines variables relevant to notifications for one instance of the IS-IS protocol."
    INDEX { axsIsisSysInstance }
	::= { axsIsisNotificationTable 1 }

	AxsIsisNotificationEntry ::=
		SEQUENCE {
		    axsIsisPduLspId		OCTET STRING,
		    axsIsisAdjState		INTEGER
		}

axsIsisPduLspId OBJECT-TYPE
	SYNTAX  OCTET STRING
--	ACCESS  accessible-for-notify
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An Octet String that uniquely identifies a Link State PDU."
	::= { axsIsisNotificationEntry 1 }

axsIsisAdjState OBJECT-TYPE
	SYNTAX  INTEGER
--	ACCESS  accessible-for-notify
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The state of the adjacency REFERENCE ISIS.aoi adjacencyState (78)"
	::= { axsIsisNotificationEntry 9 }

--  axsStatic
axsStaticTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsStaticGatewayEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The set of instances of the static gateway state."
	::= { axsStatic 1 }

axsStaticGatewayEntry OBJECT-TYPE
	SYNTAX  AxsStaticGatewayEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Each row defines information about static route gateway state."
        INDEX { axsStaticGatewayAddr }
	::= { axsStaticTable 1 }

	AxsStaticGatewayEntry ::=
		SEQUENCE {
		    axsStaticGatewayAddr		IpAddress,
		    axsStaticGatewayState		INTEGER
		}
		
axsStaticGatewayAddr OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The static route gateway address."
	::= { axsStaticGatewayEntry 1 }
	
axsStaticGatewayState OBJECT-TYPE
	SYNTAX  INTEGER {
                    reachable(1),
                    unreachable(2)
                }
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The state of static route gateway."
	::= { axsStaticGatewayEntry 2 }	

axsStaticIpv6Table OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxsStaticIpv6GatewayEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The set of instances of the ipv6 static gateway state."
	::= { axsStatic 3 }

axsStaticIpv6GatewayEntry OBJECT-TYPE
	SYNTAX  AxsStaticIpv6GatewayEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Each row defines information about ipv6 static route gateway state."
        INDEX { axsStaticIpv6Ifindex,
                axsStaticIpv6GatewayAddr }
	::= { axsStaticIpv6Table 1 }

	AxsStaticIpv6GatewayEntry ::=
		SEQUENCE {
		    axsStaticIpv6Ifindex	INTEGER,
		    axsStaticIpv6GatewayAddr	Ipv6Address,
		    axsStaticIpv6GatewayState	INTEGER
		}
axsStaticIpv6Ifindex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The ifIndex ralated static gateway address."
	::= { axsStaticIpv6GatewayEntry 1 }
			
axsStaticIpv6GatewayAddr OBJECT-TYPE
	SYNTAX  Ipv6Address
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The static route gateway address."
	::= { axsStaticIpv6GatewayEntry 2 }
	
axsStaticIpv6GatewayState OBJECT-TYPE
	SYNTAX  INTEGER {
                    reachable(1),
                    unreachable(2)
                }
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The state of static route gateway."
	::= { axsStaticIpv6GatewayEntry 3 }	
		
--  axsLogin

axsLoginName OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Log in user name."
	::= { axsLogin 1 }

axsLoginTime OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Date, time and time zone of user log in.
                 Format : YYYY/MM/DD hh:mm:ss XXXXXX(time zone)
		 Time zone format :
		   JST    : JST
                   GMT+09 : GMT + 09 hours
                   GMT+10 : GMT + 10 hours"
	::= { axsLogin 2 }

axsLogoutTime OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Date, time and time zone of user log out.
		Format : YYYY/MM/DD hh:mm:ss XXXXXX(time zone)
		Time zone format :
		  JST    : JST
		  GMT+09 : GMT + 09 hours
		  GMT+10 : GMT + 10 hours"
	::= { axsLogin 3 }

axsLoginFailureTime OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Date, time and time zone of user log in failure.
		Format : YYYY/MM/DD hh:mm:ss XXXXXX(time zone)
		Time zone format :
		  JST    : JST
		  GMT+09 : GMT + 09 hours
		  GMT+10 : GMT + 10 hours"
	::= { axsLogin 4 }

axsLoginLocation OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Connection information of log in user.
		The status will be 'console' or 'aux'.
		If other, displays 'IPADDRESS(APLLICATION)'.
		ex. '192.168.11.1(telnet)'"
	::= { axsLogin 5 }

axsLoginLine OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Terminal information of log in user.
		The status will be 'console' or 'aux'.
		If other, displays 'TERMINAL(APLLICATION)'.
		ex. 'tty/1(telnet)'"
	::= { axsLogin 6 }

axsLogoutStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		error(1),
		success(2),
		timeout(3),
		disconnect(4),
		force(5)
	      }
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Log out factor.
		 error(1)      : log out due to none of bellow
		 success(2)    : log out due to command
		 timeout(3)    : log out due to 'auto-logout'
		 disconnect(4) : log out due to line disconnection
		 force(5)      : log out due to other user's command"
	::= { axsLogin 7 }

--  axsBootManagement group

axsBootReason  OBJECT-TYPE
	SYNTAX  INTEGER {
		power-on(1),
		reload(2),
		system-fault(3),
		system-stall(4),
		reset(5),
		fail-over(6),
		default-restart(7)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Reason of system start."
	::= { axsBootManagement 1 }

--  axslldp group
--  axslldpConfiguration group

axslldpMessageTxInterval OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"LDPDU transmitting interval"
	::= { axslldpConfiguration 1 }

axslldpMessageTxHoldMultiplier OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Time coefficient for contiguity equipment to hold about the LLDP frame which this equipment transmitted"
	::= { axslldpConfiguration 2 }

axslldpPortConfigTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxslldpPortConfigEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table about LDPDU transmission"
	::= { axslldpConfiguration 6 }

axslldpPortConfigEntry OBJECT-TYPE
	SYNTAX  AxslldpPortConfigEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry about LDPDU transmission"
    INDEX { axslldpPortConfigPortNum }
	::= { axslldpPortConfigTable 1 }

	AxslldpPortConfigEntry ::=
		SEQUENCE {
		    axslldpPortConfigPortNum		INTEGER,
		    axslldpPortConfigAdminStatus		INTEGER,
		    axslldpPortConfigTLVsTxEnable	BITS,
		    axslldpPortConfigRowStatus		RowStatus
		}

axslldpPortConfigPortNum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Port discernment index"
	::= {axslldpPortConfigEntry 2 }

axslldpPortConfigAdminStatus OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The port state of this equipment about transmission and reception of LDPDU"
	::= {axslldpPortConfigEntry 3 }

axslldpPortConfigTLVsTxEnable OBJECT-TYPE
	SYNTAX  BITS{
                  portDesc(4),
                  sysName(5),
                  sysDesc(6),
                  sysCap(7)
                }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The TLV state about the port concerned which can be transmitted"
	::= {axslldpPortConfigEntry 4 }

axslldpPortConfigRowStatus OBJECT-TYPE
	SYNTAX  RowStatus
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The state of this entry"
	::= {axslldpPortConfigEntry 5 }

-- axslldpStats group

axslldpStatsTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxslldpStatsEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table about LLDP statistics information"
	::= { axslldpStats 1 }

axslldpStatsEntry OBJECT-TYPE
	SYNTAX  AxslldpStatsEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The Entry about LLDP statistics information"
    INDEX { axslldpStatsPortNum }
	::= { axslldpStatsTable 1 }

	AxslldpStatsEntry ::=
		SEQUENCE {
		    axslldpStatsPortNum			INTEGER,
		    axslldpStatsOperStatus		INTEGER,
		    axslldpStatsFramesInErrors		Counter,
		    axslldpStatsFramesInTotal		Counter,
		    axslldpStatsFramesOutTotal		Counter,
		    axslldpStatsTLVsInErrors		Counter,
		    axslldpStatsTLVsDiscardedTotal	Counter
		}

axslldpStatsPortNum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Port discernment index"
	::= {axslldpStatsEntry 2 }

axslldpStatsOperStatus OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The employment state about the port concerned"
	::= {axslldpStatsEntry 3 }

axslldpStatsFramesInErrors OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of inaccurate LDPDU reception about the port concerned"
	::= {axslldpStatsEntry 4 }

axslldpStatsFramesInTotal OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of LDPDU reception about the port concerned"
	::= {axslldpStatsEntry 5 }

axslldpStatsFramesOutTotal OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total number of LDPDU transmission about the port concerned"
	::= {axslldpStatsEntry 6 }

axslldpStatsTLVsInErrors OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of inaccurate TLV reception about the port concerned"
	::= {axslldpStatsEntry 7 }

axslldpStatsTLVsDiscardedTotal OBJECT-TYPE
	SYNTAX  Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The total abandonment TLV number about the port concerned"
	::= {axslldpStatsEntry 8 }

-- axslldpLocalSystemData group

axslldpLocChassisType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The chassis type about this equipment"
	::= {axslldpLocalSystemData 1 }

axslldpLocChassisId OBJECT-TYPE
	SYNTAX  OCTET STRING 
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The chassis ID about this equipment"
	::= {axslldpLocalSystemData 2 }

axslldpLocSysName OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The System Name about this equipment"
	::= {axslldpLocalSystemData 3 }

axslldpLocSysDesc OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"System information about this equipment"
	::= {axslldpLocalSystemData 4 }

axslldpLocPortTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxslldpLocPortEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table about the port of this equipment"
	::= { axslldpLocalSystemData 7 }

axslldpLocPortEntry OBJECT-TYPE
	SYNTAX  AxslldpLocPortEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry about the port of this equipment"
    INDEX { axslldpLocPortNum }
	::= { axslldpLocPortTable 1 }

	AxslldpLocPortEntry ::=
		SEQUENCE {
		    axslldpLocPortNum		INTEGER,
		    axslldpLocPortType		INTEGER,
		    axslldpLocPortId		OCTET STRING,
		    axslldpLocPortDesc		OCTET STRING
		}

axslldpLocPortNum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Port discernment index"
	::= {axslldpLocPortEntry 1 }

axslldpLocPortType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The port type about the port concerned of this equipment"
	::= {axslldpLocPortEntry 2 }

axslldpLocPortId OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The port ID about the port concerned of this equipment"
	::= {axslldpLocPortEntry 3 }

axslldpLocPortDesc OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Port information about the port concerned of this equipment"
	::= {axslldpLocPortEntry 4 }

-- axslldpRemoteSystemData group

axslldpRemTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxslldpRemEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table about contiguity equipment"
	::= { axslldpRemoteSystemData 1 }

axslldpRemEntry OBJECT-TYPE
	SYNTAX  AxslldpRemEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry about contiguity equipment"
    INDEX { axslldpRemLocalPortNum,axslldpRemIndex }
	::= { axslldpRemTable 1 }

	AxslldpRemEntry ::=
		SEQUENCE {
		    axslldpRemLocalPortNum		INTEGER,
		    axslldpRemIndex			INTEGER,
		    axslldpRemRemoteChassisType		INTEGER,
		    axslldpRemRemoteChassis		OCTET STRING,
		    axslldpRemRemotePortType		INTEGER,
		    axslldpRemRemotePort			OCTET STRING,
		    axslldpRemPortDesc			OCTET STRING,
		    axslldpRemSysName			OCTET STRING,
		    axslldpRemSysDesc			OCTET STRING
		}

axslldpRemLocalPortNum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The discernment index of the port of this equipment which received the information about contiguity equipment"
	::= {axslldpRemEntry 2 }

axslldpRemIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The index about contiguity equipment"
	::= {axslldpRemEntry 3 }

axslldpRemRemoteChassisType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The chassis type about contiguity equipment"
	::= {axslldpRemEntry 4 }

axslldpRemRemoteChassis OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The chassis ID about contiguity equipment"
	::= {axslldpRemEntry 5 }

axslldpRemRemotePortType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The port type about the port concerned of contiguity equipment"
	::= {axslldpRemEntry 6 }

axslldpRemRemotePort OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The port ID about the port concerned of contiguity equipment"
	::= {axslldpRemEntry 7 }

axslldpRemPortDesc OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Information about the port concerned of contiguity equipment"
	::= {axslldpRemEntry 8 }

axslldpRemSysName OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The system name about contiguity equipment"
	::= {axslldpRemEntry 9 }

axslldpRemSysDesc OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"System information about contiguity equipment"
	::= {axslldpRemEntry 10 }

axslldpRemOriginInfoTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AxslldpRemOriginInfoEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table about original with AlaxalA networks TLV of contiguity equipment"
	::= { axslldpRemoteOriginInfoData 1 }

axslldpRemOriginInfoEntry OBJECT-TYPE
	SYNTAX  AxslldpRemOriginInfoEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry about original with AlaxalA networks TLV of contiguity equipment"
    INDEX { axslldpRemOriginInfoPortNum,axslldpRemOriginInfoIndex }
	::= { axslldpRemOriginInfoTable 1 }

	AxslldpRemOriginInfoEntry ::=
		SEQUENCE {
		    axslldpRemOriginInfoPortNum		INTEGER,
		    axslldpRemOriginInfoIndex		INTEGER,
		    axslldpRemOriginInfoLowerVlanList	OCTET STRING,
		    axslldpRemOriginInfoHigherVlanList	OCTET STRING,
		    axslldpRemOriginInfoIPv4Address	OCTET STRING,
		    axslldpRemOriginInfoIPv4PortType	INTEGER,
		    axslldpRemOriginInfoIPv4VlanId	INTEGER,
		    axslldpRemOriginInfoIPv6Address	OCTET STRING,
		    axslldpRemOriginInfoIPv6PortType	INTEGER,
		    axslldpRemOriginInfoIPv6VlanId	INTEGER
		}

axslldpRemOriginInfoPortNum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The discernment index of the port of this equipment which received the information about contiguity equipment."
	::= {axslldpRemOriginInfoEntry 1 }

axslldpRemOriginInfoIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The index about contiguity equipment"
	::= {axslldpRemOriginInfoEntry 2 }

axslldpRemOriginInfoLowerVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"What expressed effective VLAN ID by the bit map by VLAN 1-2047 in the port concerned of contiguity equipment.
		 (The first bit (27 bits of the 0th byte) shows the presence of the untagged definition, and, hereafter,
		 shows effective/invalidity of VLAN 1-2047)"
	::= {axslldpRemOriginInfoEntry 3 }

axslldpRemOriginInfoHigherVlanList OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"What expressed effective VLAN ID by the bit map by VLAN 2048-4095 in the port concerned of contiguity equipment.
		(Effective/invalidity of VLAN 2048-4095 is sequentially shown from the first bit (27 bits of the 0th byte))" 
	::= {axslldpRemOriginInfoEntry 4 }

axslldpRemOriginInfoIPv4Address OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"IPv4 address given to the port concerned of contiguity equipment"
	::= {axslldpRemOriginInfoEntry 5 }

axslldpRemOriginInfoIPv4PortType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Port classification of the port of contiguity equipment concerned"
	::= {axslldpRemOriginInfoEntry 6 }

axslldpRemOriginInfoIPv4VlanId OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The smallest thing among VLAN ID to which IPv4 address is given"
	::= {axslldpRemOriginInfoEntry 7 }

axslldpRemOriginInfoIPv6Address OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IPv6 address given to the port concerned of contiguity equipment"
	::= {axslldpRemOriginInfoEntry 8 }

axslldpRemOriginInfoIPv6PortType OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Port classification of the port of contiguity equipment concerned"
	::= {axslldpRemOriginInfoEntry 9 }

axslldpRemOriginInfoIPv6VlanId OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The smallest thing among VLAN ID to which the IPv6 address is given"
	::= {axslldpRemOriginInfoEntry 10 }

-- ax7800sSwitch group

ax7800sModelType OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
                ax7804s-ac(100),
                ax7804s-dc(101),
                ax7808s-ac(102),
                ax7808s-dc(103),
                ax7816s-dc(104),
                ax7816s-ac(105)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Model type of this system."
	::= { ax7800sSwitch 1 }

--ax7800sSoftware OBJECT-TYPE
--	SYNTAX  INTEGER
--	ACCESS  not-accessible
--	STATUS  mandatory
--	DESCRIPTION
--		"Software information of this system."
--	::= { ax7800sSwitch 2 }

ax7800sSoftwareName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Software name of this system."
	::= { ax7800sSoftware 1 }

ax7800sSoftwareAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"System software abbreviation."
	::= { ax7800sSoftware 2 }

ax7800sSoftwareVersion OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"System software version."
	::= { ax7800sSoftware 3 }

--ax7800sSystemMsg OBJECT-TYPE
--	SYNTAX  INTEGER
--	ACCESS  not-accessible
--	STATUS  mandatory
--	DESCRIPTION
--		"System messege group."
--	::= { ax7800sSwitch 3 }

ax7800sSystemMsgText OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..256))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The text of the system log message.For information about this code,
		see:  Operator's Manual. "
	::= { ax7800sSystemMsg 1 }

ax7800sSystemMsgType OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (1))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The event type. For information about this code, see:  Operator's Manual."
	::= { ax7800sSystemMsg 2 }

ax7800sSystemMsgTimeStamp OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (14))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The time that event occured. And that is expressed as type of
		MM/DD hh:mm:ss
			MM:month(01-12)
			DD:day(01-31)
			hh:hour(00-23)
			mm:minute(00-59)
			ss:second(00-59)
		Insert space between DD and hh."
	::= { ax7800sSystemMsg 3 }

ax7800sSystemMsgLevel OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (1))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The newest system message log level.For information about this code,
		see:  Operator's Manual. "
	::= { ax7800sSystemMsg 4 }

ax7800sSystemMsgEventPoint OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..8))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The code of part that system message error occured. For information
		about this code,see:  Operator's Manual. "
	::= { ax7800sSystemMsg 5 }

ax7800sSystemMsgEventInterfaceID OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..40))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Interface identification of system messages. For information
		about this code,see:  Operator's Manual."
	::= { ax7800sSystemMsg 6 }

ax7800sSystemMsgEventCode OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (4))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Event kind code of system messages. For information about this code,
		see:  Operator's Manual. "
	::= { ax7800sSystemMsg 7 }

ax7800sSystemMsgAdditionalCode OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (6))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Additional code of system messages. For information about this code,
		see:  Operator's Manual. "
	::= { ax7800sSystemMsg 8 }

--ax7800sSnmpAgent OBJECT-TYPE
--	SYNTAX  INTEGER
--	ACCESS  not-accessible
--	STATUS  mandatory
--	DESCRIPTION
--		"Related information of SNMP agent."
--	::= { ax7800sSwitch 4 }

ax7800sSnmpSendReceiveSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"SNMP packet data size in Manager-to-Agent communication. The value is
		displayed in bytes."
	::= { ax7800sSnmpAgent 1 }

ax7800sSnmpReceiveDelay OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A recommendable interval to receive packets from Manager.The value is
		displayed in milliseconds."
	::= { ax7800sSnmpAgent 2 }

ax7800sSnmpContinuousSend OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of times that is recommendable continuous transmission
		packets."
	::= { ax7800sSnmpAgent 3 }

ax7800sSnmpObjectMaxNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Max number of objects that contain SNMP packet."
	::= { ax7800sSnmpAgent 4 }

--ax7800sSerialNumber OBJECT-TYPE
--        SYNTAX  DisplayString (SIZE (0..30))
--	ACCESS  read-only
--        STATUS  mandatory
--        DESCRIPTION
--                "Management information (SerialNumber) of RMP2-CARD."
--        ::= { ax7800sSwitch 5 }

ax7800sLicenseNumber OBJECT-TYPE
        SYNTAX  INTEGER
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The number of the configured license serial numbers."
        ::= { ax7800sLicense 1 }

ax7800sLicenseTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sLicenseTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table containing the license information."
	::= { ax7800sLicense 2 }

ax7800sLicenseEntry OBJECT-TYPE
	SYNTAX  Ax7800sLicenseTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry of license information."
	INDEX   { ax7800sLicenseIndex }
	::= { ax7800sLicenseTable 1 }

	Ax7800sLicenseTableEntry ::=
		SEQUENCE {
		  ax7800sLicenseIndex
			INTEGER,
		  ax7800sLicenseSerialNumber
			DisplayString,
		  ax7800sLicenseOptionNumber
			INTEGER
                }

ax7800sLicenseIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The unique index number given for each serial number. The number is from 1 to ax7800sLicenseNumber."
	::= { ax7800sLicenseEntry 1 }

ax7800sLicenseSerialNumber OBJECT-TYPE
	SYNTAX  DisplayString 
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The serial number."
	::= { ax7800sLicenseEntry 2 }

ax7800sLicenseOptionNumber OBJECT-TYPE
	SYNTAX  INTEGER 
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of option licenses associated with the serial number."
	::= { ax7800sLicenseEntry 3 }

ax7800sLicenseOptionTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sLicenseOptionTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table containing option licenses information associated with the serial number."
	::= { ax7800sLicense 3 }

ax7800sLicenseOptionEntry OBJECT-TYPE
	SYNTAX  Ax7800sLicenseOptionTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry of the option license information associated with the serial number."
	INDEX   { ax7800sLicenseOptionIndex,ax7800sLicenseOptionNumberIndex }
	::= { ax7800sLicenseOptionTable 1 }

	Ax7800sLicenseOptionTableEntry ::=
		SEQUENCE {
		  ax7800sLicenseOptionIndex
			INTEGER,
		  ax7800sLicenseOptionNumberIndex
			INTEGER,
		  ax7800sLicenseOptionSoftwareName
			DisplayString,
		  ax7800sLicenseOptionSoftwareAbbreviation
			DisplayString
                }

ax7800sLicenseOptionIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The unique index number given for each serial number. The same number as ax7800sLicenseIndex."
	::= { ax7800sLicenseOptionEntry 1 }

ax7800sLicenseOptionNumberIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The unique index number of option licenses information which is given for each serial number. The number is from 1 to ax7800sLicenseNumber."
	::= { ax7800sLicenseOptionEntry 2 }

ax7800sLicenseOptionSoftwareName OBJECT-TYPE
	SYNTAX  DisplayString 
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The software model name of the option license information associated with the serial number."
	::= { ax7800sLicenseOptionEntry 3 }

ax7800sLicenseOptionSoftwareAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString 
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The software abbreviated name of the option license information associated with the serial number. "
	::= { ax7800sLicenseOptionEntry 4 }

-- ax7800sDevice group

ax7800sChassisMaxNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Max number of cluster chassis that can connect to this router."
	::= { ax7800sChassis 1 }


ax7800sChassisTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sChassisTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing chassis information."
	::= { ax7800sChassis 2 }

ax7800sChassisEntry OBJECT-TYPE
	SYNTAX  Ax7800sChassisTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing specific chassis."
	INDEX   { ax7800sChassisIndex }
	::= { ax7800sChassisTable 1 }

	Ax7800sChassisTableEntry ::=
		SEQUENCE {
		  ax7800sChassisIndex
			INTEGER,
		  ax7800sChassisType
			INTEGER,
		  ax7800sChassisStatus
			INTEGER,
		  ax7800sBcuBoardDuplexMode
			INTEGER,
		  ax7800sPowerUnitNumber
			INTEGER,
		  ax7800sFanNumber
			INTEGER,
		  ax7800sCifNumber
			INTEGER,
		  ax7800sBcuBoardNumber
			INTEGER,
		  ax7800sPsuBoardNumber
			INTEGER,
		  ax7800sNifBoardNumber
			INTEGER
		}

ax7800sChassisIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A number to specify ax7800sChassisEntry."
	::= { ax7800sChassisEntry 1 }

ax7800sChassisType OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
                ax7804s-ac(100),
                ax7804s-dc(101),
                ax7808s-ac(102),
                ax7808s-dc(103),
                ax7816s-dc(104),
                ax7816s-ac(105)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Chassis type of this system."
	::= { ax7800sChassisEntry 2 }

ax7800sChassisStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		up(2)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Current status of this chassis."
	::= { ax7800sChassisEntry 3 }

ax7800sBcuBoardDuplexMode OBJECT-TYPE
	SYNTAX  INTEGER {
		rm-Simplex-model(1),
		rm-Duplex-model(2)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Duplex mode of BCU Board."
	::= { ax7800sChassisEntry 4 }

ax7800sPowerUnitNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of maximum power switches that this router can connect its."
	::= { ax7800sChassisEntry 5 }

ax7800sFanNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The maximum number of fans that can connect to this chassis."
	::= { ax7800sChassisEntry 6 }

ax7800sCifNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of cluster interfaces that can connect to this chassis."
	::= { ax7800sChassisEntry 7 }

ax7800sBcuBoardNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of BCU boards that can connect to
		this chassis."
	::= { ax7800sChassisEntry 8 }

ax7800sPsuBoardNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of Psu boards that can connect to
		this chassis."
	::= { ax7800sChassisEntry 9 }

ax7800sNifBoardNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of NIF(Network InterFace) boards that can connect to
		this chassis."
	::= { ax7800sChassisEntry 10 }

ax7800sPowerUnitTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sPowerUnitTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing power unit information."
	::= { ax7800sChassis 3 }

ax7800sPowerUnitEntry OBJECT-TYPE
	SYNTAX  Ax7800sPowerUnitTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing power unit information."
	INDEX   { ax7800sChassisIndex,ax7800sPowerUnitIndex }
	::= { ax7800sPowerUnitTable 1 }

	Ax7800sPowerUnitTableEntry ::=
		SEQUENCE {
		  ax7800sPowerUnitIndex
			INTEGER,
		  ax7800sPowerConnectStatus
			INTEGER,
		  ax7800sPowerSupplyStatus
			INTEGER
		}

ax7800sPowerUnitIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A number to position of the power units.The value from 1
		to ax7800sPowerUnitNumber."
	::= { ax7800sPowerUnitEntry 1 }
ax7800sPowerConnectStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		connected(2),
		disconnected(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The current connection status of the power unit."
	::= { ax7800sPowerUnitEntry 2 }

ax7800sPowerSupplyStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		ok(2),
		fault(4)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of power supply. The value is -1 when Power Supply is disconnected."
	::= { ax7800sPowerUnitEntry 3 }


ax7800sFanTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sFanTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing fan information."
	::= { ax7800sChassis 4 }

ax7800sFanEntry OBJECT-TYPE
	SYNTAX  Ax7800sFanTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"This entry containing information for a fan."
	INDEX   { ax7800sChassisIndex,ax7800sFanIndex }
	::= { ax7800sFanTable 1 }

	Ax7800sFanTableEntry ::=
		SEQUENCE {
		  ax7800sFanIndex
			INTEGER,
		  ax7800sFanStatus
			INTEGER
		}

ax7800sFanIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Index to indicate position of fans."
	::= { ax7800sFanEntry 1 }

ax7800sFanStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		ok(2),
		under-highspeed-rotation(3),
		fault(4)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of fans."
	::= { ax7800sFanEntry 2 }

ax7800sBcuBoardTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sBcuBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing BCU boards information."
	::= { ax7800sBcuBoard 1 }

ax7800sBcuBoardEntry OBJECT-TYPE
	SYNTAX  Ax7800sBcuBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing BCU boards about specific
		chassis."
	INDEX   { ax7800sChassisIndex,ax7800sBcuBoardIndex }
	::= { ax7800sBcuBoardTable 1 }

	Ax7800sBcuBoardTableEntry ::=
		SEQUENCE {
		  ax7800sBcuBoardIndex
			INTEGER,
		  ax7800sBcuIoBoardType
			INTEGER,
		  ax7800sBcuCpuBoardType
			INTEGER,
		  ax7800sBcuOperStatus
			INTEGER,
		  ax7800sBcuOperModeStatus
			INTEGER,
		  ax7800sBcuActiveLedStatus
			INTEGER,
		  ax7800sBcuReadyLedStatus
			INTEGER,
		  ax7800sBcuAlarmLedStatus
			INTEGER,
		  ax7800sBcuErrorLedStatus
			INTEGER,
		  ax7800sBcuEmaLedStatus
			INTEGER,
		  ax7800sBcuRmEthernetStatus
			INTEGER,
		  ax7800sBcuAtaCardNumber
			INTEGER,
		  ax7800sBcuAtaBootDev
			INTEGER,
		  ax7800sBcuBoardName
			DisplayString,
		  ax7800sBcuBoardAbbreviation
			DisplayString,
		  ax7800sBcuIoBoardProductCode
			INTEGER,
		  ax7800sBcuCpuBoardProductCode
			INTEGER,
		  ax7800sBcuRmCpuName
			DisplayString,
		  ax7800sBcuRmCpuClock
			INTEGER,
		  ax7800sBcuRmMemoryTotalSize
			INTEGER,
		  ax7800sBcuRmMemoryUsedSize
			INTEGER,
		  ax7800sBcuRmMemoryFreeSize
			INTEGER,
		  ax7800sBcuRmRomVersion
			DisplayString,
		  ax7800sBcuRmCpuLoad1m
			INTEGER,
		  ax7800sBcuTemperatureStatusNumber
			INTEGER,
		  ax7800sBcuCpOperStatus
			INTEGER,
		  ax7800sBcuCpCpuName
			DisplayString,
		  ax7800sBcuCpCpuClock
			INTEGER,
		  ax7800sBcuCpMemoryTotalSize
			INTEGER,
		  ax7800sBcuCpCpuLoad1m 
			INTEGER,
		  ax7800sBcuSerialNumber 
			DisplayString,
		  ax7800sBcuVoltage150 
			INTEGER,
		  ax7800sBcuVoltage180 
			INTEGER,
		  ax7800sBcuVoltage250 
			INTEGER,
		  ax7800sBcuVoltage330 
			INTEGER,
		  ax7800sBcuVoltage500 
			INTEGER,
		  ax7800sBcuVoltage500 
			INTEGER,
		  ax7800sBcuVoltage130 
			INTEGER,
		  ax7800sBcuPbmVoltage105 
			INTEGER,
		  ax7800sBcuPbmVoltage120 
			INTEGER,
		  ax7800sBcuPbmCpuCoreVoltage 
			INTEGER,
		  ax7800sBcuPbmVoltage150 
			INTEGER,
		  ax7800sBcuPbmVoltage180 
			INTEGER
		}

ax7800sBcuBoardIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Position information of the BCU slot. The value is from 1 to
		ax7800sBcuBoardCardNumber."
	::= { ax7800sBcuBoardEntry  1 }

ax7800sBcuIoBoardType OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		ax7804s-BCU-SH8MS-IO(8),
                ax7804s-BCU-SH8MS2-IO(9),
                ax7804s-BCU-SM1GS3-IO(10),
                ax7808s-BCU-SM8MS-IO(264),
                ax7808s-BCU-SM8MS2-IO(265),
                ax7808s-BCU-SM1GS3-IO(266),
                ax7816s-BCU-SL8MS-IO(520),
                ax7816s-BCU-SL8MS2-IO(521),
                ax7816s-BCU-SL1GS3-IO(522)
                }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"BCU IO board ID.
		The value is -1 when BCU board is disconnected."
	::= { ax7800sBcuBoardEntry  2 }

ax7800sBcuCpuBoardType OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
                bcu-bcu2-CPU(768),
                bcu3-CPU(1280)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of BCU board ID.
		The value is -1 when BCU board is disconnected."
	::= { ax7800sBcuBoardEntry 3 }

ax7800sBcuOperStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		up(2),
		down(4),
		closed(5),
		disconnect(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of LED on BCU board. The value is 32 when BCU board is
		disconnected."
	::= { ax7800sBcuBoardEntry 4 }

ax7800sBcuOperModeStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		active(2),
		standby(3),
		do-not-match-with-configure-mode(4),
		do-not-match-with-software-version(5),
		down(6),
		mentenance(7)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Operate status on BCU board. The value is -1 when BCU board is
		disconnected."
	::= { ax7800sBcuBoardEntry 5 }

ax7800sBcuActiveLedStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		green-light-on(2),
		light-off(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of ACTIVE LED on BCU board. The value is -1 when BCU board is
		disconnected or LED status is unknown."
	::= { ax7800sBcuBoardEntry 6 }

ax7800sBcuReadyLedStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		green-light-on(2),
		light-off(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of READY LED on BCU board. The value is -1 when BCU board is
		disconnected or LED status is unknown."
	::= { ax7800sBcuBoardEntry 7 }

ax7800sBcuAlarmLedStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		red-light-on(4),
		light-off(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of ALARM LED on BCU board. The value is -1 when BCU board is
		disconnected or LED status is unknown."
	::= { ax7800sBcuBoardEntry 8 }

ax7800sBcuErrorLedStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		yellow-light-on(5),
		light-off(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of LED ERROR on BCU board. The value is -1 when BCU board is
		disconnected or LED status is unknown."
	::= { ax7800sBcuBoardEntry 9 }

ax7800sBcuEmaLedStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		yellow-light-on(5),
		light-off(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of LED EMA READY on BCU board. The value is -1 when BCU board is
		disconnected or LED status is unknown."
	::= { ax7800sBcuBoardEntry 10 }

ax7800sBcuRmEthernetStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		active(2),
		down(4),
		nothing-configuration-or-locked(6),
		maintenance(7),
		test(9),
		unused(10),
		standby(12)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Operaion status on BCU ethernet. The value is -1 when BCU board is
		disconnected."
	::= { ax7800sBcuBoardEntry 12 }

ax7800sBcuAtaCardNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of slots in ATA card. The value is 0 when BCU board is
		disconnected."
	::= { ax7800sBcuBoardEntry 13 }

ax7800sBcuAtaBootDev OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		ata-slot0(1),
		ata-slot1(2)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of ATA slots number when router booted. The value is -1
		when BCU board is disconnected."
	::= { ax7800sBcuBoardEntry 14 }

ax7800sBcuBoardName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The product name of RM-IO board.When BCU board is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax7800sBcuBoardEntry 15 }

ax7800sBcuBoardAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The abbreviation name of RM-IO board.When BCU board is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax7800sBcuBoardEntry 16 }

ax7800sBcuIoBoardProductCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The manufacturing management number of BCU-IO board.The value is
		-1 when BCU board is disconnected."
	::= { ax7800sBcuBoardEntry 17 }

ax7800sBcuCpuBoardProductCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The manufacturing management number of BCU-CPU board.The value is
		-1 when BCU board is disconnected."
	::= { ax7800sBcuBoardEntry 18 }

ax7800sBcuRmCpuName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The CPU name of board that load BCU.When BCU board is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax7800sBcuBoardEntry 19 }

ax7800sBcuRmCpuClock OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The CPU clock of board that load BCU. The value is displayed in
		mega-hertz(MHz). The value is -1 when BCU board is disconnected."
	::= { ax7800sBcuBoardEntry 20 }

ax7800sBcuRmMemoryTotalSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Total memory sizes of BCU. The value is displayed in kilobyte(KB).
		The value is -1 when BCU board is disconnected."
	::= { ax7800sBcuBoardEntry 21 }

ax7800sBcuRmMemoryUsedSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Using memory sizes of BCU. The value is displayed in kilobyte(KB).
		The value is -1 when BCU board is disconnected."
	::= { ax7800sBcuBoardEntry 22 }

ax7800sBcuRmMemoryFreeSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Free memory sizes of BCU. The value is displayed in kilobyte(KB).
		The value is -1 when BCU board is disconnected."
	::= { ax7800sBcuBoardEntry 23 }


ax7800sBcuRmRomVersion OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..128))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The version of Rom on BCU board. When BCU board is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax7800sBcuBoardEntry 24 }

ax7800sBcuRmCpuLoad1m OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The average, over the last minute, of the percentage of time that
		this processor was utilized to processing and transfer data.
		The value is 0 when BCU board is standby or disconnected."
	::= { ax7800sBcuBoardEntry 25 }

ax7800sBcuTemperatureStatusNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The maximum number of ax7800sTemperatureStatus that can be measurement at this chassis.
		The value is 0 when BCU board doesn't support the temperature measurement function or BCU board is disconnected"
	::= { ax7800sBcuBoardEntry 26 }

ax7800sBcuCpOperStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		active(2),
		initialization(3),
		down(4),
		disconnect(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The state of CP. other(1),Under Operation(2),Initializing(3),Fault(4),Standby system BCU not implemented(32)"
	::= { ax7800sBcuBoardEntry 27 }

ax7800sBcuCpCpuName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The character sequence of the CPU name whose number is a maximum of 16.(ex : MIPS RM5261).Return length 0 if standby system BCR not implemented. "
	::= { ax7800sBcuBoardEntry 28 }

ax7800sBcuCpCpuClock OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of a CP CPU clock. unit of measure: MHz (ex:250), it is -1 if standby system BCU not implemented."
	::= { ax7800sBcuBoardEntry 29 }
	
ax7800sBcuCpMemoryTotalSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the main memory size of CP. Unit of measure : KByte,(ex : 32768)"
	::= { ax7800sBcuBoardEntry 30 }
	
ax7800sBcuCpCpuLoad1m OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value(1-100) of CP CPU activity ratio for a minute.If the state of CP is not Under Operation, return 0. If standby system BCU is not implemented return 0."
	::= { ax7800sBcuBoardEntry 33 }
	
ax7800sBcuSerialNumber OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..30))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The character string of the card management information of BCU package whose number is a maximum of 30. Its length is zero if not implemented or closed."
	::= { ax7800sBcuBoardEntry 34 }
	
ax7800sBcuVoltage150 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.5V voltage. Unit of measure : 10mV (ex : 148)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 35 }
	
ax7800sBcuVoltage180 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.8V voltage. Unit of measure : 10mV (ex : 183)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 36 }
	
ax7800sBcuVoltage250 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 2.5V voltage. Unit of measure : 10mV (ex : 250)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 37 }
	
ax7800sBcuVoltage330 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 3.3V voltage. Unit of measure : 10mV (ex : 328)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 38 }
	
ax7800sBcuVoltage500 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 5V voltage. Unit of measure : 10mV (ex : 493)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 39 }
	
ax7800sBcuVoltage130 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.3V voltage. Unit of measure : 10mV (ex : 133)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 40 }

ax7800sBcuPbmVoltage105 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.05V voltage in PBM. Unit of measure : 10mV (ex : 102)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 41 }

ax7800sBcuPbmVoltage120 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2V voltage in PBM. Unit of measure : 10mV (ex : 121)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 42 }

ax7800sBcuPbmCpuCoreVoltage OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2-1.3V voltage in PBM. Unit of measure : 10mV (ex : 125)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 43 }

ax7800sBcuPbmVoltage150 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.5V voltage in PBM. Unit of measure : 10mV (ex : 148)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 44 }

ax7800sBcuPbmVoltage180 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.8V voltage in PBM. Unit of measure : 10mV (ex : 183)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax7800sBcuBoardEntry 45 }

ax7800sAtaCardTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sAtaCardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing ATA Card information."
	::= { ax7800sBcuBoard 2 }

ax7800sAtaCardEntry OBJECT-TYPE
	SYNTAX  Ax7800sAtaCardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing ATA Card information."
	INDEX   { ax7800sChassisIndex, ax7800sBcuBoardIndex, ax7800sAtaCardIndex }
	::= { ax7800sAtaCardTable 1 }

	Ax7800sAtaCardTableEntry ::=
		SEQUENCE {
		  ax7800sAtaCardIndex
			INTEGER,
		  ax7800sAtaCardConnection
			INTEGER,
		  ax7800sAtaCardTotalSize
			INTEGER,
		  ax7800sAtaCardUsedSize
			INTEGER,
		  ax7800sAtaCardFreeSize
			INTEGER,
		  ax7800sAtaCardName
			DisplayString,
		  ax7800sAtaCardAbbreviation
			DisplayString,
		  ax7800sAtaCardMountStatus
			INTEGER
		}

ax7800sAtaCardIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Connected position of ATA cards.The value is 1 plus slot number
		that ATA card is inserted.The value is from 1 to ax7800sBcuAtaCardNumber."
	::= { ax7800sAtaCardEntry 1 }

ax7800sAtaCardConnection OBJECT-TYPE
	SYNTAX  INTEGER {
		connect(2),
		disconnect(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Connected status of ATA cards."
	::= { ax7800sAtaCardEntry 2 }

ax7800sAtaCardTotalSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Total capacity of ATA cards.The value is displayed in kilobyte
		(kbyte).And the value is -1 when ATA cards is disconnected."
	::= { ax7800sAtaCardEntry 3 }

ax7800sAtaCardUsedSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Using capacity of ATA cards.The value is displayed in kilobyte
		(kbyte).And the value is -1 when ATA cards is disconnected."
	::= { ax7800sAtaCardEntry 4 }

ax7800sAtaCardFreeSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The rest capacity of ATA card. The value is displayed in kilobyte
		(kbyte). The value is -1 when ATA card is disconnected."
	::= { ax7800sAtaCardEntry 5 }

ax7800sAtaCardName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The product name of ATA card. When the ATA card is unknown,
		this OCTET STRING value is 'unknown'. When ATA card is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax7800sAtaCardEntry 6 }

ax7800sAtaCardAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The kind of ATA card. When ATA card is disconnected,this will be an
		OCTET STRING of zero length."
	::= { ax7800sAtaCardEntry 7 }

ax7800sAtaCardMountStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		unmount(1),
  		mount(2)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The mount state of ATA card. The value is -1 when ATA card is
		disconnected."
	::= { ax7800sAtaCardEntry 8 }

ax7800sTemperatureStatusTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sTemperatureStatusEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table of ambient temperature status maintained by the
		environmental monitor."
	::= { ax7800sBcuBoard 3 }

ax7800sTemperatureStatusEntry OBJECT-TYPE
	SYNTAX  Ax7800sTemperatureStatusEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry in the ambient temperature status table, representing
		the status of the associated testpoint maintained by the
		environmental monitor."
	INDEX  { ax7800sChassisIndex, ax7800sBcuBoardIndex, ax7800sTemperatureStatusIndex }
	::= { ax7800sTemperatureStatusTable 1 }

	Ax7800sTemperatureStatusEntry ::=
		SEQUENCE {
		  ax7800sTemperatureStatusIndex
			INTEGER(0..2147483647),
		  ax7800sTemperatureStatusDescr
			DisplayString,
		  ax7800sTemperatureStatusValue
			INTEGER,
		  ax7800sTemperatureThreshold
			INTEGER,
		  ax7800sTemperatureState
			INTEGER
		}

ax7800sTemperatureStatusIndex OBJECT-TYPE
	SYNTAX  INTEGER(0..2147483647)
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Unique index for the testpoint being instrumented.
		This index is for SNMP purposes only, and has no
		intrinsic meaning."
	::= { ax7800sTemperatureStatusEntry 1 }

ax7800sTemperatureStatusDescr OBJECT-TYPE
	SYNTAX  DisplayString(SIZE(0..32))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Textual description of the testpoint being instrumented.
		This description is a short textual label, suitable as a
		human-sensible identification for the rest of the
		information in the entry."
	::= { ax7800sTemperatureStatusEntry 2 }

ax7800sTemperatureStatusValue OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The current measurement of the testpoint being instrumented."
	::= { ax7800sTemperatureStatusEntry 3 }

ax7800sTemperatureThreshold OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The highest value that the associated instance of the
		object ax7800sTemperatureStatusValue may obtain
		before an emergency shutdown of the managed device is
		initiated."
	::= { ax7800sTemperatureStatusEntry 4 }

ax7800sTemperatureState OBJECT-TYPE
	SYNTAX  INTEGER {
		normal(1),
		caution(2),
		warning(3),
		fatal(4)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The current state of the testpoint being instrumented."
	::= { ax7800sTemperatureStatusEntry 5 }

ax7800sSopTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF Ax7800sSopEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "A table containing SOP information."
        ::= { ax7800sBcuBoard 4 }

ax7800sSopEntry OBJECT-TYPE
        SYNTAX  Ax7800sSopEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "An entry containing SOP information."
        INDEX   { ax7800sChassisIndex, ax7800sBcuBoardIndex }
        ::= { ax7800sSopTable 1 }

        Ax7800sSopEntry ::=
                SEQUENCE {
                  ax7800sSopAlarmLevel
                        DisplayString,
                  ax7800sSopAlarmEventPoint
                        DisplayString,
                  ax7800sSopAlarmEventCode
                        DisplayString,
                  ax7800sSopAlarmEventInterfaceID
                        DisplayString,
                  ax7800sSopAlarmMsgText
                        DisplayString
                }

ax7800sSopAlarmLevel OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Error level displayed on a SOP window. When the BCU does not
                support SOP, this will be an OCTET STRING of zero length.
                For information about this code, see:  Operator's Manual."
        ::= { ax7800sSopEntry 1 }

ax7800sSopAlarmEventPoint OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The code displayed on a SOP window, which stands for a device
                part of the factor of the alarm message. When the BCU does not
                support SOP, this will be an OCTET STRING of zero length.
                For information about this code, see:  Operator's Manual."
        ::= { ax7800sSopEntry 2 }

ax7800sSopAlarmEventCode OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Event kind code of alarm message displayed on a SOP window.
                When the BCU does not support SOP, this will be an OCTET STRING
                of zero length. For information about this code, see:  Operator's
                Manual."
        ::= { ax7800sSopEntry 3 }

ax7800sSopAlarmEventInterfaceID OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Interface identification of alarm messages on a SOP window.
                When the BCU does not support SOP, this will be an OCTET STRING
                of zero length. For information about this code, see:  Operator's
                Manual."
        ::= { ax7800sSopEntry 4 }

ax7800sSopAlarmMsgText OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The text of the alarm message on a SOP window. When the BCU does
                not support SOP, this will be an OCTET STRING of zero length.
                For more information about this code, see:  Operator's Manual."
        ::= { ax7800sSopEntry 5 }
	

ax7800sPsuBoardTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sPpuBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing PSU boards information about
		specific chassis."
	::= { ax7800sPsuBoard 1 }

ax7800sPsuBoardEntry OBJECT-TYPE
	SYNTAX  Ax7800sPpuBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing PSU boards about specific
		chassis."
	INDEX   { ax7800sChassisIndex,ax7800sPsuBoardIndex }
	::= { ax7800sPsuBoardTable 1 }

	Ax7800sPpuBoardTableEntry ::=
		SEQUENCE {
		  ax7800sPsuBoardIndex
			INTEGER,
		  ax7800sPsuBoardType
			INTEGER,
		  ax7800sPsuOperStatus
			INTEGER,
		  ax7800sPsuBoardName
			DisplayString,
		  ax7800sPsuBoardAbbreviation
			DisplayString,
		  ax7800sPsuBoardProductCode
			INTEGER,
		  ax7800sPsuSerialNumber
			DisplayString,
		  ax7800sPsuVoltage120
			INTEGER,
		  ax7800sPsuVoltage150
			INTEGER,
		  ax7800sPsuVoltage180
			INTEGER,
		  ax7800sPsuVoltage250
			INTEGER,
		  ax7800sPsuVoltage330
			INTEGER,
		  ax7800sPsuVoltage500
			INTEGER,
		  ax7800sPsuVoltage120-2
			INTEGER,
		  ax7800sPsuVoltage120-3
			INTEGER,
		  ax7800sPsuVoltage120-4
			INTEGER,
		  ax7800sPsuVoltage120-5
			INTEGER,
		  ax7800sPsuVoltage120-6
			INTEGER,
		  ax7800sPsuVoltage120-7
			INTEGER,
		  ax7800sPsuVoltage120-8
			INTEGER
		}

ax7800sPsuBoardIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Position information of the PSU slots. The value is from 1 to
		ax7800sPsuBoardNumber."
	::= { ax7800sPsuBoardEntry 1 }

ax7800sPsuBoardType OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		psu-1(16384),
		psu-2(16640),
		psu-12(17408),
		psu-33(17664),
		psu-22(18176),
		psu-43(18688),
		psu-53(19712),
		psu-12b(19714),
		s12-1g48s(20480),
		s12-1g48t(20736),
		s22-10g4rx(22016),
		s33-10g4rx(22272)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"PSU boards ID.
        The value is -1 when PSU board is disconnected."
	::= { ax7800sPsuBoardEntry 2 }

ax7800sPsuOperStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		active(2),
		initialization(3),
		down(4),
		closed(5),
		inactive(6),
		disconnect(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Operation stasus of PSU board.(STATUS LED)"
	::= { ax7800sPsuBoardEntry 3 }

ax7800sPsuBoardName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"PSU board name. When PSU board is disconnected, this will be an OCTET
		STRING of zero length."
	::= { ax7800sPsuBoardEntry 4 }

ax7800sPsuBoardAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The abbreviation name of PSU board. When PSU board is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax7800sPsuBoardEntry 5 }

ax7800sPsuBoardProductCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The revision of PSU board. When PSU board is disconnected,
		this will be -1."
	::= { ax7800sPsuBoardEntry 6 }

ax7800sPsuSerialNumber OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..30))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The character string of the card management information of PSU package whose number is a maximum of 30. Its length is zero if not implemented or closed."
	::= { ax7800sPsuBoardEntry 7 }

ax7800sPsuVoltage120 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 148) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 8 }

ax7800sPsuVoltage150 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.5V voltage. Unit of measure : 10mV (ex : 148) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 9 }

ax7800sPsuVoltage180 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.8V voltage. Unit of measure : 10mV (ex : 183) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 10 }

ax7800sPsuVoltage250 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 2.5V voltage. Unit of measure : 10mV (ex : 250) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 11 }

ax7800sPsuVoltage330 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 3.3V voltage. Unit of measure : 10mV (ex : 328) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 12 }

ax7800sPsuVoltage500 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 5V voltage. Unit of measure : 10mV (ex : 493) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 13 }

ax7800sPsuVoltage120-2 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 123) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 14 }

ax7800sPsuVoltage120-3 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 123) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 15 }

ax7800sPsuVoltage120-4 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 123) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 16 }

ax7800sPsuVoltage120-5 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 123) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 17 }

ax7800sPsuVoltage120-6 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 123) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 18 }

ax7800sPsuVoltage120-7 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 123) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 19 }

ax7800sPsuVoltage120-8 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 123) .If PSU is closed or not implemented, return 0."
	::= { ax7800sPsuBoardEntry 20 }

ax7800sNifBoardTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sNifBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing Network Interface cards (NIF) information that
		slot is loaded."
	::= { ax7800sNifBoard 1 }

ax7800sNifBoardEntry OBJECT-TYPE
	SYNTAX  Ax7800sNifBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing NIF information about specific chassis."
        INDEX   { ax7800sChassisIndex,ax7800sNifBoardSlotIndex }
	::= { ax7800sNifBoardTable 1 }

	Ax7800sNifBoardTableEntry ::=
		SEQUENCE {
		  ax7800sNifBoardSlotIndex
			INTEGER,
		  ax7800sNifBoardType
			INTEGER,
		  ax7800sNifBoardOperStatus
			INTEGER,
		  ax7800sNifBoardName
			DisplayString,
		  ax7800sNifBoardAbbreviation
			DisplayString,
		  ax7800sNifBoardProductCode
			INTEGER,
		  ax7800sNifPhysLineNumber
			INTEGER,
                  ax7800sNifSerialNumber
                        DisplayString,
		  ax7800sNifVoltageAM520
			INTEGER,
		  ax7800sNifVoltage150
			INTEGER,
		  ax7800sNifVoltage180
			INTEGER,
		  ax7800sNifVoltageA180
			INTEGER,
		  ax7800sNifVoltage250
			INTEGER,
		  ax7800sNifVoltage330
			INTEGER,
		  ax7800sNifVoltageA330
			INTEGER,
		  ax7800sNifVoltageA500
			INTEGER,
		  ax7800sNifVoltage330S
			INTEGER,
		  ax7800sNifVoltage500S
			INTEGER,
		  ax7800sNifVoltage120
			INTEGER,
		  ax7800sNifVoltageA500-2
			INTEGER,
		  ax7800sNifVoltage150S
			INTEGER
		}

ax7800sNifBoardSlotIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Position information of NIF loading slot. The value is from 1
		to ax7800sNifBoardNumber."
	::= { ax7800sNifBoardEntry 1 }

ax7800sNifBoardType OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		nif-12-port-1000BASE-X-SFP-VRRP(32770),
		nif-6-port-1000BASE-X-GBIC-VRRP(32772),
		nif-12-port-10BASE-T-100BASE-TX-1000BASE-T-VRRP(32778),
		nif-8-port-1000BASE-X-SHAPER(32782),
		nif-4-port-1000BASE-X-SHAPER(32783),
		nif-1-port-10GBASE-ER(32786),
		nif-1-port-10GBASE-R-XFP(32788),
		nif-4-port-10GBASE-R-XFP-PSU22(32789),
		nif-4-port-10GBASE-R-XFP-PSU33(32790),
		nif-1-port-10GBASE-R-XFPA(32792),
		nif-1-port-10GBASE-LW(32801),
		nif-1-port-10GBASE-EW(32802),
		nif-48-port-1000BASE-X-SFP-PSU12(32818),
		nif-48-port-10BASE-T-100BASE-TX-1000BASE-T-PSU12(32819),
		nif-48-port-10BASE-T-100BASE-TX-1000BASE-T(32822),
		nif-8-port-10-100-1000BASE-T-plus-4-port-1000BASE-X-SFP(32823),
		nif-1-port-OC192c-STM-64-POS-2km(40960),
		nif-1-port-OC192c-STM-64-POS-40km(40961),
		nif-4-port-OC48c-STM-16-POS(40976)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Type of connecting package.The value is register value of NIF package.
		The value is -1 when PSU is disconnected or NIF disconnected."
	::= { ax7800sNifBoardEntry 2 }

ax7800sNifBoardOperStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		active(2),
		initialization(3),
		down(4),
		closed(5),
		lock(6),
		disconnect(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Operation status of Network InterFace(NIF) board.(STATUS LED)"
	::= { ax7800sNifBoardEntry 3 }

ax7800sNifBoardName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Network InterFace(NIF) board name. When PSU board or NIF board is
		disconnected,this will be an OCTET STRING of zero length."
	::= { ax7800sNifBoardEntry 4 }

ax7800sNifBoardAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The abbreviation name of Network InterFace(NIF) board. When PSU board
		or NIF board is disconnected, this will be an OCTET STRING of zero
		length."
	::= { ax7800sNifBoardEntry 5 }

ax7800sNifBoardProductCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The product management code of Network InterFace(NIF) board.The value
		is -1 when PSU board or NIF board is disconncted."
	::= { ax7800sNifBoardEntry 6 }

ax7800sNifPhysLineNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of Network InterFace(NIF)'s physical port.The max is 8.
		The value is -1 when value of ax7800sNifCardType is -1 or other(1)."
	::= { ax7800sNifBoardEntry 7 }

ax7800sNifSerialNumber OBJECT-TYPE
        SYNTAX  DisplayString (SIZE (0..30))
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Management information (SerialNumber) of Network InterFace(NIF) package.
                It shows by the character string of 30 characters or less.
                When PRU board responds and things except UP or NIF board is disconnected or closed,
                this will be an OCTET STRING of zero length."
        ::= { ax7800sNifBoardEntry 8 }

ax7800sNifVoltageAM520 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of -5.2V voltage. Unit of measure : 10mV (ex : -512) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 9 }

ax7800sNifVoltage150 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of -1.5V voltage. Unit of measure : 10mV (ex : 148) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 10 }

ax7800sNifVoltage180 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of 1.8V voltage. Unit of measure : 10mV (ex : 183) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 11 }

ax7800sNifVoltageA180 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of analog 1.8V voltage. Unit of measure : 10mV (ex : 183) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 12 }

ax7800sNifVoltage250 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of  analogu 2.5V voltage. Unit of measure : 10mV (ex : 250) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 13 }

ax7800sNifVoltage330 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of  analogu 3.3V voltage. Unit of measure : 10mV (ex : 328) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 14 }

ax7800sNifVoltageA330 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of analog 3.3V voltage. Unit of measure : 10mV (ex : 328) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 15 }

ax7800sNifVoltageA500 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of analog 5V voltage. Unit of measure : 10mV (ex : 493) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 16 }

ax7800sNifVoltage330S OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of 3.3V voltage. Unit of measure : 10mV (ex : 328) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 17 }

ax7800sNifVoltage500S OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of 5V voltage. Unit of measure : 10mV (ex : 493) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 18 }

ax7800sNifVoltage120 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 123) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 19 }

ax7800sNifVoltageA500-2 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of 5V voltage. Unit of measure : 10mV (ex : 498) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 20 }

ax7800sNifVoltage150S OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of 1.5V voltage. Unit of measure : 10mV (ex : 148) .If PSU or NIF is closed or not implemented, return 0."
        ::= { ax7800sNifBoardEntry 21 }

ax7800sPhysLineTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sPhysLineTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing physical port information."
	::= { ax7800sPhysLine 1 }

ax7800sPhysLineEntry OBJECT-TYPE
	SYNTAX  Ax7800sPhysLineTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing physical port."
	INDEX   { ax7800sChassisIndex, ax7800sNifBoardSlotIndex, ax7800sPhysLineIndex }
	::= { ax7800sPhysLineTable 1 }

	Ax7800sPhysLineTableEntry ::=
		SEQUENCE {
		  ax7800sPhysLineIndex
			INTEGER,
		  ax7800sPhysLineConnectorType
			INTEGER,
		  ax7800sPhysLineOperStatus
			INTEGER,
		  ax7800sPhysLineIfIndexNumber
			INTEGER,
		  ax7800sPhysLineTransceiverStatus
		    INTEGER
		}

ax7800sPhysLineIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Physical port number. The value is from 1 to ax7800sNifLineNumber."
	::= { ax7800sPhysLineEntry 1 }

ax7800sPhysLineConnectorType OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		typeOC-48c-STM-16-POS-2km(103),
		typeOC-48c-STM-16-POS-40km(104),
		type1000BASE-LX(301),
		type1000BASE-SX(302),
		type1000BASE-LH(303),
		type1000BASE-LHB(310),
		type10GBASE-SR(401),
		type10GBASE-LR(402),
		type10GBASE-ER(403),
		type10GBASE-ZR(404)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Connector type is connected physical port. The value is 1(other)
		when connector is disconnected or connector type is unknown.When
		displaying in pannel, requests board name of NIF,then will display it.
		The value is -1	when PSU or NIF board is disconnected."
	::= { ax7800sPhysLineEntry 2 }

ax7800sPhysLineOperStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		active(2),
		initialization(3),
		down(4),
		lock(6),
		close(7),
		line-fault(8),
		test(9),
		nothing-configuration(10),
		missing-configuration(11),
		remote-loop-back-test-mode(12)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of physical port. The value is -1 when PSU or NIF board is
		disconnected."
	::= { ax7800sPhysLineEntry 3 }

ax7800sPhysLineIfIndexNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of ifIndex which is included in physical port.The value is -1
		when PSU board or NIF board is disconnected."
	::= { ax7800sPhysLineEntry 4 }

ax7800sPhysLineTransceiverStatus OBJECT-TYPE
	SYNTAX  INTEGER{
				gbic-mounted(10),
				gbic-unmounted(11),
				unsupported-gbic-mounted(12),
				gbic-status-unknown(13),
				sfp-mounted(20),
				sfp-unmounted(21),
				unsupported-sfp-mounted(22),
				sfp-status-unknown(23),
				xfp-mounted(30),
				xfp-unmounted(31),
				unsupported-xfp-mounted(32),
				xfp-status-unknown(33)
			}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Type and status of replaceable transceiver."
	::= { ax7800sPhysLineEntry 5 }
-- 

ax7800sLineIfTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax7800sLineIfTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing physical port correspond to ifIndex."
	::= { ax7800sInterface 1 }

ax7800sLineIfEntry OBJECT-TYPE
	SYNTAX  Ax7800sLineIfTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing ifIndex is assigned to physical port."
	INDEX   { ax7800sChassisIndex, ax7800sNifBoardSlotIndex, ax7800sPhysLineIndex, ax7800sLineIfIndex }
	::= { ax7800sLineIfTable 1 }

	Ax7800sLineIfTableEntry ::=
		SEQUENCE {
		  ax7800sLineIfIndex
			INTEGER,
		  ax7800sIfIndex
			INTEGER,
		  ax7800sIfIpAddress
			IpAddress,
		  ax7800sIfIpv6Address
			OCTET STRING
		}

ax7800sLineIfIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The value of ifIndex to distinguish entry of this table.The value is
		from 1 to ax7800sPhysLineIfIndexNumber."
	::= { ax7800sLineIfEntry 1 }

ax7800sIfIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of ifIndex which is assigned to this physical port.
		The value is 0 when ifIndex is not assigned to this physical port."
	::= { ax7800sLineIfEntry 2 }

ax7800sIfIpAddress OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP address correspond to ifIndex which is assigned to this
		physical port. If IP address is not assigned, it is '0.0.0.0'."
	::= { ax7800sLineIfEntry 3 }

ax7800sIfIpv6Address OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IPv6 address correspond to ifIndex which is assigned to this
		physical port. If IPv6 address is not assigned,
		it is '00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00'."
	::= { ax7800sLineIfEntry 4 }

--
-- ax7800sFdbClearMIB      OBJECT IDENTIFIER ::= { ax7800sOperationCommand 1 }
--

ax7800sFdbClearSet OBJECT-TYPE
	SYNTAX  INTEGER {
                    initialValue(0),
                    processing(1),
                    failure(2),
                    success(3)
                }
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"Fdb clear information. When want to clear fdb, 
		then set value of this MIB as 1."
	::= { ax7800sFdbClearMIB 1 }

ax7800sFdbClearReqTime OBJECT-TYPE
	SYNTAX  TimeTicks
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This object indicates the most recent time that
		received the demand to clear Fdb information.(sysUpTime)"
	::= { ax7800sFdbClearMIB 2 }

ax7800sFdbClearSuccessTime OBJECT-TYPE
	SYNTAX  TimeTicks
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This object indicates the time of the most recent
		 Fdb clearing success.(sysUpTime)"
	::= { ax7800sFdbClearMIB 3 }

-- ax5400sSwitch group

ax5400sModelType OBJECT-TYPE
	SYNTAX  INTEGER {
	      ax5402s(200),
	      ax5404s(201)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Model type of this system."
	::= { ax5400sSwitch 1 }

--ax5400sSoftware OBJECT-TYPE
--	SYNTAX  INTEGER
--	ACCESS  not-accessible
--	STATUS  mandatory
--	DESCRIPTION
--		"Software information of this system."
--	::= { ax5400sSwitch 2 }

ax5400sSoftwareName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Software name of this system."
	::= { ax5400sSoftware 1 }

ax5400sSoftwareAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"System software abbreviation."
	::= { ax5400sSoftware 2 }

ax5400sSoftwareVersion OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"System software version."
	::= { ax5400sSoftware 3 }

--ax5400sSystemMsg OBJECT-TYPE
--	SYNTAX  INTEGER
--	ACCESS  not-accessible
--	STATUS  mandatory
--	DESCRIPTION
--		"System messege group."
--	::= { ax5400sSwitch 3 }

ax5400sSystemMsgText OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..256))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The text of the system log message.For information about this code,
		see:  Operator's Manual. "
	::= { ax5400sSystemMsg 1 }

ax5400sSystemMsgType OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (1))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The event type. For information about this code, see:  Operator's Manual."
	::= { ax5400sSystemMsg 2 }

ax5400sSystemMsgTimeStamp OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (14))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The time that event occured. And that is expressed as type of
		MM/DD hh:mm:ss
			MM:month(01-12)
			DD:day(01-31)
			hh:hour(00-23)
			mm:minute(00-59)
			ss:second(00-59)
		Insert space between DD and hh."
	::= { ax5400sSystemMsg 3 }

ax5400sSystemMsgLevel OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (1))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The newest system message log level.For information about this code,
		see:  Operator's Manual. "
	::= { ax5400sSystemMsg 4 }

ax5400sSystemMsgEventPoint OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..8))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The code of part that system message error occured. For information
		about this code,see:  Operator's Manual. "
	::= { ax5400sSystemMsg 5 }

ax5400sSystemMsgEventInterfaceID OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..40))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Interface identification of system messages. For information
		about this code,see:  Operator's Manual."
	::= { ax5400sSystemMsg 6 }

ax5400sSystemMsgEventCode OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (4))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Event kind code of system messages. For information about this code,
		see:  Operator's Manual. "
	::= { ax5400sSystemMsg 7 }

ax5400sSystemMsgAdditionalCode OBJECT-TYPE
	SYNTAX  OCTET STRING (SIZE (6))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Additional code of system messages. For information about this code,
		see:  Operator's Manual. "
	::= { ax5400sSystemMsg 8 }

--ax5400sSnmpAgent OBJECT-TYPE
--	SYNTAX  INTEGER
--	ACCESS  not-accessible
--	STATUS  mandatory
--	DESCRIPTION
--		"Related information of SNMP agent."
--	::= { ax5400sSwitch 4 }

ax5400sSnmpSendReceiveSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"SNMP packet data size in Manager-to-Agent communication. The value is
		displayed in bytes."
	::= { ax5400sSnmpAgent 1 }

ax5400sSnmpReceiveDelay OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"A recommendable interval to receive packets from Manager.The value is
		displayed in milliseconds."
	::= { ax5400sSnmpAgent 2 }

ax5400sSnmpContinuousSend OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of times that is recommendable continuous transmission
		packets."
	::= { ax5400sSnmpAgent 3 }

ax5400sSnmpObjectMaxNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Max number of objects that contain SNMP packet."
	::= { ax5400sSnmpAgent 4 }

--ax5400sSerialNumber OBJECT-TYPE
--        SYNTAX  DisplayString (SIZE (0..30))
--	ACCESS  read-only
--        STATUS  mandatory
--        DESCRIPTION
--                "Management information (SerialNumber) of RMP2-CARD."
--        ::= { ax5400sSwitch 5 }

ax5400sLicenseNumber OBJECT-TYPE
        SYNTAX  INTEGER
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The number of the configured license serial numbers."
        ::= { ax5400sLicense 1 }

ax5400sLicenseTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sLicenseTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table containing the license information."
	::= { ax5400sLicense 2 }

ax5400sLicenseEntry OBJECT-TYPE
	SYNTAX  Ax5400sLicenseTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry of license information."
	INDEX   { ax5400sLicenseIndex }
	::= { ax5400sLicenseTable 1 }

	Ax5400sLicenseTableEntry ::=
		SEQUENCE {
		  ax5400sLicenseIndex
			INTEGER,
		  ax5400sLicenseSerialNumber
			DisplayString,
		  ax5400sLicenseOptionNumber
			INTEGER
                }

ax5400sLicenseIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The unique index number given for each serial number. The number is from 1 to ax5400sLicenseNumber."
	::= { ax5400sLicenseEntry 1 }

ax5400sLicenseSerialNumber OBJECT-TYPE
	SYNTAX  DisplayString 
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The serial number."
	::= { ax5400sLicenseEntry 2 }

ax5400sLicenseOptionNumber OBJECT-TYPE
	SYNTAX  INTEGER 
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The number of option licenses associated with the serial number."
	::= { ax5400sLicenseEntry 3 }

ax5400sLicenseOptionTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sLicenseOptionTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table containing option licenses information associated with the serial number."
	::= { ax5400sLicense 3 }

ax5400sLicenseOptionEntry OBJECT-TYPE
	SYNTAX  Ax5400sLicenseOptionTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The entry of the option license information associated with the serial number."
	INDEX   { ax5400sLicenseOptionIndex,ax5400sLicenseOptionNumberIndex }
	::= { ax5400sLicenseOptionTable 1 }

	Ax5400sLicenseOptionTableEntry ::=
		SEQUENCE {
		  ax5400sLicenseOptionIndex
			INTEGER,
		  ax5400sLicenseOptionNumberIndex
			INTEGER,
		  ax5400sLicenseOptionSoftwareName
			DisplayString,
		  ax5400sLicenseOptionSoftwareAbbreviation
			DisplayString
                }

ax5400sLicenseOptionIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The unique index number given for each serial number. The same number as ax5400sLicenseIndex."
	::= { ax5400sLicenseOptionEntry 1 }

ax5400sLicenseOptionNumberIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The unique index number of option licenses information which is given for each serial number. The number is from 1 to ax5400sLicenseNumber."
	::= { ax5400sLicenseOptionEntry 2 }

ax5400sLicenseOptionSoftwareName OBJECT-TYPE
	SYNTAX  DisplayString 
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The software model name of the option license information associated with the serial number."
	::= { ax5400sLicenseOptionEntry 3 }

ax5400sLicenseOptionSoftwareAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString 
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The software abbreviated name of the option license information associated with the serial number. "
	::= { ax5400sLicenseOptionEntry 4 }

-- ax5400sDevice group

ax5400sChassisMaxNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Max number of cluster chassis that can connect to this router."
	::= { ax5400sChassis 1 }


ax5400sChassisTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sChassisTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing chassis information."
	::= { ax5400sChassis 2 }

ax5400sChassisEntry OBJECT-TYPE
	SYNTAX  Ax5400sChassisTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing specific chassis."
	INDEX   { ax5400sChassisIndex }
	::= { ax5400sChassisTable 1 }

	Ax5400sChassisTableEntry ::=
		SEQUENCE {
		  ax5400sChassisIndex
			INTEGER,
		  ax5400sChassisType
			INTEGER,
		  ax5400sChassisStatus
			INTEGER,
		  ax5400sBcuBoardDuplexMode
			INTEGER,
		  ax5400sPowerUnitNumber
			INTEGER,
		  ax5400sFanNumber
			INTEGER,
		  ax5400sCifNumber
			INTEGER,
		  ax5400sBcuBoardNumber
			INTEGER,
		  ax5400sBsuBoardNumber
			INTEGER,
		  ax5400sNifBoardNumber
			INTEGER,
		  ax5400sChassisMacAddress
			MacAddress,
		  ax5400sChassisSerialNumber
			DisplayString
		}

ax5400sChassisIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A number to specify ax5400sChassisEntry."
	::= { ax5400sChassisEntry 1 }

ax5400sChassisType OBJECT-TYPE
	SYNTAX  INTEGER {
	        ax5402s(200),
	        ax5404s(201)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Chassis type of this system."
	::= { ax5400sChassisEntry 2 }

ax5400sChassisStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		up(2)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Current status of this chassis."
	::= { ax5400sChassisEntry 3 }

ax5400sBcuBoardDuplexMode OBJECT-TYPE
	SYNTAX  INTEGER {
		bcu-Simplex-model(1),
		bcu-Duplex-model(2)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Duplex mode of BCU Board."
	::= { ax5400sChassisEntry 4 }

ax5400sPowerUnitNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of maximum power switches that this router can connect its."
	::= { ax5400sChassisEntry 5 }

ax5400sFanNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The maximum number of fans that can connect to this chassis."
	::= { ax5400sChassisEntry 6 }

ax5400sCifNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of cluster interfaces that can connect to this chassis."
	::= { ax5400sChassisEntry 7 }

ax5400sBcuBoardNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of BCU boards that can connect to
		this chassis."
	::= { ax5400sChassisEntry 8 }

ax5400sBsuBoardNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of Bsu boards that can connect to
		this chassis."
	::= { ax5400sChassisEntry 9 }

ax5400sNifBoardNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of NIF(Network InterFace) boards that can connect to
		this chassis."
	::= { ax5400sChassisEntry 10 }

ax5400sChassisMacAddress OBJECT-TYPE
	SYNTAX  MacAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The Media Access Control Address of this chassis."
	::= { ax5400sChassisEntry 11 }

ax5400sChassisSerialNumber OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..30))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Management information (SerialNumber) of this chassis.
		Its length is zero if not implemented or closed."
	::= { ax5400sChassisEntry 12 }

ax5400sPowerUnitTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sPowerUnitTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing power unit information."
	::= { ax5400sChassis 3 }

ax5400sPowerUnitEntry OBJECT-TYPE
	SYNTAX  Ax5400sPowerUnitTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing power unit information."
	INDEX   { ax5400sChassisIndex,ax5400sPowerUnitIndex }
	::= { ax5400sPowerUnitTable 1 }

	Ax5400sPowerUnitTableEntry ::=
		SEQUENCE {
		  ax5400sPowerUnitIndex
			INTEGER,
		  ax5400sPowerConnectStatus
			INTEGER,
		  ax5400sPowerSupplyStatus
			INTEGER
		}

ax5400sPowerUnitIndex OBJECT-TYPE
	SYNTAX  INTEGER 
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A number to position of the power units.The value from 1
		to ax5400sPowerUnitNumber."
	::= { ax5400sPowerUnitEntry 1 }

ax5400sPowerConnectStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		connected(2),
		disconnected(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The current connection status of the power unit."
	::= { ax5400sPowerUnitEntry 2 }

ax5400sPowerSupplyStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		ok(2),
		fault(4)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of power supply. The value is -1 when Power Supply is disconnected."
	::= { ax5400sPowerUnitEntry 3 }


ax5400sFanTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sFanTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing fan information."
	::= { ax5400sChassis 4 }

ax5400sFanEntry OBJECT-TYPE
	SYNTAX  Ax5400sFanTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"This entry containing information for a fan."
	INDEX   { ax5400sChassisIndex,ax5400sFanIndex }
	::= { ax5400sFanTable 1 }

	Ax5400sFanTableEntry ::=
		SEQUENCE {
		  ax5400sFanIndex
			INTEGER,
		  ax5400sFanStatus
			INTEGER
		}

ax5400sFanIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Index to indicate position of fans."
	::= { ax5400sFanEntry 1 }

ax5400sFanStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		ok(2),
		under-highspeed-rotation(3),
		fault(4)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of fans."
	::= { ax5400sFanEntry 2 }

ax5400sBcuBoardTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sBcuBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing BCU boards information."
	::= { ax5400sBcuBoard 1 }

ax5400sBcuBoardEntry OBJECT-TYPE
	SYNTAX  Ax5400sBcuBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing BCU boards about specific
		chassis."
	INDEX   { ax5400sChassisIndex,ax5400sBcuBoardIndex }
	::= { ax5400sBcuBoardTable 1 }

	Ax5400sBcuBoardTableEntry ::=
		SEQUENCE {
		  ax5400sBcuBoardIndex
			INTEGER,
		  ax5400sBcuIoBoardType
			INTEGER,
		  ax5400sBcuCpuBoardType
			INTEGER,
		  ax5400sBcuOperStatus
			INTEGER,
		  ax5400sBcuOperModeStatus
			INTEGER,
		  ax5400sBcuActiveLedStatus
			INTEGER,
		  ax5400sBcuReadyLedStatus
			INTEGER,
		  ax5400sBcuAlarmLedStatus
			INTEGER,
		  ax5400sBcuErrorLedStatus
			INTEGER,
		  ax5400sBcuEmaLedStatus
			INTEGER,
		  ax5400sBcuMgmtPortStatus
			INTEGER,
		  ax5400sBcuMaintenancePortStatus
			INTEGER,
		  ax5400sBcuAtaCardNumber
			INTEGER,
		  ax5400sBcuAtaBootDev
			INTEGER,
		  ax5400sBcuBoardName
			DisplayString,
		  ax5400sBcuBoardAbbreviation
			DisplayString,
		  ax5400sBcuIoBoardProductCode
			INTEGER,
		  ax5400sBcuCpuBoardProductCode
			INTEGER,
		  ax5400sBcuRmCpuName
			DisplayString,
		  ax5400sBcuRmCpuClock
			INTEGER,
		  ax5400sBcuRmMemoryTotalSize
			INTEGER,
		  ax5400sBcuRmMemoryUsedSize
			INTEGER,
		  ax5400sBcuRmMemoryFreeSize
			INTEGER,
		  ax5400sBcuRmRomVersion
			DisplayString,
		  ax5400sBcuRmCpuLoad1m
			INTEGER,
		  ax5400sBcuTemperatureStatusNumber
			INTEGER,
		  ax5400sBcuCpOperStatus
			INTEGER,
		  ax5400sBcuCpCpuName
			DisplayString,
		  ax5400sBcuCpCpuClock
			INTEGER,
		  ax5400sBcuCpMemoryTotalSize
			INTEGER,
		  ax5400sBcuCpCpuLoad1m 
			INTEGER,
		  ax5400sBcuSerialNumber 
			DisplayString,
		  ax5400sBcuVoltage150 
			INTEGER,
		  ax5400sBcuVoltage180 
			INTEGER,
		  ax5400sBcuVoltage250 
			INTEGER,
		  ax5400sBcuVoltage330 
			INTEGER,
		  ax5400sBcuVoltage500 
			INTEGER,
		  ax5400sBcuVoltage330-2 
			INTEGER
		}

ax5400sBcuBoardIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Position information of the BCU slot. The value is from 1 to
		ax5400sBcuBoardCardNumber."
	::= { ax5400sBcuBoardEntry  1 }

ax5400sBcuIoBoardType OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		ax5402s-BCU-C5MS-IO(4104),
		ax5404s-BCU-S5MS-IO(4360)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"BCU IO board ID.
		The value is -1 when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry  2 }

ax5400sBcuCpuBoardType OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		bcu-CPU(1024)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of BCU board ID.
		The value is -1 when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry 3 }

ax5400sBcuOperStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		up(2),
		down(4),
		closed(5),
		disconnect(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of LED on BCU board. The value is 32 when BCU board is
		disconnected."
	::= { ax5400sBcuBoardEntry 4 }

ax5400sBcuOperModeStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		active(2),
		standby(3),
		do-not-match-with-configure-mode(4),
		do-not-match-with-software-version(5),
		down(6),
		mentenance(7)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Operate status on BCU board. The value is -1 when BCU board is
		disconnected."
	::= { ax5400sBcuBoardEntry 5 }

ax5400sBcuActiveLedStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		green-light-on(2),
		light-off(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of ACTIVE LED on BCU board. The value is -1 when BCU board is
		disconnected or LED status is unknown."
	::= { ax5400sBcuBoardEntry 6 }

ax5400sBcuReadyLedStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		green-light-on(2),
		light-off(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of READY LED on BCU board. The value is -1 when BCU board is
		disconnected or LED status is unknown."
	::= { ax5400sBcuBoardEntry 7 }

ax5400sBcuAlarmLedStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		red-light-on(4),
		light-off(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of ALARM LED on BCU board. The value is -1 when BCU board is
		disconnected or LED status is unknown."
	::= { ax5400sBcuBoardEntry 8 }

ax5400sBcuErrorLedStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		yellow-light-on(5),
		light-off(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of LED ERROR on BCU board. The value is -1 when BCU board is
		disconnected or LED status is unknown."
	::= { ax5400sBcuBoardEntry 9 }

ax5400sBcuEmaLedStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		yellow-light-on(5),
		light-off(6)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of LED EMA READY on BCU board. The value is -1 when BCU board is
		disconnected or LED status is unknown."
	::= { ax5400sBcuBoardEntry 10 }

ax5400sBcuMgmtPortStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		active(2),
		down(4),
		nothing-configuration-or-locked(6),
		maintenance(7),
		test(9),
		unused(10)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The status of remote management port.
		The value is -1 when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry 12 }

ax5400sBcuMaintenancePortStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		active(2),
		down(4),
		inactive(6),
		close(7),
		test(9)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The status of maintenance port.
		The value is -1 when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry 13 }

ax5400sBcuAtaCardNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of slots in ATA card. The value is 0 when BCU board is
		disconnected."
	::= { ax5400sBcuBoardEntry 14 }

ax5400sBcuAtaBootDev OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		ata-slot0(1),
		ata-slot1(2)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of ATA slots number when router booted. The value is -1
		when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry 15 }

ax5400sBcuBoardName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The product name of RM-IO board.When BCU board is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax5400sBcuBoardEntry 16 }

ax5400sBcuBoardAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The abbreviation name of RM-IO board.When BCU board is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax5400sBcuBoardEntry 17 }

ax5400sBcuIoBoardProductCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The manufacturing management number of BCU-IO board.The value is
		-1 when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry 18 }

ax5400sBcuCpuBoardProductCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The manufacturing management number of BCU-CPU board.The value is
		-1 when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry 19 }

ax5400sBcuRmCpuName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The CPU name of board that load BCU.When BCU board is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax5400sBcuBoardEntry 20 }

ax5400sBcuRmCpuClock OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The CPU clock of board that load BCU. The value is displayed in
		mega-hertz(MHz). The value is -1 when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry 21 }

ax5400sBcuRmMemoryTotalSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Total memory sizes of BCU. The value is displayed in kilobyte(KB).
		The value is -1 when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry 22 }

ax5400sBcuRmMemoryUsedSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Using memory sizes of BCU. The value is displayed in kilobyte(KB).
		The value is -1 when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry 23 }

ax5400sBcuRmMemoryFreeSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Free memory sizes of BCU. The value is displayed in kilobyte(KB).
		The value is -1 when BCU board is disconnected."
	::= { ax5400sBcuBoardEntry 24 }


ax5400sBcuRmRomVersion OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..128))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The version of Rom on BCU board. When BCU board is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax5400sBcuBoardEntry 25 }

ax5400sBcuRmCpuLoad1m OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The average, over the last minute, of the percentage of time that
		this processor was utilized to processing and transfer data.
		The value is 0 when BCU board is standby or disconnected."
	::= { ax5400sBcuBoardEntry 26 }

ax5400sBcuTemperatureStatusNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The maximum number of ax5400sTemperatureStatus that can be measurement at this chassis.
		The value is 0 when BCU board doesn't support the temperature measurement function or BCU board is disconnected"
	::= { ax5400sBcuBoardEntry 27 }

ax5400sBcuCpOperStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		active(2),
		initialization(3),
		down(4),
		disconnect(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The state of CP. other(1),Under Operation(2),Initializing(3),Fault(4),Standby system BCU not implemented(32)"
	::= { ax5400sBcuBoardEntry 28 }

ax5400sBcuCpCpuName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The character sequence of the CPU name whose number is a maximum of 16.(ex : MIPS RM5261).Return length 0 if standby system BCR not implemented. "
	::= { ax5400sBcuBoardEntry 29 }

ax5400sBcuCpCpuClock OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of a CP CPU clock. unit of measure: MHz (ex:250), it is -1 if standby system BCU not implemented."
	::= { ax5400sBcuBoardEntry 30 }
	
ax5400sBcuCpMemoryTotalSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the main memory size of CP. Unit of measure : KByte,(ex : 32768)"
	::= { ax5400sBcuBoardEntry 31 }
	
ax5400sBcuCpCpuLoad1m OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value(1-100) of CP CPU activity ratio for a minute.If the state of CP is not Under Operation, return 0. If standby system BCU is not implemented return 0."
	::= { ax5400sBcuBoardEntry 32 }
	
ax5400sBcuSerialNumber OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..30))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The character string of the card management information of BCU package whose number is a maximum of 30. Its length is zero if not implemented or closed."
	::= { ax5400sBcuBoardEntry 33 }
	
ax5400sBcuVoltage150 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.5V voltage. Unit of measure : 10mV (ex : 148)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax5400sBcuBoardEntry 34 }
	
ax5400sBcuVoltage180 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.8V voltage. Unit of measure : 10mV (ex : 183)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax5400sBcuBoardEntry 35 }
	
ax5400sBcuVoltage250 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 2.5V voltage. Unit of measure : 10mV (ex : 250)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax5400sBcuBoardEntry 36 }
	
ax5400sBcuVoltage330 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 3.3V voltage. Unit of measure : 10mV (ex : 328)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax5400sBcuBoardEntry 37 }
	
ax5400sBcuVoltage500 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 5V voltage. Unit of measure : 10mV (ex : 493)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax5400sBcuBoardEntry 38 }
	
ax5400sBcuVoltage330-2 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 3.3V voltage. Unit of measure : 10mV (ex : 328)
		Return length 0 if standby system BCU not implemented or closed."
	::= { ax5400sBcuBoardEntry 46 }
	
ax5400sAtaCardTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sAtaCardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing ATA Card information."
	::= { ax5400sBcuBoard 2 }

ax5400sAtaCardEntry OBJECT-TYPE
	SYNTAX  Ax5400sAtaCardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing ATA Card information."
	INDEX   { ax5400sChassisIndex, ax5400sBcuBoardIndex, ax5400sAtaCardIndex }
	::= { ax5400sAtaCardTable 1 }

	Ax5400sAtaCardTableEntry ::=
		SEQUENCE {
		  ax5400sAtaCardIndex
			INTEGER,
		  ax5400sAtaCardConnection
			INTEGER,
		  ax5400sAtaCardTotalSize
			INTEGER,
		  ax5400sAtaCardUsedSize
			INTEGER,
		  ax5400sAtaCardFreeSize
			INTEGER,
		  ax5400sAtaCardName
			DisplayString,
		  ax5400sAtaCardAbbreviation
			DisplayString,
		  ax5400sAtaCardMountStatus
			INTEGER
		}

ax5400sAtaCardIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Connected position of ATA cards.The value is 1 plus slot number
		that ATA card is inserted.The value is from 1 to ax5400sBcuAtaCardNumber."
	::= { ax5400sAtaCardEntry 1 }

ax5400sAtaCardConnection OBJECT-TYPE
	SYNTAX  INTEGER {
		connect(2),
		disconnect(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Connected status of ATA cards."
	::= { ax5400sAtaCardEntry 2 }

ax5400sAtaCardTotalSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Total capacity of ATA cards.The value is displayed in kilobyte
		(kbyte).And the value is -1 when ATA cards is disconnected."
	::= { ax5400sAtaCardEntry 3 }

ax5400sAtaCardUsedSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Using capacity of ATA cards.The value is displayed in kilobyte
		(kbyte).And the value is -1 when ATA cards is disconnected."
	::= { ax5400sAtaCardEntry 4 }

ax5400sAtaCardFreeSize OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The rest capacity of ATA card. The value is displayed in kilobyte
		(kbyte). The value is -1 when ATA card is disconnected."
	::= { ax5400sAtaCardEntry 5 }

ax5400sAtaCardName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The product name of ATA card. When the ATA card is unknown,
		this OCTET STRING value is 'unknown'. When ATA card is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax5400sAtaCardEntry 6 }

ax5400sAtaCardAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The kind of ATA card. When ATA card is disconnected,this will be an
		OCTET STRING of zero length."
	::= { ax5400sAtaCardEntry 7 }

ax5400sAtaCardMountStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		unmount(1),
  		mount(2)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The mount state of ATA card. The value is -1 when ATA card is
		disconnected."
	::= { ax5400sAtaCardEntry 8 }

ax5400sTemperatureStatusTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sTemperatureStatusEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The table of ambient temperature status maintained by the
		environmental monitor."
	::= { ax5400sBcuBoard 3 }

ax5400sTemperatureStatusEntry OBJECT-TYPE
	SYNTAX  Ax5400sTemperatureStatusEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry in the ambient temperature status table, representing
		the status of the associated testpoint maintained by the
		environmental monitor."
	INDEX  { ax5400sChassisIndex, ax5400sBcuBoardIndex, ax5400sTemperatureStatusIndex }
	::= { ax5400sTemperatureStatusTable 1 }

	Ax5400sTemperatureStatusEntry ::=
		SEQUENCE {
		  ax5400sTemperatureStatusIndex
			INTEGER(0..2147483647),
		  ax5400sTemperatureStatusDescr
			DisplayString,
		  ax5400sTemperatureStatusValue
			INTEGER,
		  ax5400sTemperatureThreshold
			INTEGER,
		  ax5400sTemperatureState
			INTEGER
		}

ax5400sTemperatureStatusIndex OBJECT-TYPE
	SYNTAX  INTEGER(0..2147483647)
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Unique index for the testpoint being instrumented.
		This index is for SNMP purposes only, and has no
		intrinsic meaning."
	::= { ax5400sTemperatureStatusEntry 1 }

ax5400sTemperatureStatusDescr OBJECT-TYPE
	SYNTAX  DisplayString(SIZE(0..32))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Textual description of the testpoint being instrumented.
		This description is a short textual label, suitable as a
		human-sensible identification for the rest of the
		information in the entry."
	::= { ax5400sTemperatureStatusEntry 2 }

ax5400sTemperatureStatusValue OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The current measurement of the testpoint being instrumented."
	::= { ax5400sTemperatureStatusEntry 3 }

ax5400sTemperatureThreshold OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The highest value that the associated instance of the
		object ax5400sTemperatureStatusValue may obtain
		before an emergency shutdown of the managed device is
		initiated."
	::= { ax5400sTemperatureStatusEntry 4 }

ax5400sTemperatureState OBJECT-TYPE
	SYNTAX  INTEGER {
		normal(1),
		caution(2),
		warning(3),
		fatal(4)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The current state of the testpoint being instrumented."
	::= { ax5400sTemperatureStatusEntry 5 }

ax5400sSopTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF Ax5400sSopEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "A table containing SOP information."
        ::= { ax5400sBcuBoard 4 }

ax5400sSopEntry OBJECT-TYPE
        SYNTAX  Ax5400sSopEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "An entry containing SOP information."
        INDEX   { ax5400sChassisIndex, ax5400sBcuBoardIndex }
        ::= { ax5400sSopTable 1 }

        Ax5400sSopEntry ::=
                SEQUENCE {
                  ax5400sSopAlarmLevel
                        DisplayString,
                  ax5400sSopAlarmEventPoint
                        DisplayString,
                  ax5400sSopAlarmEventCode
                        DisplayString,
                  ax5400sSopAlarmEventInterfaceID
                        DisplayString,
                  ax5400sSopAlarmMsgText
                        DisplayString
                }

ax5400sSopAlarmLevel OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Error level displayed on a SOP window. When the BCU does not
                support SOP, this will be an OCTET STRING of zero length.
                For information about this code, see:  Operator's Manual."
        ::= { ax5400sSopEntry 1 }

ax5400sSopAlarmEventPoint OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The code displayed on a SOP window, which stands for a device
                part of the factor of the alarm message. When the BCU does not
                support SOP, this will be an OCTET STRING of zero length.
                For information about this code, see:  Operator's Manual."
        ::= { ax5400sSopEntry 2 }

ax5400sSopAlarmEventCode OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Event kind code of alarm message displayed on a SOP window.
                When the BCU does not support SOP, this will be an OCTET STRING
                of zero length. For information about this code, see:  Operator's
                Manual."
        ::= { ax5400sSopEntry 3 }

ax5400sSopAlarmEventInterfaceID OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Interface identification of alarm messages on a SOP window.
                When the BCU does not support SOP, this will be an OCTET STRING
                of zero length. For information about this code, see:  Operator's
                Manual."
        ::= { ax5400sSopEntry 4 }

ax5400sSopAlarmMsgText OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The text of the alarm message on a SOP window. When the BCU does
                not support SOP, this will be an OCTET STRING of zero length.
                For more information about this code, see:  Operator's Manual."
        ::= { ax5400sSopEntry 5 }
	

ax5400sBsuBoardTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sPpuBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing BSU boards information about
		specific chassis."
	::= { ax5400sBsuBoard 1 }

ax5400sBsuBoardEntry OBJECT-TYPE
	SYNTAX  Ax5400sPpuBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing BSU boards about specific
		chassis."
	INDEX   { ax5400sChassisIndex,ax5400sBsuBoardIndex }
	::= { ax5400sBsuBoardTable 1 }

	Ax5400sPpuBoardTableEntry ::=
		SEQUENCE {
		  ax5400sBsuBoardIndex
			INTEGER,
		  ax5400sBsuBoardType
			INTEGER,
		  ax5400sBsuOperStatus
			INTEGER,
		  ax5400sBsuOperModeStatus
			INTEGER,
		  ax5400sBsuBoardName
			DisplayString,
		  ax5400sBsuBoardAbbreviation
			DisplayString,
		  ax5400sBsuBoardProductCode
			INTEGER,
		  ax5400sBsuSerialNumber
			DisplayString,
		  ax5400sBsuVoltage120
			INTEGER,
		  ax5400sBsuVoltage150
			INTEGER,
		  ax5400sBsuVoltage180
			INTEGER,
		  ax5400sBsuVoltage250
			INTEGER,
		  ax5400sBsuVoltage330
			INTEGER,
		  ax5400sBsuVoltage500
			INTEGER,
		  ax5400sBsuVoltage150-2
			INTEGER,
		  ax5400sBsuVoltage250-2
			INTEGER
		}

ax5400sBsuBoardIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Position information of the BSU slots. The value is from 1 to
		ax5400sBsuBoardNumber."
	::= { ax5400sBsuBoardEntry 1 }

ax5400sBsuBoardType OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		bsu-c1(24576),
		bsu-s1(24832),
		bsu-c2(25088),
		bsu-s2(25344)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"BSU boards ID.
        The value is -1 when BSU board is disconnected."
	::= { ax5400sBsuBoardEntry 2 }

ax5400sBsuOperStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		active(2),
		initialization(3),
		down(4),
		closed(5),
		inactive(6),
		disconnect(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Operation stasus of BSU board.(STATUS LED)"
	::= { ax5400sBsuBoardEntry 3 }

ax5400sBsuOperModeStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		active(2),
		standby(3),
		down(6),
		maintnace(7)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Operate status on BSU board. The value is -1 when BSU board is
		disconnected."
	::= { ax5400sBsuBoardEntry 4 }

ax5400sBsuBoardName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"BSU board name. When BSU board is disconnected, this will be an OCTET
		STRING of zero length."
	::= { ax5400sBsuBoardEntry 5 }

ax5400sBsuBoardAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The abbreviation name of BSU board. When BSU board is disconnected,
		this will be an OCTET STRING of zero length."
	::= { ax5400sBsuBoardEntry 6 }

ax5400sBsuBoardProductCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The revision of BSU board. When BSU board is disconnected,
		this will be -1."
	::= { ax5400sBsuBoardEntry 7 }

ax5400sBsuSerialNumber OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..30))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The character string of the card management information of BSU package whose number is a maximum of 30. Its length is zero if not implemented or closed."
	::= { ax5400sBsuBoardEntry 8 }

ax5400sBsuVoltage120 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 148) .If BSU is closed or not implemented, return 0."
	::= { ax5400sBsuBoardEntry 9 }

ax5400sBsuVoltage150 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.5V voltage. Unit of measure : 10mV (ex : 148) .If BSU is closed or not implemented, return 0."
	::= { ax5400sBsuBoardEntry 10 }

ax5400sBsuVoltage180 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.8V voltage. Unit of measure : 10mV (ex : 183) .If BSU is closed or not implemented, return 0."
	::= { ax5400sBsuBoardEntry 11 }

ax5400sBsuVoltage250 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 2.5V voltage. Unit of measure : 10mV (ex : 250) .If BSU is closed or not implemented, return 0."
	::= { ax5400sBsuBoardEntry 12 }

ax5400sBsuVoltage330 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 3.3V voltage. Unit of measure : 10mV (ex : 328) .If BSU is closed or not implemented, return 0."
	::= { ax5400sBsuBoardEntry 13 }

ax5400sBsuVoltage500 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 5V voltage. Unit of measure : 10mV (ex : 493) .If BSU is closed or not implemented, return 0."
	::= { ax5400sBsuBoardEntry 14 }

ax5400sBsuVoltage150-2 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 1.5V voltage. Unit of measure : 10mV (ex : 148) .If BSU is closed or not implemented, return 0."
	::= { ax5400sBsuBoardEntry 22 }
	
ax5400sBsuVoltage250-2 OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The numerical value of the voltage at the observation point of 2.5V voltage. Unit of measure : 10mV (ex : 250) .If BSU is closed or not implemented, return 0."
	::= { ax5400sBsuBoardEntry 23 }

ax5400sNifBoardTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sNifBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing Network Interface cards (NIF) information that
		slot is loaded."
	::= { ax5400sNifBoard 1 }

ax5400sNifBoardEntry OBJECT-TYPE
	SYNTAX  Ax5400sNifBoardTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing NIF information about specific chassis."
        INDEX   { ax5400sChassisIndex,ax5400sNifBoardSlotIndex }
	::= { ax5400sNifBoardTable 1 }

	Ax5400sNifBoardTableEntry ::=
		SEQUENCE {
		  ax5400sNifBoardSlotIndex
			INTEGER,
		  ax5400sNifBoardType
			INTEGER,
		  ax5400sNifBoardOperStatus
			INTEGER,
		  ax5400sNifBoardName
			DisplayString,
		  ax5400sNifBoardAbbreviation
			DisplayString,
		  ax5400sNifBoardProductCode
			INTEGER,
		  ax5400sNifPhysLineNumber
			INTEGER,
                  ax5400sNifSerialNumber
                        DisplayString,
		  ax5400sNifVoltageAM520
			INTEGER,
		  ax5400sNifVoltage150
			INTEGER,
		  ax5400sNifVoltage180
			INTEGER,
		  ax5400sNifVoltageA180
			INTEGER,
		  ax5400sNifVoltage250
			INTEGER,
		  ax5400sNifVoltage330
			INTEGER,
		  ax5400sNifVoltageA330
			INTEGER,
		  ax5400sNifVoltageA500
			INTEGER,
--		  ax5400sNifVoltage330S
--			INTEGER,
--		  ax5400sNifVoltage500S
--			INTEGER,
		  ax5400sNifVoltage120
			INTEGER,
		  ax5400sNifVoltage330-2
			INTEGER
		}

ax5400sNifBoardSlotIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Position information of NIF loading slot. The value is from 1
		to ax5400sNifBoardNumber."
	::= { ax5400sNifBoardEntry 1 }

ax5400sNifBoardType OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		nif-48-port-10BASE-T-100BASE-TX-1000BASE-T(32882),
		nif-6-port-1000BASE-X-GBIC(32884),
		nif-32-port-1000BASE-X-SFP(32886),
		nif-48-port-10BASE-T-100BASE-TX-MINOR-CHANGE(32888),
		nif-40-port-10-100-1000BASE-T-plus-4-port-1000BASE-X-SFP(32896),
		nif-32-port-1000BASET-plus-2-port-1000BASET-or-1000BASEX(32897)
		}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Type of connecting package.The value is register value of NIF package.
		other (1),
		48-port-10BASE-T:100BASE-TX(32880),
		6-port-1000BASE-GBIC(32884)
		The value is -1 when BSU is disconnected or NIF disconnected."
	::= { ax5400sNifBoardEntry 2 }

ax5400sNifBoardOperStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		other(1),
		active(2),
		initialization(3),
		down(4),
		closed(5),
		lock(6),
		disconnect(32)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Operation status of Network InterFace(NIF) board.(STATUS LED)"
	::= { ax5400sNifBoardEntry 3 }

ax5400sNifBoardName OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Network InterFace(NIF) board name. When BSU board or NIF board is
		disconnected,this will be an OCTET STRING of zero length."
	::= { ax5400sNifBoardEntry 4 }

ax5400sNifBoardAbbreviation OBJECT-TYPE
	SYNTAX  DisplayString (SIZE (0..16))
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The abbreviation name of Network InterFace(NIF) board. When BSU board
		or NIF board is disconnected, this will be an OCTET STRING of zero
		length."
	::= { ax5400sNifBoardEntry 5 }

ax5400sNifBoardProductCode OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The product management code of Network InterFace(NIF) board.The value
		is -1 when BSU board or NIF board is disconncted."
	::= { ax5400sNifBoardEntry 6 }

ax5400sNifPhysLineNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of Network InterFace(NIF)'s physical port.The max is 12.
		The value is -1 when value of ax5400sNifCardType is -1 or other(1)."
	::= { ax5400sNifBoardEntry 7 }

ax5400sNifSerialNumber OBJECT-TYPE
        SYNTAX  DisplayString (SIZE (0..30))
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Management information (SerialNumber) of Network InterFace(NIF) package.
                It shows by the character string of 30 characters or less.
                When BSU board responds and things except UP or NIF board is disconnected or closed,
                this will be an OCTET STRING of zero length."
        ::= { ax5400sNifBoardEntry 8 }

ax5400sNifVoltageAM520 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of -5.2V voltage. Unit of measure : 10mV (ex : -512) .If BSU or NIF is closed or not implemented, return 0."
        ::= { ax5400sNifBoardEntry 9 }

ax5400sNifVoltage150 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of 1.5V voltage. Unit of measure : 10mV (ex : 148) .If BSU or NIF is closed or not implemented, return 0."
        ::= { ax5400sNifBoardEntry 10 }

ax5400sNifVoltage180 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of 1.8V voltage. Unit of measure : 10mV (ex : 183) .If BSU or NIF is closed or not implemented, return 0."
        ::= { ax5400sNifBoardEntry 11 }

ax5400sNifVoltageA180 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of analog 1.8V voltage. Unit of measure : 10mV (ex : 183) .If BSU or NIF is closed or not implemented, return 0."
        ::= { ax5400sNifBoardEntry 12 }

ax5400sNifVoltage250 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of  analogu 2.5V voltage. Unit of measure : 10mV (ex : 250) .If BSU or NIF is closed or not implemented, return 0."
        ::= { ax5400sNifBoardEntry 13 }

ax5400sNifVoltage330 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of  analogu 3.3V voltage. Unit of measure : 10mV (ex : 328) .If BSU or NIF is closed or not implemented, return 0."
        ::= { ax5400sNifBoardEntry 14 }

ax5400sNifVoltageA330 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of analog 3.3V voltage. Unit of measure : 10mV (ex : 328) .If BSU or NIF is closed or not implemented, return 0."
        ::= { ax5400sNifBoardEntry 15 }

ax5400sNifVoltageA500 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of analog 5V voltage. Unit of measure : 10mV (ex : 493) .If BSU or NIF is closed or not implemented, return 0."
        ::= { ax5400sNifBoardEntry 16 }

--ax5400sNifVoltage330S OBJECT-TYPE
--        SYNTAX  INTEGER
--        ACCESS  read-only
--        STATUS  mandatory
--        DESCRIPTION
--                "The numerical value of the voltage at the observation point of 3.3V voltage. Unit of measure : 10mV (ex : 328) .If BSU or NIF is closed or not implemented, return 0."
--        ::= { ax5400sNifBoardEntry 17 }

--ax5400sNifVoltage500S OBJECT-TYPE
--        SYNTAX  INTEGER
--        ACCESS  read-only
--        STATUS  mandatory
--       DESCRIPTION
--                "The numerical value of the voltage at the observation point of 5V voltage. Unit of measure : 10mV (ex : 493) .If BSU or NIF is closed or not implemented, return 0."
--        ::= { ax5400sNifBoardEntry 18 }

ax5400sNifVoltage120 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of 1.2V voltage. Unit of measure : 10mV (ex : 118) .If BSU or NIF is closed or not implemented, return 0."
        ::= { ax5400sNifBoardEntry 19 }

ax5400sNifVoltage330-2 OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The numerical value of the voltage at the observation point of .3.V voltage. Unit of measure : 10mV (ex : 328) .If BSU or NIF is closed or not implemented, return 0."
        ::= { ax5400sNifBoardEntry 22 }

ax5400sPhysLineTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sPhysLineTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing physical port information."
	::= { ax5400sPhysLine 1 }

ax5400sPhysLineEntry OBJECT-TYPE
	SYNTAX  Ax5400sPhysLineTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing physical port."
	INDEX   { ax5400sChassisIndex, ax5400sNifBoardSlotIndex, ax5400sPhysLineIndex }
	::= { ax5400sPhysLineTable 1 }

	Ax5400sPhysLineTableEntry ::=
		SEQUENCE {
		  ax5400sPhysLineIndex
			INTEGER,
		  ax5400sPhysLineConnectorType
			INTEGER,
		  ax5400sPhysLineOperStatus
			INTEGER,
		  ax5400sPhysLineIfIndexNumber
			INTEGER,
		  ax5400sPhysLineTransceiverStatus
		    INTEGER
		}

ax5400sPhysLineIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Physical port number. The value is from 1 to ax5400sNifLineNumber."
	::= { ax5400sPhysLineEntry 1 }

ax5400sPhysLineConnectorType OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		type1000BASE-LX(301),
		type1000BASE-SX(302),
		type1000BASE-LH(303),
		type1000BASE-LHB(310)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Connector type is connected physical port. The value is 1(other)
		when connector is disconnected or connector type is unknown.When
		displaying in pannel, requests board name of NIF,then will display it.
		The value is -1	when BSU or NIF board is disconnected."
	::= { ax5400sPhysLineEntry 2 }

ax5400sPhysLineOperStatus OBJECT-TYPE
	SYNTAX  INTEGER {
		disconnected(-1),
		other(1),
		active(2),
		initialization(3),
		down(4),
		lock(6),
		close(7),
		line-fault(8),
		test(9),
		nothing-configuration(10),
		missing-configuration(11),
		remote-loop-back-test-mode(12)
	      }
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Status of physical port. The value is -1 when BSU or NIF board is
		disconnected."
	::= { ax5400sPhysLineEntry 3 }

ax5400sPhysLineIfIndexNumber OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of ifIndex which is included in physical port.The value is -1
		when BSU board or NIF board is disconnected."
	::= { ax5400sPhysLineEntry 4 }

ax5400sPhysLineTransceiverStatus OBJECT-TYPE
	SYNTAX  INTEGER{
				gbic-mounted(10),
				gbic-unmounted(11),
				unsupported-gbic-mounted(12),
				gbic-status-unknown(13),
				sfp-mounted(20),
				sfp-unmounted(21),
				unsupported-sfp-mounted(22),
				sfp-status-unknown(23),
				xfp-mounted(30),
				xfp-unmounted(31),
				unsupported-xfp-mounted(32),
				xfp-status-unknown(33)
			}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Type and status of replaceable transceiver."
	::= { ax5400sPhysLineEntry 5 }
-- 

ax5400sLineIfTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF Ax5400sLineIfTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table containing physical port correspond to ifIndex."
	::= { ax5400sInterface 1 }

ax5400sLineIfEntry OBJECT-TYPE
	SYNTAX  Ax5400sLineIfTableEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry containing ifIndex is assigned to physical port."
	INDEX   { ax5400sChassisIndex, ax5400sNifBoardSlotIndex, ax5400sPhysLineIndex, ax5400sLineIfIndex }
	::= { ax5400sLineIfTable 1 }

	Ax5400sLineIfTableEntry ::=
		SEQUENCE {
		  ax5400sLineIfIndex
			INTEGER,
		  ax5400sIfIndex
			INTEGER,
		  ax5400sIfIpAddress
			IpAddress,
		  ax5400sIfIpv6Address
			OCTET STRING
		}

ax5400sLineIfIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The value of ifIndex to distinguish entry of this table.The value is
		from 1 to ax5400sPhysLineIfIndexNumber."
	::= { ax5400sLineIfEntry 1 }

ax5400sIfIndex OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The value of ifIndex which is assigned to this physical port.
		The value is 0 when ifIndex is not assigned to this physical port."
	::= { ax5400sLineIfEntry 2 }

ax5400sIfIpAddress OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP address correspond to ifIndex which is assigned to this
		physical port. If IP address is not assigned, it is '0.0.0.0'."
	::= { ax5400sLineIfEntry 3 }

ax5400sIfIpv6Address OBJECT-TYPE
	SYNTAX  OCTET STRING
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IPv6 address correspond to ifIndex which is assigned to this
		physical port. If IPv6 address is not assigned,
		it is '00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00'."
	::= { ax5400sLineIfEntry 4 }

--
-- ax5400sFdbClearMIB      OBJECT IDENTIFIER ::= { ax5400sOperationCommand 1 }
--

ax5400sFdbClearSet OBJECT-TYPE
	SYNTAX  INTEGER {
                    initialValue(0),
                    processing(1),
                    failure(2),
                    success(3)
                }
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"Fdb clear information. When want to clear fdb, 
		then set value of this MIB as 1."
	::= { ax5400sFdbClearMIB 1 }

ax5400sFdbClearReqTime OBJECT-TYPE
	SYNTAX  TimeTicks
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This object indicates the most recent time that
		received the demand to clear Fdb information.(sysUpTime)"
	::= { ax5400sFdbClearMIB 2 }

ax5400sFdbClearSuccessTime OBJECT-TYPE
	SYNTAX  TimeTicks
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This object indicates the time of the most recent
		 Fdb clearing success.(sysUpTime)"
	::= { ax5400sFdbClearMIB 3 }


-- Traps for use by AlaxalA networks AX7800S and AX5400S

-- Traps are defined using the conventions in RFC 1215.

axsIsisAdjacencyChange TRAP-TYPE
	ENTERPRISE      axsIsisNotifications
	VARIABLES       { axsIsisSysInstance, axsIsisSysLevelIndex, axsIsisCircIndex, axsIsisPduLspId, axsIsisAdjState }
	DESCRIPTION
		"IS-IS Contiguity router state change"
	::= 17

axsStaticGatewayStateChange TRAP-TYPE
	ENTERPRISE      axsStaticTrap
	VARIABLES       { axsStaticGatewayAddr, axsStaticGatewayState }
	DESCRIPTION
		"static route gateway state change."
	::= 1
	
axsStaticIpv6GatewayStateChange TRAP-TYPE
	ENTERPRISE      axsStaticTrap
	VARIABLES       { axsStaticIpv6Ifindex, axsStaticIpv6GatewayAddr, axsStaticIpv6GatewayState }
	DESCRIPTION
		"ipv6 static route gateway state change."
	::= 2

axsOspfVirtIfStateChange TRAP-TYPE
	ENTERPRISE      axsOspfTraps
	VARIABLES       { axsOspfVirtIfDomainNumber, axsOspfRouterId, axsOspfVirtIfAreaId, axsOspfVirtIfNeighbor, axsOspfVirtIfState }
	DESCRIPTION
		"An axsOspfIfStateChange trap signifies that there has  been a change 
		in the state of an OSPF virtual interface."
	::= 1

axsOspfNbrStateChange TRAP-TYPE
	ENTERPRISE      axsOspfTraps
	VARIABLES       { axsOspfNbrDomainNumber, axsOspfRouterId, axsOspfNbrIpAddr, axsOspfNbrAddressLessIndex, axsOspfNbrRtrId, axsOspfNbrState }
	DESCRIPTION
           "An axsOspfNbrStateChange trap signifies that
           there  has been a change in the state of a non-
           virtual OSPF neighbor.   This  trap  should  be
           generated  when  the  neighbor  state regresses
           (e.g., goes from Attempt or Full  to  1-Way  or
           Down)  or progresses to a terminal state (e.g.,
           2-Way or Full).  When an  neighbor  transitions
           from  or  to Full on non-broadcast multi-access
           and broadcast networks, the trap should be gen-
           erated  by the designated router.  A designated
           router transitioning to Down will be  noted  by
           axsOspfIfStateChange."
	::= 2

axsOspfVirtNbrStateChange TRAP-TYPE
	ENTERPRISE      axsOspfTraps
	VARIABLES       { axsOspfVirtNbrDomainNumber, axsOspfRouterId, axsOspfVirtNbrArea, axsOspfVirtNbrRtrId, axsOspfVirtNbrState }
	DESCRIPTION
           "An axsOspfIfStateChange trap signifies that there
           has  been a change in the state of an OSPF vir-
           tual neighbor.  This trap should  be  generated
           when  the  neighbor state regresses (e.g., goes
           from Attempt or  Full  to  1-Way  or  Down)  or
           progresses to a terminal state (e.g., Full)."
	::= 3

axsOspfIfConfigError TRAP-TYPE
	ENTERPRISE      axsOspfTraps
	VARIABLES       { axsOspfIfDomainNumber, axsOspfRouterId, axsOspfIfIpAddress, axsOspfAddressLessIf, axsOspfPacketSrc, axsOspfConfigErrorType, axsOspfPacketType }
	DESCRIPTION
           "An axsOspfIfConfigError  trap  signifies  that  a
           packet  has  been received on a non-virtual in-
           terface  from  a  router  whose   configuration
           parameters  conflict  with this router's confi-
           guration parameters.  Note that the  event  op-
           tionMismatch  should  cause  a  trap only if it
           prevents an adjacency from forming."
	::= 4

axsOspfVirtIfConfigError TRAP-TYPE
	ENTERPRISE      axsOspfTraps
	VARIABLES       { axsOspfVirtIfDomainNumber, axsOspfRouterId, axsOspfVirtIfAreaId, axsOspfVirtIfNeighbor, axsOspfConfigErrorType, axsOspfPacketType }
	DESCRIPTION
           "An axsOspfConfigError trap signifies that a pack-
           et  has  been  received  on a virtual interface
           from a router  whose  configuration  parameters
           conflict   with   this  router's  configuration
           parameters.  Note that the event optionMismatch
           should  cause a trap only if it prevents an ad-
           jacency from forming."
	::= 5

axsOspfIfAuthFailure TRAP-TYPE
	ENTERPRISE      axsOspfTraps
	VARIABLES       { axsOspfIfDomainNumber, axsOspfRouterId, axsOspfIfIpAddress, axsOspfAddressLessIf, axsOspfPacketSrc, axsOspfConfigErrorType, axsOspfPacketType }
	DESCRIPTION
           "An axsOspfIfAuthFailure  trap  signifies  that  a
           packet  has  been received on a non-virtual in-
           terface from a router whose authentication  key
           or  authentication  type  conflicts  with  this
           router's authentication key  or  authentication
           type."
	::= 6

axsOspfVirtIfAuthFailure TRAP-TYPE
	ENTERPRISE      axsOspfTraps
	VARIABLES       { axsOspfVirtIfDomainNumber, axsOspfRouterId, axsOspfVirtIfAreaId, axsOspfVirtIfNeighbor, axsOspfConfigErrorType, axsOspfPacketType }
	DESCRIPTION
           "An axsOspfVirtIfAuthFailure trap signifies that a
           packet has been received on a virtual interface
           from a router whose authentication key  or  au-
           thentication  type conflicts with this router's
           authentication key or authentication type."
	::= 7

axsOspfIfStateChange TRAP-TYPE
	ENTERPRISE      axsOspfTraps
	VARIABLES       { axsOspfIfDomainNumber, axsOspfRouterId, axsOspfIfIpAddress, axsOspfAddressLessIf, axsOspfIfState }
	DESCRIPTION
           "An axsOspfIfStateChange trap signifies that there
           has been a change in the state of a non-virtual
           OSPF interface. This trap should  be  generated
           when  the interface state regresses (e.g., goes
           from Dr to Down) or progresses  to  a  terminal
           state  (i.e.,  Point-to-Point, DR Other, Dr, or
           Backup)."
	::= 16 

axsOadpNeighborCachelastChangeTrap TRAP-TYPE
	ENTERPRISE      axsOadpMIBNotifications
	VARIABLES       { axsOadpNeighborCacheLastChange }
	DESCRIPTION
           "This trap indicates that information of OADP neighbor nodes is updated."
	::= 1 

axsPimNeighborFound TRAP-TYPE
	ENTERPRISE      axsPimMIBObjects
	VARIABLES       { pimNeighborIfIndex }
	DESCRIPTION
             "This trap indicates that PIM neighbor found."
	::= 1

axsPimNeighborLoss TRAP-TYPE
	ENTERPRISE      axsPimMIBObjects
	VARIABLES       { pimNeighborIfIndex }
	DESCRIPTION
             "This trap indicates that PIM neighbor lost."
	::= 2
END

AX7800S-TRAP DEFINITIONS ::= BEGIN
IMPORTS
TRAP-TYPE
    FROM RFC-1215
ifIndex
    FROM RFC1213-MIB
ax7800s, ax7800sSystemMsgType, ax7800sSystemMsgTimeStamp, ax7800sSystemMsgLevel, ax7800sSystemMsgEventPoint,
ax7800sSystemMsgEventInterfaceID, ax7800sSystemMsgEventCode, ax7800sSystemMsgAdditionalCode, ax7800sSystemMsgText,
ax7800sChassisIndex, ax7800sBcuBoardIndex, ax7800sTemperatureStatusIndex, ax7800sTemperatureStatusDescr, 
ax7800sTemperatureStatusValue, ax7800sTemperatureState,
axsLoginName, axsLoginTime, axsLoginLocation, axsLoginLine, axsLoginFailureTime, axsLogoutTime, axsLogoutStatus,
axsGsrpGroupId, axsGsrpVlanGroupId, axsGsrpState
    FROM AX7800S
;
-- Traps for use by AlaxalA networks AX7800S

-- Traps are defined using the conventions in RFC 1215.

ax7800sSystemMsgTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { ax7800sSystemMsgType, ax7800sSystemMsgTimeStamp,
                          ax7800sSystemMsgLevel, ax7800sSystemMsgEventPoint,
                          ax7800sSystemMsgEventInterfaceID, ax7800sSystemMsgEventCode,
                          ax7800sSystemMsgAdditionalCode, ax7800sSystemMsgText }
	DESCRIPTION
		"System message is displayed."
	::= 1

ax7800sStandbySystemUpTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { ax7800sChassisIndex, ax7800sBcuBoardIndex }
	DESCRIPTION
		"Standby system is restarted."
	::= 2

ax7800sStandbySystemDownTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { ax7800sChassisIndex, ax7800sBcuBoardIndex }
	DESCRIPTION
		"Standby system is failed."
	::= 3

ax7800sTemperatureTrap TRAP-TYPE
	ENTERPRISE ax7800s
	VARIABLES {
		ax7800sChassisIndex,
		ax7800sBcuBoardIndex,
		ax7800sTemperatureStatusIndex,
		ax7800sTemperatureStatusDescr, 
		ax7800sTemperatureStatusValue, 
		ax7800sTemperatureState }
	DESCRIPTION
		"A ax7800sTemperatureTrap is sent if the 
		temperature measured at a given testpoint is outside 
		the normal range for the testpoint (i.e. is at the warning, 
		critical, or shutdown stage)."
	::= 4

-- axsGsrpStateTransitionTrap TRAP-TYPE
ax7800sGsrpStateTransitionTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { axsGsrpGroupId, axsGsrpVlanGroupId, axsGsrpState }
	DESCRIPTION
		"Changes of the VLAN group state of GSRP"
	::= 6

ax7800sAirFanStopTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	DESCRIPTION
             "This trap indicates a fan failure." 
	::= 8 

ax7800sPowerSupplyFailureTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	DESCRIPTION
             "This trap indicates one ( or more ) of power supplies failure." 
	::= 9 

ax7800sLoginSuccessTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { axsLoginName, axsLoginTime, axsLoginLocation, axsLoginLine }
	DESCRIPTION
             "This trap indicates success of user log in." 
	::= 10 

ax7800sLoginFailureTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { axsLoginName, axsLoginFailureTime, 
                          axsLoginLocation, axsLoginLine }
	DESCRIPTION
             "This trap indicates failure of user log in." 
	::= 11

ax7800sLogoutTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { axsLoginName, axsLoginTime, axsLogoutTime, 
                          axsLoginLocation, axsLoginLocation, axsLoginLine, 
                          axsLogoutStatus }
	DESCRIPTION
             "This trap indicates success of following log out.
	       'logout' command, 'exit' command, 'quit' command." 
	::= 12

ax7800sMemoryUsageTrap  TRAP-TYPE
	ENTERPRISE      ax7800s
	DESCRIPTION
             "This indicates available memory is fewer than lower limit." 
	::= 13

ax7800sFrameErrorReceiveTrap  TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { ifIndex }
	DESCRIPTION
             "This indicates frame receive error." 
	::= 18

ax7800sFrameErrorSendTrap  TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { ifIndex }
	DESCRIPTION
             "This indicates frame send error." 
	::= 19

-- axsEfmoamUdldPortInactivateTrap TRAP-TYPE
ax7800sEfmoamUdldPortInactivateTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { ifIndex }
	DESCRIPTION
             "Efmoam udld port inactivate trap."
	::= 29

-- axsEfmoamLoopDetectPortInactivateTrap TRAP-TYPE
ax7800sEfmoamLoopDetectPortInactivateTrap TRAP-TYPE
	ENTERPRISE      ax7800s
	VARIABLES       { ifIndex }
	DESCRIPTION
             "Efmoam loop detect port inactivate trap."
    ::= 30

END

-- Traps for use by AlaxalA networks AX5400S

-- Traps are defined using the conventions in RFC 1215.
AX5400S-TRAP DEFINITIONS ::= BEGIN
IMPORTS
TRAP-TYPE
    FROM RFC-1215
ifIndex
    FROM RFC1213-MIB
ax5400s, ax5400sSystemMsgType, ax5400sSystemMsgTimeStamp, ax5400sSystemMsgLevel, ax5400sSystemMsgEventPoint,
ax5400sSystemMsgEventInterfaceID, ax5400sSystemMsgEventCode, ax5400sSystemMsgAdditionalCode, ax5400sSystemMsgText,
ax5400sChassisIndex, ax5400sBcuBoardIndex, ax5400sTemperatureStatusIndex, ax5400sTemperatureStatusDescr, 
ax5400sTemperatureStatusValue, ax5400sTemperatureState,
axsLoginName, axsLoginTime, axsLoginLocation, axsLoginLine, axsLoginFailureTime, axsLogoutTime, axsLogoutStatus,
axsGsrpGroupId, axsGsrpVlanGroupId, axsGsrpState
    FROM AX7800S
;

ax5400sSystemMsgTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { ax5400sSystemMsgType, ax5400sSystemMsgTimeStamp,
                          ax5400sSystemMsgLevel, ax5400sSystemMsgEventPoint,
                          ax5400sSystemMsgEventInterfaceID, ax5400sSystemMsgEventCode,
                          ax5400sSystemMsgAdditionalCode, ax5400sSystemMsgText }
	DESCRIPTION
		"System message is displayed."
	::= 1

ax5400sStandbySystemUpTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { ax5400sChassisIndex, ax5400sBcuBoardIndex }
	DESCRIPTION
		"Standby system is restarted."
	::= 2

ax5400sStandbySystemDownTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { ax5400sChassisIndex, ax5400sBcuBoardIndex }
	DESCRIPTION
		"Standby system is failed."
	::= 3

ax5400sTemperatureTrap TRAP-TYPE
	ENTERPRISE ax5400s
	VARIABLES {
		ax5400sChassisIndex,
		ax5400sBcuBoardIndex,
		ax5400sTemperatureStatusIndex,
		ax5400sTemperatureStatusDescr, 
		ax5400sTemperatureStatusValue, 
		ax5400sTemperatureState }
	DESCRIPTION
		"A ax5400sTemperatureTrap is sent if the 
		temperature measured at a given testpoint is outside 
		the normal range for the testpoint (i.e. is at the warning, 
		critical, or shutdown stage)."
	::= 4

-- axsGsrpStateTransitionTrap TRAP-TYPE
ax5400sGsrpStateTransitionTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { axsGsrpGroupId, axsGsrpVlanGroupId, axsGsrpState }
	DESCRIPTION
		"Changes of the VLAN group state of GSRP"
	::= 6

ax5400sAirFanStopTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	DESCRIPTION
             "This trap indicates a fan failure." 
	::= 8 

ax5400sPowerSupplyFailureTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	DESCRIPTION
             "This trap indicates one ( or more ) of power supplies fail ure." 
	::= 9 

ax5400sLoginSuccessTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { axsLoginName, axsLoginTime, axsLoginLocation, axsLoginLine }
	DESCRIPTION
             "This trap indicates success of user log in." 
	::= 10 

ax5400sLoginFailureTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { axsLoginName, axsLoginFailureTime, 
                          axsLoginLocation, axsLoginLine }
	DESCRIPTION
             "This trap indicates failure of user log in." 
	::= 11

ax5400sLogoutTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { axsLoginName, axsLoginTime, axsLogoutTime, 
                          axsLoginLocation, axsLoginLocation, axsLoginLine, 
                          axsLogoutStatus }
	DESCRIPTION
             "This trap indicates success of following log out.
                'logout' command, 'exit' command, 'quit' command."
	::= 12

ax5400sMemoryUsageTrap  TRAP-TYPE
	ENTERPRISE      ax5400s
	DESCRIPTION
             "This indicates available memory is fewer than lower limit." 
	::= 13
	
ax5400sFrameErrorReceiveTrap  TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { ifIndex }
	DESCRIPTION
             "This indicates frame receive error." 
	::= 18

ax5400sFrameErrorSendTrap  TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { ifIndex }
	DESCRIPTION
             "This indicates frame send error." 
	::= 19
	
-- axsEfmoamUdldPortInactivateTrap TRAP-TYPE
ax5400sEfmoamUdldPortInactivateTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { ifIndex }
	DESCRIPTION
             "Efmoam udld port inactivate trap."
	::= 29

-- axsEfmoamLoopDetectPortInactivateTrap TRAP-TYPE
ax5400sEfmoamLoopDetectPortInactivateTrap TRAP-TYPE
	ENTERPRISE      ax5400s
	VARIABLES       { ifIndex }
	DESCRIPTION
             "Efmoam loop detect port inactivate trap."
    ::= 30
END
