DP-MIB DEFINITIONS ::= BEGIN

-- Title:      RADWARE
--             This Private MIB supports the Vgate
-- Version:    2.9
-- Date:       9 Apr 2000
-- By:         RMA (Radware MIB Authority)
-- E-mail:     US:            support@radware.com
--             International: support_int@radware.com
--
IMPORTS
       IpAddress,
       Counter
              FROM RFC1155-SMI
       OBJECT-TYPE
              FROM RFC-1212
       DisplayString,
       PhysAddress
              FROM RFC1213-MIB
       Ipv6Address 
              FROM IPV6-TC
       Counter32
	      FROM SNMPv2-SMI
       rdwrDP,
       rndErrorDesc,
       rndErrorSeverity              
              FROM RADWARE-MIB
       bgp
	      FROM BGP4-MIB;

    RowStatus ::= INTEGER {
        active(1),
        notInService(2),
        notReady(3),
        createAndGo(4),
        createAndWait(5),
        destroy(6)
        }
    FeatureStatus ::= INTEGER {
         enable(1),
         disable(2)
        }

-- Some MIB compilers require that the following 7 lines which define the path
-- to RND MIB are commented out:

-- mib            OBJECT IDENTIFIER ::= { mgmt 1  }
-- directory      OBJECT IDENTIFIER ::= { internet 1  }
-- experimental   OBJECT IDENTIFIER ::= { internet 3  }
-- private        OBJECT IDENTIFIER ::= { internet 4  }
-- enterprises    OBJECT IDENTIFIER ::= { private 1  }

rdwrDPPacketReport   OBJECT IDENTIFIER ::= { rdwrDP 1 }

rdwrDPPacketReportAddr OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "IP Address of packet reporting destination."
    ::=  { rdwrDPPacketReport 1}

-- obsolete
rdwrDPPacketReportDestPort OBJECT-TYPE
    SYNTAX  INTEGER  (0..65535)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Packet reporting destination port."
    DEFVAL { 2088 }
 ::= { rdwrDPPacketReport 2}

rdwrDPPacketReportStatus OBJECT-TYPE
    SYNTAX INTEGER {
      enable(1),
      disable(2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Enable\Disable packet reporting globally."
    DEFVAL { disable }
 ::=  { rdwrDPPacketReport 3 }  

rdwrDPPassiveSSL  OBJECT IDENTIFIER ::= { rdwrDP 2 }

rdwrDPPassiveSSLPortTable OBJECT-TYPE
    SYNTAX SEQUENCE OF RdwrDPPassiveSSLPortEntry
    ACCESS not-accessible
    STATUS  mandatory
    DESCRIPTION
      "Table containing the passive SSL physical ports relationship."
    ::= { rdwrDPPassiveSSL 1 }

rdwrDPPassiveSSLPortEntry OBJECT-TYPE
    SYNTAX RdwrDPPassiveSSLPortEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
       "The row definition for this table."
    INDEX { rdwrDPPassiveSSLSourcePort }
    ::=  { rdwrDPPassiveSSLPortTable 1 }

RdwrDPPassiveSSLPortEntry ::= SEQUENCE {
    rdwrDPPassiveSSLSourcePort INTEGER,
    rdwrDPPassiveSSLAcceleratorPort INTEGER,
    rdwrDPPassiveSSLPortStatus RowStatus
}

rdwrDPPassiveSSLSourcePort OBJECT-TYPE
    SYNTAX INTEGER
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The index of the source port."
    ::=  { rdwrDPPassiveSSLPortEntry 1 }

rdwrDPPassiveSSLAcceleratorPort OBJECT-TYPE
    SYNTAX INTEGER
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The passive SSL Accelerator port."
    ::=  { rdwrDPPassiveSSLPortEntry 2 }

rdwrDPPassiveSSLPortStatus OBJECT-TYPE
    SYNTAX RowStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
       "This variable indicates the administrative status of this entry.
        Used to delete an entry of this table."
    ::=  { rdwrDPPassiveSSLPortEntry 3 }


rdwrDPPassiveSSLTcpPortTable OBJECT-TYPE
    SYNTAX SEQUENCE OF RdwrDPPassiveSSLTcpPortEntry
    ACCESS not-accessible
    STATUS  mandatory
    DESCRIPTION
      "Table containing the passive SSL TCP ports translation."
    ::= { rdwrDPPassiveSSL 2 }

rdwrDPPassiveSSLTcpPortEntry OBJECT-TYPE
    SYNTAX RdwrDPPassiveSSLTcpPortEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
       "The row definition for this table."
    INDEX { rdwrDPPassiveSSLTcpSSLPort }
    ::=  { rdwrDPPassiveSSLTcpPortTable 1 }

RdwrDPPassiveSSLTcpPortEntry::= SEQUENCE {
    rdwrDPPassiveSSLTcpSSLPort INTEGER,
    rdwrDPPassiveSSLTcpDecryptedPort INTEGER,
    rdwrDPPassiveSSLTcpPortStatus RowStatus
}

rdwrDPPassiveSSLTcpSSLPort OBJECT-TYPE
    SYNTAX INTEGER (0..65535)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The index of the source port."
    ::=  { rdwrDPPassiveSSLTcpPortEntry 1 }

rdwrDPPassiveSSLTcpDecryptedPort OBJECT-TYPE
    SYNTAX INTEGER (0..1023)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The passive SSL Accelerator port."
    ::=  { rdwrDPPassiveSSLTcpPortEntry 2 }

rdwrDPPassiveSSLTcpPortStatus OBJECT-TYPE
    SYNTAX RowStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
       "This variable indicates the administrative status of this entry.
        Used to delete an entry of this table."
    ::=  { rdwrDPPassiveSSLTcpPortEntry 3 }

rdwrDPBypassStatus OBJECT-TYPE
    SYNTAX INTEGER {
        enable(1),
        disable(2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "Bypass status of all ports."
    DEFVAL { disable }
    ::=  { rdwrDP 3}


rsSmeOverloadMechanism OBJECT-TYPE
    SYNTAX INTEGER {
        enable(1),
        disable(2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "Sme Overload Mechanism."
    DEFVAL { disable }
    ::=  { rdwrDP 4}


rsOverloadAlerts OBJECT-TYPE
    SYNTAX INTEGER {
        enable(1),
        disable(2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "Overload Alerts."
    DEFVAL { disable }
    ::=  { rdwrDP 5}

rsGlobalOverloadMechanism OBJECT-TYPE
    SYNTAX INTEGER {
        enable(1),
        disable(2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "Overload Mechanism."
    DEFVAL { disable }
    ::=  { rdwrDP 6}

rdwrDPBuildID OBJECT-TYPE
    SYNTAX INTEGER (0..65535)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "Software BuildID."
    ::=  { rdwrDP 7 }
	
rdwrDPNetDrvVersion OBJECT-TYPE
    SYNTAX DisplayString 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "The net Driver version"
    ::=  {rdwrDP 8}
	
rdwrDPAccRamSize OBJECT-TYPE
    SYNTAX INTEGER (0..65535)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "Accelerator RAM size."
    ::=  { rdwrDP 9 }

rdwrDPHighAvailability OBJECT IDENTIFIER ::= { rdwrDP 10 }
	
rdwrDPHighAvailabilityDevicePriority  OBJECT-TYPE
 SYNTAX INTEGER {
      secondary(0),
      primary(1),
	  standAlone(2)
   }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The Priority of the device Primary, Secondary or stand alone"
   DEFVAL  {standAlone}
    ::= {rdwrDPHighAvailability 1}
			
rdwrDPHighAvailabilityKeepAliveTimeout OBJECT-TYPE
	SYNTAX INTEGER (10..30)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "High Availability retries number"
	DEFVAL  { 10 }
    ::= {rdwrDPHighAvailability 2}
	
rdwrDPHighAvailabilityLinkDownTimeout OBJECT-TYPE
	SYNTAX INTEGER (1..65535)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "High Availability link down timeout - in sec"
	DEFVAL  { 1 }
    ::= {rdwrDPHighAvailability 3}
	
rdwrDPHighAvailabilityLineDetectStatus OBJECT-TYPE
 SYNTAX INTEGER {
      enable(1),
      disable(2)
   }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "Idle line detection status"
   DEFVAL  {disable}
    ::= {rdwrDPHighAvailability 4}
	
	
rdwrDPHighAvailabilityBW OBJECT-TYPE
	SYNTAX INTEGER
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "Total BW threshold - in kbits/sec"
	DEFVAL  { 512 }
    ::= {rdwrDPHighAvailability 5}
	
rdwrDPHighAvailabilityIdleLineTimeout OBJECT-TYPE
	SYNTAX INTEGER (3..65535)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "Idle line timeout - sec"
	DEFVAL  { 65535 }
    ::= {rdwrDPHighAvailability 6}

rdwrDPHighAvailabilitySwitchOverTimeout OBJECT-TYPE
	SYNTAX INTEGER (30..3600)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "Switch-Over timeout - in sec"
	DEFVAL  { 180 }
    ::= {rdwrDPHighAvailability 7}	

rdwrDPHighAvailabilitySwitchOverAction OBJECT-TYPE
    SYNTAX INTEGER {
        switchOver(1)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION "Switch Over to peer device"
    ::= { rdwrDPHighAvailability 8 }
	
rdwrDPHighAvailabilityCurrentState OBJECT-TYPE
    SYNTAX INTEGER {
		pairNotDefined(0),
        disconnected(1),
		negotiate(2),
		synchronizing(3),
		inSync(4),
		holdOn(5)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION "The current mehanism state "
    ::= { rdwrDPHighAvailability 9 }

rdwrDPHighAvailabilityProtectionState OBJECT-TYPE
    SYNTAX INTEGER {
        active(1),
		passive(2)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION "The current mehanism state "
	DEFVAL  {1}
    ::= { rdwrDPHighAvailability 10 }

rdwrDPHighAvailabilityForceSyncAction OBJECT-TYPE
    SYNTAX INTEGER {
        activateSync(1)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION "Force baseline sync with peer"
    ::= { rdwrDPHighAvailability 11 }	

rdwrDPHighAvailabilityLastSyncTime OBJECT-TYPE
    SYNTAX DisplayString
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION "Last successful sync time"
    ::= { rdwrDPHighAvailability 12 }	
	
rdwrDPHighAvailabilityPeerIpAddrMngOne OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The peer IP address of managment one."
	::= {rdwrDPHighAvailability 13}
	
	
rdwrDPHighAvailabilityPeerIpAddrMngTwo OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The peer IP address of managment two."
	::= {rdwrDPHighAvailability 14}
	
rdwrDPHighAvailabilityPeerUserName OBJECT-TYPE
    SYNTAX DisplayString
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION "Peer device user name"
    ::= { rdwrDPHighAvailability 15 }
	
rdwrDPHighAvailabilityPeerPassword OBJECT-TYPE
    SYNTAX DisplayString 
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "Peer device user password."
    ::=  { rdwrDPHighAvailability 16 }

rdwrDPHighAvailabilityBaseLineSyncInterval OBJECT-TYPE
	SYNTAX INTEGER (3600..86400)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "Base Line sync interval - in sec"
	DEFVAL  { 3600 }
    ::= {rdwrDPHighAvailability 17}
	
rdwrDPHighAvailabilityDevicePriorityDisplay OBJECT-TYPE
    SYNTAX INTEGER {
        secondary(0),
	primary(1),
	standAlone(2)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION "The Priority of the device display string purpose only"
	DEFVAL  {1}
    ::= { rdwrDPHighAvailability 18 }
	
	
rdwrDPHighAvailabilityPairAction OBJECT-TYPE
    SYNTAX INTEGER {
        setPair(1)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION "Set or update high availability pair"
    ::= { rdwrDPHighAvailability 19 }	

rdwrDPHighAvailabilityImmediateSync OBJECT-TYPE
    SYNTAX INTEGER {
      enable(1),
      disable(2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Enable\Disable base-line sync immediatly on update."
    DEFVAL { disable }
    ::= { rdwrDPHighAvailability 20 }
	
rdwrDPHighAvailabilityStatus  OBJECT-TYPE
 SYNTAX INTEGER {
      enable(1),
      disable(2)
   }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The status of high availability mechanism"
   DEFVAL  {enable}
    ::= {rdwrDPHighAvailability 21}
	
rdwrDPHighAvailabilityFailBack  OBJECT-TYPE
 SYNTAX INTEGER {
      enable(1),
      disable(2)
   }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "Fail Back to Primary"
   DEFVAL  {disable}
    ::= {rdwrDPHighAvailability 22}

rdwrDPOverload OBJECT IDENTIFIER ::= { rdwrDP 11 }

rsOverloadMechanismCongestionStatus OBJECT-TYPE
    SYNTAX INTEGER {
        noCongestion(0),
        smeCongestion(1),
		acceleratorCongestion(2),
		masterCongestion(3),
		wireBypass(4)		
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "Overload Mechanism congestion status"
    DEFVAL { noCongestion }
    ::=  {rdwrDPOverload 1}

rsOverloadThresholdsTable OBJECT-TYPE
    SYNTAX SEQUENCE OF RsOverloadThresholdsEntry
    ACCESS not-accessible
    STATUS  mandatory
    DESCRIPTION
      "Table containing the thresholds for overload mechanism"
    ::=  {rdwrDPOverload 2}
	
rsOverloadThresholdsEntry OBJECT-TYPE
    SYNTAX RsOverloadThresholdsEntry
    ACCESS not-accessible
    STATUS  mandatory
    DESCRIPTION
       "The row definition for overload table."
    INDEX { rsOverloadModuleType, rsOverloadCongestionElement,rsOverloadThresholdType  }
    ::=  { rsOverloadThresholdsTable 1 }

RsOverloadThresholdsEntry ::= SEQUENCE {
	rsOverloadModuleType INTEGER,
    rsOverloadCongestionElement INTEGER,
	rsOverloadThresholdType INTEGER,
    rsOverloadThresholdValue INTEGER,
    rsOverloadThresholdRowStatus RowStatus
}

rsOverloadModuleType OBJECT-TYPE
   SYNTAX INTEGER {
   accelerator(0), 
   master(1), 
   sme(2)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
       "The module of which its threshold are defined" 
    ::=  { rsOverloadThresholdsEntry 1}

rsOverloadCongestionElement OBJECT-TYPE
   SYNTAX INTEGER {
   buffer(1), 
   cpu(2),
   sendError(3)
   }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
       "The module of which its threshold are defined" 
    ::=  { rsOverloadThresholdsEntry 2}
	
rsOverloadThresholdType OBJECT-TYPE
   SYNTAX INTEGER {
   low(0), 
   opt(1),
   neg(2),
   maxRegular(3),
   activePeriod(4)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
       "The type of threshold" 
    ::=  { rsOverloadThresholdsEntry 3}
	
rsOverloadThresholdValue OBJECT-TYPE
   SYNTAX INTEGER (1..100000)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
       "The value of threshold" 
    ::=  { rsOverloadThresholdsEntry 4}

rsOverloadThresholdRowStatus OBJECT-TYPE
    SYNTAX RowStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
       "This variable indicates the administrative status of this entry.
        Used to delete an entry of this table."
    ::=  { rsOverloadThresholdsEntry 5 }
	
rsOverloadThresholdsDefault OBJECT-TYPE
 SYNTAX INTEGER 
   ACCESS  read-write
   STATUS  mandatory
   DESCRIPTION
       "return to default overload thresholds"
    ::=  {rdwrDPOverload 3}
	
rdwrDPJumboFrames OBJECT IDENTIFIER ::= { rdwrDP 12 }

rdwrDPJumboFramesMaxSwitchSize OBJECT-TYPE
   SYNTAX INTEGER (1550..16000)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
       "Max Frame Size for switch" 
	DEFVAL { 1550 }
    ::=  { rdwrDPJumboFrames 1}
	
rdwrDPJumboFramesMaxInspectionSize OBJECT-TYPE
   SYNTAX INTEGER (1550..16000)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
       "Max Frame Size for inspection" 
	DEFVAL { 1550 }
    ::=  { rdwrDPJumboFrames 2}
	
rdwrDPJumboFramesProcessStatus OBJECT-TYPE
   SYNTAX INTEGER {
      enable(1),
      disable(2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
       "Jumbo Frames Mechanism status" 
	DEFVAL {2}
    ::=  { rdwrDPJumboFrames 3}
	
	
rdwrDPRouting OBJECT IDENTIFIER ::= { rdwrDP 13 }

rdwrDPRoutingStatus OBJECT-TYPE
    SYNTAX INTEGER {
      routing(1),
      transparent(2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Defines the DP working-mode (transparent or routing)."
    DEFVAL { transparent }
 ::=  { rdwrDPRouting 1 }  
	
rdwrDPRoutingVifTable OBJECT-TYPE
    SYNTAX SEQUENCE OF RdwrDPRoutingVifEntry
    ACCESS not-accessible
    STATUS  mandatory
    DESCRIPTION
      "Table containing the DP Virtual-Interface parameters used in Routing-Mode."
    ::= { rdwrDPRouting 2 }

rdwrDPRoutingVifEntry OBJECT-TYPE
    SYNTAX RdwrDPRoutingVifEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
       "The row definition for this table."
    INDEX { rdwrDPRoutingVifIndex }
    ::=  { rdwrDPRoutingVifTable 1 }

RdwrDPRoutingVifEntry ::= SEQUENCE {
    rdwrDPRoutingVifIndex INTEGER,
    rdwrDPRoutingVifInterface INTEGER,
    rdwrDPRoutingVifMac PhysAddress,
    rdwrDPRoutingVifIp Ipv6Address,
    rdwrDPRoutingVifMask DisplayString,
    rdwrDPRoutingVifVlanType INTEGER,
    rdwrDPRoutingVifVlanTag INTEGER,
    rdwrDPRoutingVifAdminStatus INTEGER,
    rdwrDPRoutingVifOperStatus INTEGER,
    rdwrDPRoutingVifRowStatus RowStatus
}

rdwrDPRoutingVifIndex OBJECT-TYPE
    SYNTAX INTEGER
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The index of the VIF table."
    ::=  { rdwrDPRoutingVifEntry 1 }

rdwrDPRoutingVifInterface OBJECT-TYPE
    SYNTAX INTEGER
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The physical interface of the VIF."
    ::=  { rdwrDPRoutingVifEntry 2 }

rdwrDPRoutingVifMac OBJECT-TYPE
    SYNTAX PhysAddress
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The MAC address of the VIF port."
    ::=  { rdwrDPRoutingVifEntry 3 }

rdwrDPRoutingVifIp OBJECT-TYPE
    SYNTAX Ipv6Address
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The IP address of the VIF port."
    ::=  { rdwrDPRoutingVifEntry 4 }
    
rdwrDPRoutingVifMask OBJECT-TYPE
    SYNTAX DisplayString
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The subnet mask of the VIF IP address."
    ::=  { rdwrDPRoutingVifEntry 5 }
    
rdwrDPRoutingVifVlanType OBJECT-TYPE
    SYNTAX INTEGER {
      ignore(1),
      none(2),
      all(3),
      specific(4)
	}
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The VLAN-Tag treatment type of the VIF (may be 'N/A', 'None', 'ALL', or Specific)."
	DEFVAL { specific }
    ::=  { rdwrDPRoutingVifEntry 6 }
    
rdwrDPRoutingVifVlanTag OBJECT-TYPE
    SYNTAX INTEGER
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The VLAN-Tag of the VIF."
    ::=  { rdwrDPRoutingVifEntry 7 }
    
rdwrDPRoutingVifAdminStatus OBJECT-TYPE
    SYNTAX INTEGER {
      up(1),
      down(2)
    }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The desired status of the VIF"
	  DEFVAL { up }
    ::=  { rdwrDPRoutingVifEntry 8 }
    
rdwrDPRoutingVifOperStatus OBJECT-TYPE
    SYNTAX INTEGER {
      up(1),
      down(2)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The current Operational status of the VIF"
    ::=  { rdwrDPRoutingVifEntry 9 }
    
rdwrDPRoutingVifRowStatus OBJECT-TYPE
    SYNTAX RowStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
       "This variable indicates the administrative status of this entry.
        Used to delete an entry of this table."
    ::=  { rdwrDPRoutingVifEntry 10 }

rdwrDPRoutingIpForwardingTable OBJECT-TYPE
    SYNTAX SEQUENCE OF RdwrDPRoutingIpForwardingEntry
    ACCESS not-accessible
    STATUS  mandatory
    DESCRIPTION
      "Table containing the DP Virtual-Interface pairs for Routing-Mode."
    ::= { rdwrDPRouting 3 }

rdwrDPRoutingIpForwardingEntry OBJECT-TYPE
    SYNTAX RdwrDPRoutingIpForwardingEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
       "The row definition for this table."
    INDEX { rdwrDPRoutingIpForwardingIngressVif }
    ::=  { rdwrDPRoutingIpForwardingTable 1 }

RdwrDPRoutingIpForwardingEntry ::= SEQUENCE {
    rdwrDPRoutingIpForwardingIngressVif INTEGER,
    rdwrDPRoutingIpForwardingEgressVif INTEGER,
    rdwrDPRoutingIpForwardingNextHop Ipv6Address,
    rdwrDPRoutingIpForwardingNextHopMac PhysAddress,
    rdwrDPRoutingIpForwardingAdminStatus INTEGER,
    rdwrDPRoutingIpForwardingOperStatus INTEGER,
    rdwrDPRoutingIpForwardingRowStatus RowStatus
}

rdwrDPRoutingIpForwardingIngressVif OBJECT-TYPE
    SYNTAX INTEGER
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The Ingress virtual interface of the ip-forwarding entry."
    ::=  { rdwrDPRoutingIpForwardingEntry 1 }

rdwrDPRoutingIpForwardingEgressVif OBJECT-TYPE
    SYNTAX INTEGER
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The Egress virtual interface of the ip-forwarding entry."
    ::=  { rdwrDPRoutingIpForwardingEntry 2 }

rdwrDPRoutingIpForwardingNextHop OBJECT-TYPE
    SYNTAX Ipv6Address
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The next-hop IP address of the ip-forwarding entry."
    ::=  { rdwrDPRoutingIpForwardingEntry 3 }
    
rdwrDPRoutingIpForwardingNextHopMac OBJECT-TYPE
    SYNTAX PhysAddress
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The MAC of the next-hop IP of the ip-forwarding entry."
    ::=  { rdwrDPRoutingIpForwardingEntry 4 }
    
    
rdwrDPRoutingIpForwardingAdminStatus OBJECT-TYPE
    SYNTAX INTEGER {
      up(1),
      down(2)
    }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The desired status of the ip-forwarding entry"
	DEFVAL { up }
    ::=  { rdwrDPRoutingIpForwardingEntry 5 }
    
rdwrDPRoutingIpForwardingOperStatus OBJECT-TYPE
    SYNTAX INTEGER {
      up(1),
      down(2)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The current Operational status of the ip-forwarding entry"
    ::=  { rdwrDPRoutingIpForwardingEntry 6 }
    
rdwrDPRoutingIpForwardingRowStatus OBJECT-TYPE
    SYNTAX RowStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
       "This variable indicates the administrative status of this entry.
        Used to delete an entry of this table."
    ::=  { rdwrDPRoutingIpForwardingEntry 7 }

rdwrDPChallengePersistencyMode   OBJECT-TYPE
    SYNTAX INTEGER {
       origin-port(1),
       routing-table(2)
   }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
           "This variable decides the path that the challenge packets take - 
	    Original path or L3 Routed path"
    DEFVAL  { routing-table }
    ::= {rdwrDP 14}
    
rdwrDPVersion OBJECT-TYPE
    SYNTAX DisplayString 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "DefensePro version"
    ::=  {rdwrDP 18}
	
rdwrDPBypassJumboFramesStatus OBJECT-TYPE
    SYNTAX INTEGER {
      enable(1),
      disable(2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Enable\Disable jumbo frames bypass."
    DEFVAL { disable }
 ::=  { rdwrDP 19 } 

rdwrDPEZChipEnabled OBJECT-TYPE
    SYNTAX INTEGER {
      false(0),
      true(1)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
      "Whether the EZChip Hardware accelerator exists or not."
 ::=  { rdwrDP 20 } 

rdwrDPOperationSwitchMode OBJECT-TYPE
    SYNTAX INTEGER {
      transparent(1),
      ip(2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "Indicates the device operation mode. In transparent mode the
       forwarding decision is based on the static forwarding table.
       However in ip mode meaning the forwarding decision is based  
       on the routing table. The ip operation mode should be choosed 
       in OOP deployment."
       DEFVAL { transparent }
 ::=  { rdwrDP 24 } 

rdwrBgp  OBJECT IDENTIFIER ::= { rdwrDP 22 }

rdwrBgpAdminStatus OBJECT-TYPE
   SYNTAX  FeatureStatus
   ACCESS  read-write
   STATUS  mandatory
   DESCRIPTION
         "Global BGP admin status."
   DEFVAL { disable }
   ::= { rdwrBgp 2 }

rdwrBgpLocalAS OBJECT-TYPE
   SYNTAX Counter32
   ACCESS read-write
   STATUS mandatory
   DESCRIPTION
         "The Autonomous System (AS) number of this site"
   DEFVAL { 65535 }
   ::= { rdwrBgp 3 }


-- Radware BGP Peer table. Configure peers using this table.

                rdwrBgpPeerTable OBJECT-TYPE
                    SYNTAX     SEQUENCE OF RdwrBgpPeerEntry
                    ACCESS     not-accessible
                    STATUS     mandatory
                    DESCRIPTION
                            "BGP peer table. "
                    ::= { rdwrBgp 4 }

                rdwrBgpPeerEntry OBJECT-TYPE
                    SYNTAX     RdwrBgpPeerEntry
                    ACCESS     not-accessible
                    STATUS     mandatory
                    DESCRIPTION
                            "Entry containing peer configuration parameters and information"
                    INDEX { rdwrBgpPeerRemoteAddr }
                    ::= { rdwrBgpPeerTable 1 }

                RdwrBgpPeerEntry ::= SEQUENCE {
                        rdwrBgpPeerRemoteAddr                IpAddress,
			rdwrBgpPeerDefaultNextHop	     IpAddress,
                        rdwrBgpPeerAdminStatus               FeatureStatus,
                        rdwrBgpPeerConnectRetryInterval      INTEGER,
                        rdwrBgpPeerHoldTime                  INTEGER,
                        rdwrBgpPeerKeepAlive                 INTEGER,
                        rdwrBgpPeerState                     INTEGER,
                        rdwrBgpPeerRemoteAs                  Counter32,
                        rdwrBgpPeerLastError                 DisplayString,
  	   		rdwrBgpPeerMD5Secret		     DisplayString,
  	  		rdwrBgpPeer4BytesAsSupport	     FeatureStatus,
  	   		rdwrBgpPeerNoAdvertise   	     FeatureStatus,
	   		rdwrBgpPeerNoExport		     FeatureStatus,
	   		rdwrBgpPeerNoPeer		     FeatureStatus,
                        rdwrBgpPeerRowStatus                 RowStatus,
                        rdwrBgpPeerIPv6NextHop	             Ipv6Address    
                        }

                rdwrBgpPeerRemoteAddr OBJECT-TYPE
                    SYNTAX     IpAddress
                    ACCESS     read-only
                    STATUS     mandatory
                    DESCRIPTION
                            "The BGP Identifier of this entry's BGP
                            peer."
                    ::= { rdwrBgpPeerEntry 1 }


                rdwrBgpPeerDefaultNextHop OBJECT-TYPE
                    SYNTAX     IpAddress
                    ACCESS     read-write
                    STATUS     mandatory
                    DESCRIPTION
                            "The BGP Identifier of this entry's BGP
                            peer."
                    ::= { rdwrBgpPeerEntry 2 }


                rdwrBgpPeerAdminStatus OBJECT-TYPE
                    SYNTAX     FeatureStatus
                    ACCESS     read-write
                    STATUS     mandatory
                    DESCRIPTION
                            "The desired state of the BGP connection.
                            A transition from 'stop' to 'start' will
                            cause the BGP Start Event to be generated.
                            A transition from 'start' to 'stop' will
                            cause the BGP Stop Event to be generated.
                            This parameter can be used to restart BGP
                            peer connections.  Care should be used in
                            providing write access to this object
                            without adequate authentication."
                     DEFVAL { enable }
                    ::= { rdwrBgpPeerEntry 3 }

                rdwrBgpPeerConnectRetryInterval OBJECT-TYPE
                    SYNTAX     INTEGER (1..65535)
                    ACCESS     read-write
                    STATUS     mandatory
                    DESCRIPTION
                            "Time interval in seconds for the
                            ConnectRetry timer.  The suggested value
                            for this timer is 120 seconds."
                    DEFVAL { 120 }
                    ::= { rdwrBgpPeerEntry 4 }



                rdwrBgpPeerHoldTime OBJECT-TYPE
                    SYNTAX     INTEGER ( 0 | 3..65535 )
                    ACCESS     read-write
                    STATUS     mandatory
                    DESCRIPTION
                            "Time interval in seconds for the Hold Time
                            configured for this BGP speaker with this
                            peer.  This value is placed in an OPEN
                            message sent to this peer by this BGP
                            speaker, and is compared with the Hold
                            Time field in an OPEN message received
                            from the peer when determining the Hold
                            Time (bgpPeerHoldTime) with the peer.
                            This value must not be less than three
                            seconds if it is not zero (0) in which
                            case the Hold Time is NOT to be
                            established with the peer.  The suggested
                            value for this timer is 90 seconds."
                    DEFVAL { 90 }
                    ::= { rdwrBgpPeerEntry 5 }

                rdwrBgpPeerKeepAlive OBJECT-TYPE
                    SYNTAX     INTEGER ( 0 | 1..21845 )
                    ACCESS     read-write
                    STATUS     mandatory
                    DESCRIPTION
                            "Time interval in seconds for the
                            KeepAlive timer configured for this BGP
                            speaker with this peer.  The value of this
                            object will only determine the
                            KEEPALIVE messages' frequency relative to
                            the value specified in
                            bgpPeerHoldTimeConfigured; the actual
                            time interval for the KEEPALIVE messages
                            is indicated by bgpPeerKeepAlive.  A
                            reasonable maximum value for this timer
                            would be configured to be one
                            third of that of
                            bgpPeerHoldTimeConfigured.
                            If the value of this object is zero (0),
                            no periodical KEEPALIVE messages are sent
                            to the peer after the BGP connection has
                            been established.  The suggested value for
                            this timer is 30 seconds."
                    DEFVAL { 30 }
                    ::= { rdwrBgpPeerEntry 6 }

               rdwrBgpPeerState OBJECT-TYPE
                    SYNTAX     INTEGER {
                                        idle(1),
                                        connect(2),
                                        active(3),
                                        opensent(4),
                                        openconfirm(5),
                                        established(6)
                               }
                    ACCESS     read-only
                    STATUS     mandatory
                    DESCRIPTION
                            "The BGP peer connection state."
                    ::= { rdwrBgpPeerEntry 7 }

                rdwrBgpPeerRemoteAs OBJECT-TYPE
                    SYNTAX     Counter32
                    ACCESS     read-only
                    STATUS     mandatory
                    DESCRIPTION
                            "The remote autonomous system number."
                    ::= { rdwrBgpPeerEntry 8 }

                rdwrBgpPeerLastError OBJECT-TYPE
                    SYNTAX     DisplayString (SIZE(0..255))
                    ACCESS     read-only
                    STATUS     mandatory
                    DESCRIPTION
                            "The last error message seen by this peer."
                    ::= { rdwrBgpPeerEntry 9 }

                rdwrBgpPeerMD5Secret OBJECT-TYPE
                    SYNTAX     DisplayString (SIZE(0..255))
                    ACCESS     read-write
                    STATUS     mandatory
                    DESCRIPTION
                            "The MD5 secret for this peer."
                    ::= { rdwrBgpPeerEntry 10 }


                rdwrBgpPeer4BytesAsSupport OBJECT-TYPE
                    SYNTAX FeatureStatus
                    ACCESS     read-write
                    STATUS     mandatory
                    DESCRIPTION
                            "4 Bytes AS support for this peer."
		    DEFVAL { enable }
                    ::= { rdwrBgpPeerEntry 11 }


                rdwrBgpPeerNoAdvertise OBJECT-TYPE
                    SYNTAX 	FeatureStatus
                    ACCESS     	read-write
                    STATUS      mandatory
                    DESCRIPTION
                            "No Advertise status for this peer."
		    DEFVAL { enable }
                    ::= { rdwrBgpPeerEntry 12 }

                rdwrBgpPeerNoExport OBJECT-TYPE
                    SYNTAX	FeatureStatus
                    ACCESS	read-write
                    STATUS	mandatory
                    DESCRIPTION
                            "No Export status for this peer."
		    DEFVAL { enable }
                    ::= { rdwrBgpPeerEntry 13 }


                rdwrBgpPeerNoPeer OBJECT-TYPE
                    SYNTAX	FeatureStatus
                    ACCESS	read-write
                    STATUS	mandatory
                    DESCRIPTION
                            "No Peer status for this peer."
		    DEFVAL { enable }
		    ::= { rdwrBgpPeerEntry 14 }

                rdwrBgpPeerRowStatus OBJECT-TYPE
                     SYNTAX  RowStatus
                     ACCESS  read-write
                     STATUS  mandatory
                     DESCRIPTION
                        "This variable indicates the administrative action to perform on the entry.
                         create / update / delete."
                    ::=  { rdwrBgpPeerEntry 15 }
                
                
                 rdwrBgpPeerIPv6NextHop OBJECT-TYPE
                     SYNTAX  Ipv6Address
                     ACCESS  read-write
                     STATUS  mandatory
                     DESCRIPTION
                        " Defines the ipv6 address of the next hop router to be published,
                          when sending update message with MP_REACH_NLRI attribue as defined
                          in RFC 4760."
                    ::=  { rdwrBgpPeerEntry 16 }           
     


rdwrBgpTraps  OBJECT IDENTIFIER ::= { rdwrBgp 5 }

    rdwrBgpEstablished TRAP-TYPE
        ENTERPRISE rdwrBgpTraps
        VARIABLES { rndErrorDesc, rndErrorSeverity }
        DESCRIPTION
           "The BGP Established event is generated when
            the BGP FSM enters the ESTABLISHED state."

    ::= 16


    rdwrBgpBackwardTransition TRAP-TYPE
        ENTERPRISE rdwrBgpTraps
        VARIABLES { rndErrorDesc, rndErrorSeverity }
        DESCRIPTION
           "The BGPBackwardTransition Event is generated
            when the BGP FSM moves from a higher numbered
            state to a lower numbered statee."

    ::= 17


rdwrBgpInitDelay OBJECT-TYPE
   SYNTAX  INTEGER (15..120)
   ACCESS read-write
   STATUS  mandatory
   DESCRIPTION
         "Time in seconds to wait at device startup before establishing BGP connections"
   DEFVAL { 15 }
   ::= { rdwrBgp 6 }
   
rdwrBgpInternalLoopback OBJECT-TYPE
   SYNTAX  IpAddress
   ACCESS read-write
   STATUS  mandatory
   DESCRIPTION
         "Loopback address to use for BGP connections"
   ::= { rdwrBgp 8 }
   
   

rdwrBgpPeerDestRouteTable OBJECT-TYPE
                    SYNTAX     SEQUENCE OF RdwrBgpPeerDestRouteEntry
                    ACCESS     not-accessible
                    STATUS     mandatory
                    DESCRIPTION
                            "BGP peer table. "
                    ::= { rdwrBgp 7 }

                rdwrBgpPeerDestRouteEntry OBJECT-TYPE
                    SYNTAX     RdwrBgpPeerDestRouteEntry
                    ACCESS     not-accessible
                    STATUS     mandatory
                    DESCRIPTION
                            "Entry containing peer configuration parameters and information"
                    INDEX { rdwrBgpPeerDestIp ,rdwrBgpPeerDestNetwork}
                    ::= { rdwrBgpPeerDestRouteTable 1 }


		RdwrBgpPeerDestRouteEntry ::= SEQUENCE {
                        rdwrBgpPeerDestIp   	             IpAddress,
			rdwrBgpPeerDestNetwork               Ipv6Address,
                        rdwrBgpPeerDestPrefix		     INTEGER,
                        rdwrBgpPeerDestUpdateStatus          FeatureStatus,
                        rdwrBgpPeerDestRowStatus                 RowStatus
                        }
			

                rdwrBgpPeerDestIp OBJECT-TYPE
                    SYNTAX     IpAddress
                    ACCESS     read-only
                    STATUS     mandatory
                    DESCRIPTION
                            "The BGP's IP Address."
                    ::= { rdwrBgpPeerDestRouteEntry 1 }



                rdwrBgpPeerDestNetwork OBJECT-TYPE
                    SYNTAX     Ipv6Address
                    ACCESS     read-write
                    STATUS     mandatory
                    DESCRIPTION
                            "The address to be sent to the peer in the udpate/withdraw message."
                    ::= { rdwrBgpPeerDestRouteEntry 2 }

		rdwrBgpPeerDestPrefix OBJECT-TYPE
                    SYNTAX     INTEGER (1..128)
                    ACCESS     read-write
                    STATUS     mandatory
                    DESCRIPTION
                            "THe prefix of the address to be send to the peer in the update/withdraw message."
                    DEFVAL { 16 }

                    ::= { rdwrBgpPeerDestRouteEntry 3 }

                rdwrBgpPeerDestUpdateStatus OBJECT-TYPE
                    SYNTAX     FeatureStatus
                    ACCESS     read-write
                    STATUS     mandatory
                    DESCRIPTION
                         "1 =update=Enabled.
			  2 =withdraw=Disabled.
			  The kind of update message that will be sent to the peer."
                     DEFVAL { enable }
                    ::= { rdwrBgpPeerDestRouteEntry 4 }

                
                rdwrBgpPeerDestRowStatus OBJECT-TYPE
                     SYNTAX  RowStatus
                     ACCESS  read-write
                     STATUS  mandatory
                     DESCRIPTION
                        "This variable indicates the administrative action to perform on the entry.
                         create / update / delete."
                    ::=  { rdwrBgpPeerDestRouteEntry 5 }



	
  

rdwrDPTunnel OBJECT IDENTIFIER ::= { rdwrDP 23 }

rdwrDPTunnelTable OBJECT-TYPE
    SYNTAX SEQUENCE OF RdwrDPTunnelEntry
    ACCESS not-accessible
    STATUS  mandatory
    DESCRIPTION
      "Table containing the DP tunnel-interface parameters."
    ::= { rdwrDPTunnel 1 }

rdwrDPTunnelEntry OBJECT-TYPE
    SYNTAX RdwrDPTunnelEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
       "The row definition for this table."
    INDEX { rdwrDPTunnelIp }
    ::=  { rdwrDPTunnelTable 1 }

RdwrDPTunnelEntry ::= SEQUENCE {
    rdwrDPTunnelIp Ipv6Address,
    rdwrDPTunnelIpPrefixLen INTEGER,
    rdwrDPTunnelDesc DisplayString,
    rdwrDPTunnelIfIndex INTEGER,
    rdwrDPTunnelPrimSrcIp Ipv6Address,
    rdwrDPTunnelPrimDstIp Ipv6Address,
    rdwrDPTunnelScndSrcIp Ipv6Address,
    rdwrDPTunnelScndDstIp Ipv6Address,
    rdwrDPTunnelRedundancyState INTEGER,
    rdwrDPTunnelKeepaliveState INTEGER,
    rdwrDPTunnelRowStatus RowStatus
}

rdwrDPTunnelIp OBJECT-TYPE
    SYNTAX Ipv6Address
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The IP address of the tunnel-interface."
    ::=  { rdwrDPTunnelEntry 1 }
    
rdwrDPTunnelIpPrefixLen OBJECT-TYPE
    SYNTAX INTEGER (0..128)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The prefix length of the tunnel-interface subnet."
    ::=  { rdwrDPTunnelEntry 2 }

rdwrDPTunnelDesc OBJECT-TYPE
    SYNTAX DisplayString (SIZE(0..16))
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The description of the tunnel-interface."
    ::=  { rdwrDPTunnelEntry 3 }

rdwrDPTunnelIfIndex OBJECT-TYPE
    SYNTAX INTEGER
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The index of the tunne-interface."
    ::=  { rdwrDPTunnelEntry 4 }

rdwrDPTunnelPrimSrcIp OBJECT-TYPE
    SYNTAX Ipv6Address
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The primary source IP of the tunnel-interface. Must 
       match the IP address of one of the device IP interfaces."
    ::=  { rdwrDPTunnelEntry 5 }

rdwrDPTunnelPrimDstIp OBJECT-TYPE
    SYNTAX Ipv6Address
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The primary destination IP of the tunnel-interface."
    ::=  { rdwrDPTunnelEntry 6 }

rdwrDPTunnelScndSrcIp OBJECT-TYPE
    SYNTAX Ipv6Address
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The secondary source IP of the tunnel-interface. Must 
       match the IP address of one of the device IP interfaces."
    ::=  { rdwrDPTunnelEntry 7 }
	
rdwrDPTunnelScndDstIp OBJECT-TYPE
    SYNTAX Ipv6Address
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The secondary destination IP of the tunnel-interface."
    ::=  { rdwrDPTunnelEntry 8 }

rdwrDPTunnelRedundancyState OBJECT-TYPE
    SYNTAX INTEGER {
      on(1),
      off(2)
    }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "Indicate whether a tunnel-interface has a redundancy tunnel. "
	DEFVAL { off }
    ::=  { rdwrDPTunnelEntry 9 }
		
rdwrDPTunnelKeepaliveState OBJECT-TYPE
    SYNTAX INTEGER {
      on(1),
      off(2)
    }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "Indicate whether to use GRE keepalives. "
	DEFVAL { on }
    ::=  { rdwrDPTunnelEntry 10 }
        
rdwrDPTunnelRowStatus OBJECT-TYPE
    SYNTAX RowStatus
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
       "This variable indicates the administrative status of this entry.
        Used to delete an entry of this table."
    ::=  { rdwrDPTunnelEntry 11 }

rdwrDPTunnelMonTable OBJECT-TYPE
    SYNTAX SEQUENCE OF RdwrDPTunnelMonEntry
    ACCESS not-accessible
    STATUS  mandatory
    DESCRIPTION
      "Table containing the DP tunnel-interface monitoring information."
    ::= { rdwrDPTunnel 2 }

rdwrDPTunnelMonEntry OBJECT-TYPE
    SYNTAX RdwrDPTunnelMonEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
       "The row definition for this table."
    INDEX { rdwrDPTunnelMonIp }
    ::=  { rdwrDPTunnelMonTable 1 }

RdwrDPTunnelMonEntry ::= SEQUENCE {
    rdwrDPTunnelMonIp Ipv6Address,
    rdwrDPTunnelMonPrimStatus INTEGER,
    rdwrDPTunnelMonScndStatus INTEGER,
    rdwrDPTunnelMonRowStatus RowStatus
}

rdwrDPTunnelMonIp OBJECT-TYPE
    SYNTAX Ipv6Address
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The IP address of the monitored tunnel-interface."
    ::=  { rdwrDPTunnelMonEntry 1 }
    
rdwrDPTunnelMonPrimStatus OBJECT-TYPE
    SYNTAX INTEGER {
      active(1),
      passive(2),
      suspiciousActive(3),
      suspiciousPassive(4),
      unreachable(5)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The status of the primary tunnel."
    ::=  { rdwrDPTunnelMonEntry 2 }

rdwrDPTunnelMonScndStatus OBJECT-TYPE
    SYNTAX INTEGER {
      active(1),
      passive(2),
      suspiciousActive(3),
      suspiciousPassive(4),
      unreachable(5)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
      "The status of the secondary tunnel."
    ::=  { rdwrDPTunnelMonEntry 3 }

rdwrDPTunnelMonRowStatus OBJECT-TYPE
    SYNTAX RowStatus
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
       "This variable indicates the administrative status of this entry.
        Used to delete an entry of this table."
    ::=  { rdwrDPTunnelMonEntry 4 }

rdwrDPTunnelMonTotalTunnels OBJECT-TYPE
    SYNTAX DisplayString (SIZE(3..9))
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
       "This variable indicates the number of the reachable tunnels out of the total tunnels."
    ::=  {rdwrDPTunnel 3}

rdwrDPTunnelGreKeepaliveInterval OBJECT-TYPE
    SYNTAX INTEGER (1..32767)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The time interval in seconds at which keepalive messages are sent."
    DEFVAL { 3 }
    ::=  {rdwrDPTunnel 4}

rdwrDPTunnelGreKeepaliveRetries OBJECT-TYPE
    SYNTAX INTEGER (1..255)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
      "The time interval in seconds at which keepalive messages are sent."
    DEFVAL { 10 }
    ::=  {rdwrDPTunnel 5}


-- Note: There is still a gap between MIBS: 12-18 (ArikC. 09/10/2011)

	
-- Enterprise-specific traps for DEFENSE PRO
-- Each enterprise-specific trap has two bound variables describing the exact nature of
-- the trap. rndErrorDesc provides a detailed description of the problem, including the
-- related interface number, board number or any other applicable variable.
-- rndErrorSeverity describes the severity of this problem.

-- Trap template
-- -------------
--    TRAP-TYPE
--       ENTERPRISE  rdwrDP
--       VARIABLES   { rndErrorDesc, rndErrorSeverity }
--       DESCRIPTION
--             ""
--       ::=
-- -------------

rdwrDPAllBypassPortsEnabled TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This info trap is generated when the status of all bypass ports is set to enable."
   ::= 1
   
rdwrDPAllBypassPortsDisabled TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This info trap is generated when the status of all bypass ports is set to disable."
   ::= 2

rdwrDPtrafficCapacity90percent TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This warning trap is generated when the devices reaches 90% of its traffic capacity."
   ::= 3
   
rdwrDPtrafficCapacity100percent TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This warning trap is generated when the devices reaches 100% of its traffic capacity."
   ::= 4

rdwrDPSmeOverloadActivation TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This info trap is generated when the SME overload mechanism activated or deactivated."
   ::= 5

rdwrDPOverloadAlertsActivation TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This info trap is generated when overload alerts activated or deactivated."
   ::= 6

rdwrDPFanStatus TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This warning trap is generated when a fan stop working."
   ::= 7

rdwrUserConfigurationChange TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This info trap is generated when on user configuration change."
   ::= 8

rdwrDPHighAvailabilityInfoTrap TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This info trap is generated upon high availability event"
   ::= 9
   
rdwrDPHighAvailabilityWarningTrap TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This warning trap is generated upon high availability event"
   ::= 10

rdwrDPHighAvailabilityErrorTrap TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This error trap is generated upon high availability event"
   ::= 11
   
rdwrDPPacketTraceWarningTrap TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This error trap is generated upon packet-trace port limit event"
   ::= 12

rdwrIDSLocalOutOfPathWarningTrap  TRAP-TYPE
       ENTERPRISE  rdwrDP
       VARIABLES { rndErrorDesc, rndErrorSeverity }
	   DESCRIPTION
      "This error trap is generated upon Local Out-of-Path Failure event"
   ::= 13 
	   
rdwrIDSLocalOutOfPathInfoTrap  TRAP-TYPE
       ENTERPRISE  rdwrDP
       VARIABLES { rndErrorDesc, rndErrorSeverity }
	   DESCRIPTION
      "This error trap is generated upon Local Out-of-Path Success event"
   ::= 14 
   
rdwrDPPacketTraceInfoTrap TRAP-TYPE
   ENTERPRISE rdwrDP
   VARIABLES { rndErrorDesc, rndErrorSeverity }
   DESCRIPTION
      "This error trap is generated upon packet-trace port limit event"
   ::= 15
   
END

